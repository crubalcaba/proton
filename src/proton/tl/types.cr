# Copyright 2020 - Chris Watson <cawatson1993@gmail.com>
#
# You should have received with this program a copy of the MIT license. This code is
# subject to the terms and conditions outlined in said license. For more information,
# please see https://en.wikipedia.org/wiki/MIT_License.
#
# This file was autogenerated. Please do not modify directory.
require "../helpers"
require "../tl_object"

module Proton
  module TL
    abstract class InputPeer < TLObject
    end
    
    abstract class InputContact < TLObject
    end
    
    abstract class InputMedia < TLObject
    end
    
    abstract class Peer < TLObject
    end
    
    abstract class UserStatus < TLObject
    end
    
    abstract class MessageMedia < TLObject
    end
    
    abstract class MessageAction < TLObject
    end
    
    abstract class ReportReason < TLObject
    end
    
    abstract class MessagesFilter < TLObject
    end
    
    abstract class Update < TLObject
    end
    
    abstract class SendMessageAction < TLObject
    end
    
    abstract class InputPrivacyKey < TLObject
    end
    
    abstract class PrivacyKey < TLObject
    end
    
    abstract class InputPrivacyRule < TLObject
    end
    
    abstract class PrivacyRule < TLObject
    end
    
    abstract class DocumentAttribute < TLObject
    end
    
    abstract class ExportedChatInvite < TLObject
    end
    
    abstract class InputStickerSet < TLObject
    end
    
    abstract class ReplyMarkup < TLObject
    end
    
    abstract class MessageEntity < TLObject
    end
    
    abstract class ChannelParticipantsFilter < TLObject
    end
    
    abstract class InputBotInlineMessage < TLObject
    end
    
    abstract class BotInlineMessage < TLObject
    end
    
    abstract class TopPeerCategory < TLObject
    end
    
    abstract class InputStickeredMedia < TLObject
    end
    
    abstract class InputGame < TLObject
    end
    
    abstract class RichText < TLObject
    end
    
    abstract class PageBlock < TLObject
    end
    
    abstract class PhoneCallDiscardReason < TLObject
    end
    
    abstract class PaymentSavedCredentials < TLObject
    end
    
    abstract class ChannelAdminLogEventAction < TLObject
    end
    
    abstract class RecentMeUrl < TLObject
    end
    
    abstract class InputMessage < TLObject
    end
    
    abstract class SecurePlainData < TLObject
    end
    
    abstract class SecureValueType < TLObject
    end
    
    abstract class SavedContact < TLObject
    end
    
    abstract class PasswordKdfAlgo < TLObject
    end
    
    abstract class SecurePasswordKdfAlgo < TLObject
    end
    
    abstract class JSONObjectValue < TLObject
    end
    
    abstract class JSONValue < TLObject
    end
    
    abstract class PageListItem < TLObject
    end
    
    abstract class PageListOrderedItem < TLObject
    end
    
    abstract class FileLocation < TLObject
    end
    
    abstract class UrlAuthResult < TLObject
    end
    
    abstract class BaseTheme < TLObject
    end
    
    abstract class WebPageAttribute < TLObject
    end
    
    abstract class PQInnerData < TLObject
    end
    
    abstract class ServerDHParams < TLObject
    end
    
    abstract class ServerDHInnerData < TLObject
    end
    
    abstract class ClientDHInnerData < TLObject
    end
    
    abstract class SetClientDHParamsAnswer < TLObject
    end
    
    abstract class DestroyAuthKeyRes < TLObject
    end
    
    abstract class RpcDropAnswer < TLObject
    end
    
    abstract class DestroySessionRes < TLObject
    end
    
    abstract class NewSession < TLObject
    end
    
    abstract class TlsBlock < TLObject
    end
    
    class InputPeerEmpty < InputPeer
      getter constructor_id = 0x7f3b18ea_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputPeerSelf < InputPeer
      getter constructor_id = 0x7da07ec9_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputPeerChat < InputPeer
      getter constructor_id = 0x179be863_u32
      
      property chat_id : Int32
      
      def initialize(
        @chat_id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@chat_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputPeerUser < InputPeer
      getter constructor_id = 0x7b8e7de6_u32
      
      property user_id : Int32
      property access_hash : Int64
      
      def initialize(
        @user_id : Int32,
        @access_hash : Int64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputPeerChannel < InputPeer
      getter constructor_id = 0x20adaef8_u32
      
      property channel_id : Int32
      property access_hash : Int64
      
      def initialize(
        @channel_id : Int32,
        @access_hash : Int64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@channel_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputPeerUserFromMessage < InputPeer
      getter constructor_id = 0x17bae2e6_u32
      
      property peer : InputPeer
      property msg_id : Int32
      property user_id : Int32
      
      def initialize(
        @peer : InputPeer,
        @msg_id : Int32,
        @user_id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@peer.to_bytes)
        buffer.write_bytes(@msg_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputPeerChannelFromMessage < InputPeer
      getter constructor_id = 0x9c95f7bb_u32
      
      property peer : InputPeer
      property msg_id : Int32
      property channel_id : Int32
      
      def initialize(
        @peer : InputPeer,
        @msg_id : Int32,
        @channel_id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@peer.to_bytes)
        buffer.write_bytes(@msg_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@channel_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputUserEmpty < InputUser
      getter constructor_id = 0xb98886cf_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputUserSelf < InputUser
      getter constructor_id = 0xf7c1b13f_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputUser < TLObject
      getter constructor_id = 0xd8292816_u32
      
      property user_id : Int32
      property access_hash : Int64
      
      def initialize(
        @user_id : Int32,
        @access_hash : Int64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputUserFromMessage < InputUser
      getter constructor_id = 0x2d117597_u32
      
      property peer : InputPeer
      property msg_id : Int32
      property user_id : Int32
      
      def initialize(
        @peer : InputPeer,
        @msg_id : Int32,
        @user_id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@peer.to_bytes)
        buffer.write_bytes(@msg_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputPhoneContact < InputContact
      getter constructor_id = 0xf392b7f4_u32
      
      property client_id : Int64
      property phone : String
      property first_name : String
      property last_name : String
      
      def initialize(
        @client_id : Int64,
        @phone : String,
        @first_name : String,
        @last_name : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@client_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@phone)
        buffer.write(TLObject.serialize_bytes(@first_name)
        buffer.write(TLObject.serialize_bytes(@last_name)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputFile < TLObject
      getter constructor_id = 0xf52ff27f_u32
      
      property id : Int64
      property parts : Int32
      property name : String
      property md5_checksum : String
      
      def initialize(
        @id : Int64,
        @parts : Int32,
        @name : String,
        @md5_checksum : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@parts, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@name)
        buffer.write(TLObject.serialize_bytes(@md5_checksum)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputFileBig < InputFile
      getter constructor_id = 0xfa4f0bb5_u32
      
      property id : Int64
      property parts : Int32
      property name : String
      
      def initialize(
        @id : Int64,
        @parts : Int32,
        @name : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@parts, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@name)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputMediaEmpty < InputMedia
      getter constructor_id = 0x9664f57f_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputMediaUploadedPhoto < InputMedia
      getter constructor_id = 0x1e287d04_u32
      
      property file : InputFile
      property stickers : Array(InputDocument)?
      property ttl_seconds : Int32?
      
      def initialize(
        @file : InputFile,
        @stickers : Array(InputDocument)? = nil,
        @ttl_seconds : Int32? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@stickers ? 0 : 0)
        buffer.write_byte(@ttl_seconds ? 1 : 0)
        buffer.write(@file.to_bytes)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@stickers.size, IO::ByteFormat::LittleEndian)
        @stickers.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(@ttl_seconds, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputMediaPhoto < InputMedia
      getter constructor_id = 0xb3ba0635_u32
      
      property id : InputPhoto
      property ttl_seconds : Int32?
      
      def initialize(
        @id : InputPhoto,
        @ttl_seconds : Int32? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@ttl_seconds ? 0 : 0)
        buffer.write(@id.to_bytes)
        buffer.write_bytes(@ttl_seconds, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputMediaGeoPoint < InputMedia
      getter constructor_id = 0xf9c44144_u32
      
      property geo_point : InputGeoPoint
      
      def initialize(
        @geo_point : InputGeoPoint
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@geo_point.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputMediaContact < InputMedia
      getter constructor_id = 0xf8ab7dfb_u32
      
      property phone_number : String
      property first_name : String
      property last_name : String
      property vcard : String
      
      def initialize(
        @phone_number : String,
        @first_name : String,
        @last_name : String,
        @vcard : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@phone_number)
        buffer.write(TLObject.serialize_bytes(@first_name)
        buffer.write(TLObject.serialize_bytes(@last_name)
        buffer.write(TLObject.serialize_bytes(@vcard)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputMediaUploadedDocument < InputMedia
      getter constructor_id = 0x5b38c6c1_u32
      
      property file : InputFile
      property mime_type : String
      property attributes : Array(DocumentAttribute)
      property stickers : Array(InputDocument)?
      property ttl_seconds : Int32?
      property thumb : InputFile?
      property nosound_video : Bool?
      
      def initialize(
        @file : InputFile,
        @mime_type : String,
        @attributes : Array(DocumentAttribute),
        @stickers : Array(InputDocument)? = nil,
        @ttl_seconds : Int32? = nil,
        @thumb : InputFile? = nil,
        @nosound_video : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@nosound_video ? 3 : 0)
        buffer.write_byte(@thumb ? 2 : 0)
        buffer.write_byte(@stickers ? 0 : 0)
        buffer.write_byte(@ttl_seconds ? 1 : 0)
        buffer.write(@file.to_bytes)
        buffer.write(@thumb.to_bytes)
        buffer.write(TLObject.serialize_bytes(@mime_type)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@attributes.size, IO::ByteFormat::LittleEndian)
        @attributes.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@stickers.size, IO::ByteFormat::LittleEndian)
        @stickers.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(@ttl_seconds, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputMediaDocument < InputMedia
      getter constructor_id = 0x23ab23d2_u32
      
      property id : InputDocument
      property ttl_seconds : Int32?
      
      def initialize(
        @id : InputDocument,
        @ttl_seconds : Int32? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@ttl_seconds ? 0 : 0)
        buffer.write(@id.to_bytes)
        buffer.write_bytes(@ttl_seconds, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputMediaVenue < InputMedia
      getter constructor_id = 0xc13d1c11_u32
      
      property geo_point : InputGeoPoint
      property title : String
      property address : String
      property provider : String
      property venue_id : String
      property venue_type : String
      
      def initialize(
        @geo_point : InputGeoPoint,
        @title : String,
        @address : String,
        @provider : String,
        @venue_id : String,
        @venue_type : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@geo_point.to_bytes)
        buffer.write(TLObject.serialize_bytes(@title)
        buffer.write(TLObject.serialize_bytes(@address)
        buffer.write(TLObject.serialize_bytes(@provider)
        buffer.write(TLObject.serialize_bytes(@venue_id)
        buffer.write(TLObject.serialize_bytes(@venue_type)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputMediaGifExternal < InputMedia
      getter constructor_id = 0x4843b0fd_u32
      
      property url : String
      property q : String
      
      def initialize(
        @url : String,
        @q : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@url)
        buffer.write(TLObject.serialize_bytes(@q)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputMediaPhotoExternal < InputMedia
      getter constructor_id = 0xe5bbfe1a_u32
      
      property url : String
      property ttl_seconds : Int32?
      
      def initialize(
        @url : String,
        @ttl_seconds : Int32? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@ttl_seconds ? 0 : 0)
        buffer.write(TLObject.serialize_bytes(@url)
        buffer.write_bytes(@ttl_seconds, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputMediaDocumentExternal < InputMedia
      getter constructor_id = 0xfb52dc99_u32
      
      property url : String
      property ttl_seconds : Int32?
      
      def initialize(
        @url : String,
        @ttl_seconds : Int32? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@ttl_seconds ? 0 : 0)
        buffer.write(TLObject.serialize_bytes(@url)
        buffer.write_bytes(@ttl_seconds, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputMediaGame < InputMedia
      getter constructor_id = 0xd33f43f3_u32
      
      property id : InputGame
      
      def initialize(
        @id : InputGame
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@id.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputMediaInvoice < InputMedia
      getter constructor_id = 0xf4e096c3_u32
      
      property title : String
      property description : String
      property invoice : Invoice
      property payload : Bytes
      property provider : String
      property provider_data : DataJSON
      property start_param : String
      property photo : InputWebDocument?
      
      def initialize(
        @title : String,
        @description : String,
        @invoice : Invoice,
        @payload : Bytes,
        @provider : String,
        @provider_data : DataJSON,
        @start_param : String,
        @photo : InputWebDocument? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@photo ? 0 : 0)
        buffer.write(TLObject.serialize_bytes(@title)
        buffer.write(TLObject.serialize_bytes(@description)
        buffer.write(@photo.to_bytes)
        buffer.write(@invoice.to_bytes)
        buffer.write(TLObject.serialize_bytes(@payload)
        buffer.write(TLObject.serialize_bytes(@provider)
        buffer.write(@provider_data.to_bytes)
        buffer.write(TLObject.serialize_bytes(@start_param)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputMediaGeoLive < InputMedia
      getter constructor_id = 0xce4e82fd_u32
      
      property geo_point : InputGeoPoint
      property stopped : Bool?
      property period : Int32?
      
      def initialize(
        @geo_point : InputGeoPoint,
        @stopped : Bool = false,
        @period : Int32? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@stopped ? 0 : 0)
        buffer.write_byte(@period ? 1 : 0)
        buffer.write(@geo_point.to_bytes)
        buffer.write_bytes(@period, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputMediaPoll < InputMedia
      getter constructor_id = 0xabe9ca25_u32
      
      property poll : Poll
      property correct_answers : Array(Bytes)?
      
      def initialize(
        @poll : Poll,
        @correct_answers : Array(Bytes)? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@correct_answers ? 0 : 0)
        buffer.write(@poll.to_bytes)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@correct_answers.size, IO::ByteFormat::LittleEndian)
        @correct_answers.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputMediaDice < InputMedia
      getter constructor_id = 0xaeffa807_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputChatPhotoEmpty < InputChatPhoto
      getter constructor_id = 0x1ca48f57_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputChatUploadedPhoto < InputChatPhoto
      getter constructor_id = 0x927c55b4_u32
      
      property file : InputFile
      
      def initialize(
        @file : InputFile
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@file.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputChatPhoto < TLObject
      getter constructor_id = 0x8953ad37_u32
      
      property id : InputPhoto
      
      def initialize(
        @id : InputPhoto
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@id.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputGeoPointEmpty < InputGeoPoint
      getter constructor_id = 0xe4c123d6_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputGeoPoint < TLObject
      getter constructor_id = 0xf3b7acc9_u32
      
      property lat : Float64
      property long : Float64
      
      def initialize(
        @lat : Float64,
        @long : Float64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@lat, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@long, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputPhotoEmpty < InputPhoto
      getter constructor_id = 0x1cd7bf0d_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputPhoto < TLObject
      getter constructor_id = 0x3bb3b94a_u32
      
      property id : Int64
      property access_hash : Int64
      property file_reference : Bytes
      
      def initialize(
        @id : Int64,
        @access_hash : Int64,
        @file_reference : Bytes
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@file_reference)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputFileLocation < TLObject
      getter constructor_id = 0xdfdaabe1_u32
      
      property volume_id : Int64
      property local_id : Int32
      property secret : Int64
      property file_reference : Bytes
      
      def initialize(
        @volume_id : Int64,
        @local_id : Int32,
        @secret : Int64,
        @file_reference : Bytes
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@volume_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@local_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@secret, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@file_reference)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputEncryptedFileLocation < InputFileLocation
      getter constructor_id = 0xf5235d55_u32
      
      property id : Int64
      property access_hash : Int64
      
      def initialize(
        @id : Int64,
        @access_hash : Int64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputDocumentFileLocation < InputFileLocation
      getter constructor_id = 0xbad07584_u32
      
      property id : Int64
      property access_hash : Int64
      property file_reference : Bytes
      property thumb_size : String
      
      def initialize(
        @id : Int64,
        @access_hash : Int64,
        @file_reference : Bytes,
        @thumb_size : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@file_reference)
        buffer.write(TLObject.serialize_bytes(@thumb_size)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputSecureFileLocation < InputFileLocation
      getter constructor_id = 0xcbc7ee28_u32
      
      property id : Int64
      property access_hash : Int64
      
      def initialize(
        @id : Int64,
        @access_hash : Int64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputTakeoutFileLocation < InputFileLocation
      getter constructor_id = 0x29be5899_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputPhotoFileLocation < InputFileLocation
      getter constructor_id = 0x40181ffe_u32
      
      property id : Int64
      property access_hash : Int64
      property file_reference : Bytes
      property thumb_size : String
      
      def initialize(
        @id : Int64,
        @access_hash : Int64,
        @file_reference : Bytes,
        @thumb_size : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@file_reference)
        buffer.write(TLObject.serialize_bytes(@thumb_size)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputPhotoLegacyFileLocation < InputFileLocation
      getter constructor_id = 0xd83466f3_u32
      
      property id : Int64
      property access_hash : Int64
      property file_reference : Bytes
      property volume_id : Int64
      property local_id : Int32
      property secret : Int64
      
      def initialize(
        @id : Int64,
        @access_hash : Int64,
        @file_reference : Bytes,
        @volume_id : Int64,
        @local_id : Int32,
        @secret : Int64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@file_reference)
        buffer.write_bytes(@volume_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@local_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@secret, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputPeerPhotoFileLocation < InputFileLocation
      getter constructor_id = 0x27d69997_u32
      
      property peer : InputPeer
      property volume_id : Int64
      property local_id : Int32
      property big : Bool?
      
      def initialize(
        @peer : InputPeer,
        @volume_id : Int64,
        @local_id : Int32,
        @big : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@big ? 0 : 0)
        buffer.write(@peer.to_bytes)
        buffer.write_bytes(@volume_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@local_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputStickerSetThumb < InputFileLocation
      getter constructor_id = 0x0dbaeae9_u32
      
      property stickerset : InputStickerSet
      property volume_id : Int64
      property local_id : Int32
      
      def initialize(
        @stickerset : InputStickerSet,
        @volume_id : Int64,
        @local_id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@stickerset.to_bytes)
        buffer.write_bytes(@volume_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@local_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PeerUser < Peer
      getter constructor_id = 0x9db1bc6d_u32
      
      property user_id : Int32
      
      def initialize(
        @user_id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PeerChat < Peer
      getter constructor_id = 0xbad0e5bb_u32
      
      property chat_id : Int32
      
      def initialize(
        @chat_id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@chat_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PeerChannel < Peer
      getter constructor_id = 0xbddde532_u32
      
      property channel_id : Int32
      
      def initialize(
        @channel_id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@channel_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UserEmpty < User
      getter constructor_id = 0x200250ba_u32
      
      property id : Int32
      
      def initialize(
        @id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class User < TLObject
      getter constructor_id = 0x938458c1_u32
      
      property id : Int32
      property access_hash : Int64?
      property first_name : String?
      property last_name : String?
      property username : String?
      property phone : String?
      property photo : UserProfilePhoto?
      property status : UserStatus?
      property self : Bool?
      property contact : Bool?
      property mutual_contact : Bool?
      property deleted : Bool?
      property bot_info_version : Int32?
      property bot : Bool?
      property bot_chat_history : Bool?
      property bot_nochats : Bool?
      property verified : Bool?
      property restriction_reason : Array(RestrictionReason)?
      property restricted : Bool?
      property bot_inline_placeholder : String?
      property min : Bool?
      property bot_inline_geo : Bool?
      property lang_code : String?
      property support : Bool?
      property scam : Bool?
      
      def initialize(
        @id : Int32,
        @access_hash : Int64? = nil,
        @first_name : String? = nil,
        @last_name : String? = nil,
        @username : String? = nil,
        @phone : String? = nil,
        @photo : UserProfilePhoto? = nil,
        @status : UserStatus? = nil,
        @self : Bool = false,
        @contact : Bool = false,
        @mutual_contact : Bool = false,
        @deleted : Bool = false,
        @bot_info_version : Int32? = nil,
        @bot : Bool = false,
        @bot_chat_history : Bool = false,
        @bot_nochats : Bool = false,
        @verified : Bool = false,
        @restriction_reason : Array(RestrictionReason)? = nil,
        @restricted : Bool = false,
        @bot_inline_placeholder : String? = nil,
        @min : Bool = false,
        @bot_inline_geo : Bool = false,
        @lang_code : String? = nil,
        @support : Bool = false,
        @scam : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@self ? 10 : 0)
        buffer.write_byte(@contact ? 11 : 0)
        buffer.write_byte(@mutual_contact ? 12 : 0)
        buffer.write_byte(@deleted ? 13 : 0)
        buffer.write_byte(@bot ? 14 : 0)
        buffer.write_byte(@bot_chat_history ? 15 : 0)
        buffer.write_byte(@bot_nochats ? 16 : 0)
        buffer.write_byte(@verified ? 17 : 0)
        buffer.write_byte(@restricted ? 18 : 0)
        buffer.write_byte(@min ? 20 : 0)
        buffer.write_byte(@bot_inline_geo ? 21 : 0)
        buffer.write_byte(@support ? 23 : 0)
        buffer.write_byte(@scam ? 24 : 0)
        buffer.write_byte(@access_hash ? 0 : 0)
        buffer.write_byte(@first_name ? 1 : 0)
        buffer.write_byte(@last_name ? 2 : 0)
        buffer.write_byte(@username ? 3 : 0)
        buffer.write_byte(@phone ? 4 : 0)
        buffer.write_byte(@photo ? 5 : 0)
        buffer.write_byte(@status ? 6 : 0)
        buffer.write_byte(@bot_info_version ? 14 : 0)
        buffer.write_byte(@restriction_reason ? 18 : 0)
        buffer.write_byte(@bot_inline_placeholder ? 19 : 0)
        buffer.write_byte(@lang_code ? 22 : 0)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@first_name)
        buffer.write(TLObject.serialize_bytes(@last_name)
        buffer.write(TLObject.serialize_bytes(@username)
        buffer.write(TLObject.serialize_bytes(@phone)
        buffer.write(@photo.to_bytes)
        buffer.write(@status.to_bytes)
        buffer.write_bytes(@bot_info_version, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@restriction_reason.size, IO::ByteFormat::LittleEndian)
        @restriction_reason.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write(TLObject.serialize_bytes(@bot_inline_placeholder)
        buffer.write(TLObject.serialize_bytes(@lang_code)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UserProfilePhotoEmpty < UserProfilePhoto
      getter constructor_id = 0x4f11bae1_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UserProfilePhoto < TLObject
      getter constructor_id = 0xecd75d8c_u32
      
      property photo_id : Int64
      property photo_small : FileLocation
      property photo_big : FileLocation
      property dc_id : Int32
      
      def initialize(
        @photo_id : Int64,
        @photo_small : FileLocation,
        @photo_big : FileLocation,
        @dc_id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@photo_id, IO::ByteFormat::LittleEndian)
        buffer.write(@photo_small.to_bytes)
        buffer.write(@photo_big.to_bytes)
        buffer.write_bytes(@dc_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UserStatusEmpty < UserStatus
      getter constructor_id = 0x09d05049_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UserStatusOnline < UserStatus
      getter constructor_id = 0xedb93949_u32
      
      property expires : Int32
      
      def initialize(
        @expires : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@expires, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UserStatusOffline < UserStatus
      getter constructor_id = 0x008c703f_u32
      
      property was_online : Int32
      
      def initialize(
        @was_online : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@was_online, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UserStatusRecently < UserStatus
      getter constructor_id = 0xe26f42f1_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UserStatusLastWeek < UserStatus
      getter constructor_id = 0x07bf09fc_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UserStatusLastMonth < UserStatus
      getter constructor_id = 0x77ebc742_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChatEmpty < Chat
      getter constructor_id = 0x9ba2d800_u32
      
      property id : Int32
      
      def initialize(
        @id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class Chat < TLObject
      getter constructor_id = 0x3bda1bde_u32
      
      property id : Int32
      property title : String
      property photo : ChatPhoto
      property participants_count : Int32
      property date : Int32
      property version : Int32
      property creator : Bool?
      property kicked : Bool?
      property left : Bool?
      property deactivated : Bool?
      property migrated_to : InputChannel?
      property admin_rights : ChatAdminRights?
      property default_banned_rights : ChatBannedRights?
      
      def initialize(
        @id : Int32,
        @title : String,
        @photo : ChatPhoto,
        @participants_count : Int32,
        @date : Int32,
        @version : Int32,
        @creator : Bool = false,
        @kicked : Bool = false,
        @left : Bool = false,
        @deactivated : Bool = false,
        @migrated_to : InputChannel? = nil,
        @admin_rights : ChatAdminRights? = nil,
        @default_banned_rights : ChatBannedRights? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@creator ? 0 : 0)
        buffer.write_byte(@kicked ? 1 : 0)
        buffer.write_byte(@left ? 2 : 0)
        buffer.write_byte(@deactivated ? 5 : 0)
        buffer.write_byte(@migrated_to ? 6 : 0)
        buffer.write_byte(@admin_rights ? 14 : 0)
        buffer.write_byte(@default_banned_rights ? 18 : 0)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@title)
        buffer.write(@photo.to_bytes)
        buffer.write_bytes(@participants_count, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@version, IO::ByteFormat::LittleEndian)
        buffer.write(@migrated_to.to_bytes)
        buffer.write(@admin_rights.to_bytes)
        buffer.write(@default_banned_rights.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChatForbidden < Chat
      getter constructor_id = 0x07328bdb_u32
      
      property id : Int32
      property title : String
      
      def initialize(
        @id : Int32,
        @title : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@title)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class Channel < Chat
      getter constructor_id = 0xd31a961e_u32
      
      property id : Int32
      property version : Int32
      property date : Int32
      property photo : ChatPhoto
      property title : String
      property creator : Bool?
      property left : Bool?
      property broadcast : Bool?
      property username : String?
      property verified : Bool?
      property megagroup : Bool?
      property restriction_reason : Array(RestrictionReason)?
      property restricted : Bool?
      property signatures : Bool?
      property min : Bool?
      property access_hash : Int64?
      property admin_rights : ChatAdminRights?
      property banned_rights : ChatBannedRights?
      property participants_count : Int32?
      property default_banned_rights : ChatBannedRights?
      property scam : Bool?
      property has_link : Bool?
      property has_geo : Bool?
      property slowmode_enabled : Bool?
      
      def initialize(
        @id : Int32,
        @version : Int32,
        @date : Int32,
        @photo : ChatPhoto,
        @title : String,
        @creator : Bool = false,
        @left : Bool = false,
        @broadcast : Bool = false,
        @username : String? = nil,
        @verified : Bool = false,
        @megagroup : Bool = false,
        @restriction_reason : Array(RestrictionReason)? = nil,
        @restricted : Bool = false,
        @signatures : Bool = false,
        @min : Bool = false,
        @access_hash : Int64? = nil,
        @admin_rights : ChatAdminRights? = nil,
        @banned_rights : ChatBannedRights? = nil,
        @participants_count : Int32? = nil,
        @default_banned_rights : ChatBannedRights? = nil,
        @scam : Bool = false,
        @has_link : Bool = false,
        @has_geo : Bool = false,
        @slowmode_enabled : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@creator ? 0 : 0)
        buffer.write_byte(@left ? 2 : 0)
        buffer.write_byte(@broadcast ? 5 : 0)
        buffer.write_byte(@verified ? 7 : 0)
        buffer.write_byte(@megagroup ? 8 : 0)
        buffer.write_byte(@restricted ? 9 : 0)
        buffer.write_byte(@signatures ? 11 : 0)
        buffer.write_byte(@min ? 12 : 0)
        buffer.write_byte(@scam ? 19 : 0)
        buffer.write_byte(@has_link ? 20 : 0)
        buffer.write_byte(@has_geo ? 21 : 0)
        buffer.write_byte(@slowmode_enabled ? 22 : 0)
        buffer.write_byte(@access_hash ? 13 : 0)
        buffer.write_byte(@username ? 6 : 0)
        buffer.write_byte(@restriction_reason ? 9 : 0)
        buffer.write_byte(@admin_rights ? 14 : 0)
        buffer.write_byte(@banned_rights ? 15 : 0)
        buffer.write_byte(@default_banned_rights ? 18 : 0)
        buffer.write_byte(@participants_count ? 17 : 0)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@title)
        buffer.write(TLObject.serialize_bytes(@username)
        buffer.write(@photo.to_bytes)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@version, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@restriction_reason.size, IO::ByteFormat::LittleEndian)
        @restriction_reason.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write(@admin_rights.to_bytes)
        buffer.write(@banned_rights.to_bytes)
        buffer.write(@default_banned_rights.to_bytes)
        buffer.write_bytes(@participants_count, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelForbidden < Chat
      getter constructor_id = 0x289da732_u32
      
      property id : Int32
      property access_hash : Int64
      property title : String
      property broadcast : Bool?
      property megagroup : Bool?
      property until_date : Int32?
      
      def initialize(
        @id : Int32,
        @access_hash : Int64,
        @title : String,
        @broadcast : Bool = false,
        @megagroup : Bool = false,
        @until_date : Int32? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@broadcast ? 5 : 0)
        buffer.write_byte(@megagroup ? 8 : 0)
        buffer.write_byte(@until_date ? 16 : 0)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@title)
        buffer.write_bytes(@until_date, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChatFull < TLObject
      getter constructor_id = 0x1b7c9db3_u32
      
      property id : Int32
      property about : String
      property participants : ChatParticipants
      property notify_settings : PeerNotifySettings
      property exported_invite : ExportedChatInvite
      property chat_photo : Photo?
      property bot_info : Array(BotInfo)?
      property pinned_msg_id : Int32?
      property can_set_username : Bool?
      property has_scheduled : Bool?
      property folder_id : Int32?
      
      def initialize(
        @id : Int32,
        @about : String,
        @participants : ChatParticipants,
        @notify_settings : PeerNotifySettings,
        @exported_invite : ExportedChatInvite,
        @chat_photo : Photo? = nil,
        @bot_info : Array(BotInfo)? = nil,
        @pinned_msg_id : Int32? = nil,
        @can_set_username : Bool = false,
        @has_scheduled : Bool = false,
        @folder_id : Int32? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@can_set_username ? 7 : 0)
        buffer.write_byte(@has_scheduled ? 8 : 0)
        buffer.write_byte(@chat_photo ? 2 : 0)
        buffer.write_byte(@bot_info ? 3 : 0)
        buffer.write_byte(@pinned_msg_id ? 6 : 0)
        buffer.write_byte(@folder_id ? 11 : 0)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@about)
        buffer.write(@participants.to_bytes)
        buffer.write(@chat_photo.to_bytes)
        buffer.write(@notify_settings.to_bytes)
        buffer.write(@exported_invite.to_bytes)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@bot_info.size, IO::ByteFormat::LittleEndian)
        @bot_info.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(@pinned_msg_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@folder_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelFull < ChatFull
      getter constructor_id = 0xf0e6672a_u32
      
      property unread_count : Int32
      property bot_info : Array(BotInfo)
      property exported_invite : ExportedChatInvite
      property notify_settings : PeerNotifySettings
      property chat_photo : Photo
      property pts : Int32
      property read_outbox_max_id : Int32
      property read_inbox_max_id : Int32
      property about : String
      property id : Int32
      property participants_count : Int32?
      property admins_count : Int32?
      property kicked_count : Int32?
      property banned_count : Int32?
      property can_view_participants : Bool?
      property migrated_from_max_id : Int32?
      property migrated_from_chat_id : Int32?
      property pinned_msg_id : Int32?
      property can_set_username : Bool?
      property can_set_stickers : Bool?
      property stickerset : StickerSet?
      property available_min_id : Int32?
      property hidden_prehistory : Bool?
      property folder_id : Int32?
      property can_view_stats : Bool?
      property stats_dc : Int32?
      property online_count : Int32?
      property linked_chat_id : Int32?
      property location : ChannelLocation?
      property can_set_location : Bool?
      property slowmode_seconds : Int32?
      property slowmode_next_send_date : Int32?
      property has_scheduled : Bool?
      
      def initialize(
        @unread_count : Int32,
        @bot_info : Array(BotInfo),
        @exported_invite : ExportedChatInvite,
        @notify_settings : PeerNotifySettings,
        @chat_photo : Photo,
        @pts : Int32,
        @read_outbox_max_id : Int32,
        @read_inbox_max_id : Int32,
        @about : String,
        @id : Int32,
        @participants_count : Int32? = nil,
        @admins_count : Int32? = nil,
        @kicked_count : Int32? = nil,
        @banned_count : Int32? = nil,
        @can_view_participants : Bool = false,
        @migrated_from_max_id : Int32? = nil,
        @migrated_from_chat_id : Int32? = nil,
        @pinned_msg_id : Int32? = nil,
        @can_set_username : Bool = false,
        @can_set_stickers : Bool = false,
        @stickerset : StickerSet? = nil,
        @available_min_id : Int32? = nil,
        @hidden_prehistory : Bool = false,
        @folder_id : Int32? = nil,
        @can_view_stats : Bool = false,
        @stats_dc : Int32? = nil,
        @online_count : Int32? = nil,
        @linked_chat_id : Int32? = nil,
        @location : ChannelLocation? = nil,
        @can_set_location : Bool = false,
        @slowmode_seconds : Int32? = nil,
        @slowmode_next_send_date : Int32? = nil,
        @has_scheduled : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@can_view_participants ? 3 : 0)
        buffer.write_byte(@can_set_username ? 6 : 0)
        buffer.write_byte(@can_set_stickers ? 7 : 0)
        buffer.write_byte(@hidden_prehistory ? 10 : 0)
        buffer.write_byte(@can_view_stats ? 12 : 0)
        buffer.write_byte(@can_set_location ? 16 : 0)
        buffer.write_byte(@has_scheduled ? 19 : 0)
        buffer.write_byte(@participants_count ? 0 : 0)
        buffer.write_byte(@admins_count ? 1 : 0)
        buffer.write_byte(@kicked_count ? 2 : 0)
        buffer.write_byte(@banned_count ? 2 : 0)
        buffer.write_byte(@online_count ? 13 : 0)
        buffer.write_byte(@migrated_from_chat_id ? 4 : 0)
        buffer.write_byte(@migrated_from_max_id ? 4 : 0)
        buffer.write_byte(@pinned_msg_id ? 5 : 0)
        buffer.write_byte(@stickerset ? 8 : 0)
        buffer.write_byte(@available_min_id ? 9 : 0)
        buffer.write_byte(@folder_id ? 11 : 0)
        buffer.write_byte(@linked_chat_id ? 14 : 0)
        buffer.write_byte(@location ? 15 : 0)
        buffer.write_byte(@slowmode_seconds ? 17 : 0)
        buffer.write_byte(@slowmode_next_send_date ? 18 : 0)
        buffer.write_byte(@stats_dc ? 12 : 0)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@about)
        buffer.write_bytes(@participants_count, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@admins_count, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@kicked_count, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@banned_count, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@online_count, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@read_inbox_max_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@read_outbox_max_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@unread_count, IO::ByteFormat::LittleEndian)
        buffer.write(@chat_photo.to_bytes)
        buffer.write(@notify_settings.to_bytes)
        buffer.write(@exported_invite.to_bytes)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@bot_info.size, IO::ByteFormat::LittleEndian)
        @bot_info.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(@migrated_from_chat_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@migrated_from_max_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@pinned_msg_id, IO::ByteFormat::LittleEndian)
        buffer.write(@stickerset.to_bytes)
        buffer.write_bytes(@available_min_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@folder_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@linked_chat_id, IO::ByteFormat::LittleEndian)
        buffer.write(@location.to_bytes)
        buffer.write_bytes(@slowmode_seconds, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@slowmode_next_send_date, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@stats_dc, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@pts, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChatParticipant < TLObject
      getter constructor_id = 0xc8d7493e_u32
      
      property user_id : Int32
      property inviter_id : Int32
      property date : Int32
      
      def initialize(
        @user_id : Int32,
        @inviter_id : Int32,
        @date : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@inviter_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChatParticipantCreator < ChatParticipant
      getter constructor_id = 0xda13538a_u32
      
      property user_id : Int32
      
      def initialize(
        @user_id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChatParticipantAdmin < ChatParticipant
      getter constructor_id = 0xe2d6e436_u32
      
      property user_id : Int32
      property inviter_id : Int32
      property date : Int32
      
      def initialize(
        @user_id : Int32,
        @inviter_id : Int32,
        @date : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@inviter_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChatParticipantsForbidden < ChatParticipants
      getter constructor_id = 0xfc900c2b_u32
      
      property chat_id : Int32
      property self_participant : ChatParticipant?
      
      def initialize(
        @chat_id : Int32,
        @self_participant : ChatParticipant? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@self_participant ? 0 : 0)
        buffer.write_bytes(@chat_id, IO::ByteFormat::LittleEndian)
        buffer.write(@self_participant.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChatParticipants < TLObject
      getter constructor_id = 0x3f460fed_u32
      
      property chat_id : Int32
      property participants : Array(ChatParticipant)
      property version : Int32
      
      def initialize(
        @chat_id : Int32,
        @participants : Array(ChatParticipant),
        @version : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@chat_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@participants.size, IO::ByteFormat::LittleEndian)
        @participants.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(@version, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChatPhotoEmpty < ChatPhoto
      getter constructor_id = 0x37c1011c_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChatPhoto < TLObject
      getter constructor_id = 0x475cdbd5_u32
      
      property photo_small : FileLocation
      property photo_big : FileLocation
      property dc_id : Int32
      
      def initialize(
        @photo_small : FileLocation,
        @photo_big : FileLocation,
        @dc_id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@photo_small.to_bytes)
        buffer.write(@photo_big.to_bytes)
        buffer.write_bytes(@dc_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageEmpty < Message
      getter constructor_id = 0x83e5de54_u32
      
      property id : Int32
      
      def initialize(
        @id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class Message < TLObject
      getter constructor_id = 0x452c0e65_u32
      
      property message : String
      property id : Int32
      property to_id : Peer
      property date : Int32
      property out : Bool?
      property fwd_from : MessageFwdHeader?
      property reply_to_msg_id : Int32?
      property mentioned : Bool?
      property media_unread : Bool?
      property reply_markup : ReplyMarkup?
      property entities : Array(MessageEntity)?
      property from_id : Int32?
      property media : MessageMedia?
      property views : Int32?
      property via_bot_id : Int32?
      property silent : Bool?
      property post : Bool?
      property edit_date : Int32?
      property post_author : String?
      property grouped_id : Int64?
      property from_scheduled : Bool?
      property legacy : Bool?
      property edit_hide : Bool?
      property restriction_reason : Array(RestrictionReason)?
      
      def initialize(
        @message : String,
        @id : Int32,
        @to_id : Peer,
        @date : Int32,
        @out : Bool = false,
        @fwd_from : MessageFwdHeader? = nil,
        @reply_to_msg_id : Int32? = nil,
        @mentioned : Bool = false,
        @media_unread : Bool = false,
        @reply_markup : ReplyMarkup? = nil,
        @entities : Array(MessageEntity)? = nil,
        @from_id : Int32? = nil,
        @media : MessageMedia? = nil,
        @views : Int32? = nil,
        @via_bot_id : Int32? = nil,
        @silent : Bool = false,
        @post : Bool = false,
        @edit_date : Int32? = nil,
        @post_author : String? = nil,
        @grouped_id : Int64? = nil,
        @from_scheduled : Bool = false,
        @legacy : Bool = false,
        @edit_hide : Bool = false,
        @restriction_reason : Array(RestrictionReason)? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@out ? 1 : 0)
        buffer.write_byte(@mentioned ? 4 : 0)
        buffer.write_byte(@media_unread ? 5 : 0)
        buffer.write_byte(@silent ? 13 : 0)
        buffer.write_byte(@post ? 14 : 0)
        buffer.write_byte(@from_scheduled ? 18 : 0)
        buffer.write_byte(@legacy ? 19 : 0)
        buffer.write_byte(@edit_hide ? 21 : 0)
        buffer.write_byte(@from_id ? 8 : 0)
        buffer.write_byte(@fwd_from ? 2 : 0)
        buffer.write_byte(@via_bot_id ? 11 : 0)
        buffer.write_byte(@reply_to_msg_id ? 3 : 0)
        buffer.write_byte(@media ? 9 : 0)
        buffer.write_byte(@reply_markup ? 6 : 0)
        buffer.write_byte(@entities ? 7 : 0)
        buffer.write_byte(@views ? 10 : 0)
        buffer.write_byte(@edit_date ? 15 : 0)
        buffer.write_byte(@post_author ? 16 : 0)
        buffer.write_byte(@grouped_id ? 17 : 0)
        buffer.write_byte(@restriction_reason ? 22 : 0)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@from_id, IO::ByteFormat::LittleEndian)
        buffer.write(@to_id.to_bytes)
        buffer.write(@fwd_from.to_bytes)
        buffer.write_bytes(@via_bot_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@reply_to_msg_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@message)
        buffer.write(@media.to_bytes)
        buffer.write(@reply_markup.to_bytes)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@entities.size, IO::ByteFormat::LittleEndian)
        @entities.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(@views, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@edit_date, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@post_author)
        buffer.write_bytes(@grouped_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@restriction_reason.size, IO::ByteFormat::LittleEndian)
        @restriction_reason.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageService < Message
      getter constructor_id = 0x9e19a1f6_u32
      
      property id : Int32
      property to_id : Peer
      property date : Int32
      property action : MessageAction
      property out : Bool?
      property reply_to_msg_id : Int32?
      property mentioned : Bool?
      property media_unread : Bool?
      property from_id : Int32?
      property silent : Bool?
      property post : Bool?
      property legacy : Bool?
      
      def initialize(
        @id : Int32,
        @to_id : Peer,
        @date : Int32,
        @action : MessageAction,
        @out : Bool = false,
        @reply_to_msg_id : Int32? = nil,
        @mentioned : Bool = false,
        @media_unread : Bool = false,
        @from_id : Int32? = nil,
        @silent : Bool = false,
        @post : Bool = false,
        @legacy : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@out ? 1 : 0)
        buffer.write_byte(@mentioned ? 4 : 0)
        buffer.write_byte(@media_unread ? 5 : 0)
        buffer.write_byte(@silent ? 13 : 0)
        buffer.write_byte(@post ? 14 : 0)
        buffer.write_byte(@legacy ? 19 : 0)
        buffer.write_byte(@from_id ? 8 : 0)
        buffer.write_byte(@reply_to_msg_id ? 3 : 0)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@from_id, IO::ByteFormat::LittleEndian)
        buffer.write(@to_id.to_bytes)
        buffer.write_bytes(@reply_to_msg_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer.write(@action.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageMediaEmpty < MessageMedia
      getter constructor_id = 0x3ded6320_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageMediaPhoto < MessageMedia
      getter constructor_id = 0x695150d7_u32
      
      property photo : Photo?
      property ttl_seconds : Int32?
      
      def initialize(
        @photo : Photo? = nil,
        @ttl_seconds : Int32? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@photo ? 0 : 0)
        buffer.write_byte(@ttl_seconds ? 2 : 0)
        buffer.write(@photo.to_bytes)
        buffer.write_bytes(@ttl_seconds, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageMediaGeo < MessageMedia
      getter constructor_id = 0x56e0d474_u32
      
      property geo : GeoPoint
      
      def initialize(
        @geo : GeoPoint
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@geo.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageMediaContact < MessageMedia
      getter constructor_id = 0xcbf24940_u32
      
      property phone_number : String
      property first_name : String
      property last_name : String
      property vcard : String
      property user_id : Int32
      
      def initialize(
        @phone_number : String,
        @first_name : String,
        @last_name : String,
        @vcard : String,
        @user_id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@phone_number)
        buffer.write(TLObject.serialize_bytes(@first_name)
        buffer.write(TLObject.serialize_bytes(@last_name)
        buffer.write(TLObject.serialize_bytes(@vcard)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageMediaUnsupported < MessageMedia
      getter constructor_id = 0x9f84f49e_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageMediaDocument < MessageMedia
      getter constructor_id = 0x9cb070d7_u32
      
      property document : Document?
      property ttl_seconds : Int32?
      
      def initialize(
        @document : Document? = nil,
        @ttl_seconds : Int32? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@document ? 0 : 0)
        buffer.write_byte(@ttl_seconds ? 2 : 0)
        buffer.write(@document.to_bytes)
        buffer.write_bytes(@ttl_seconds, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageMediaWebPage < MessageMedia
      getter constructor_id = 0xa32dd600_u32
      
      property webpage : WebPage
      
      def initialize(
        @webpage : WebPage
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@webpage.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageMediaVenue < MessageMedia
      getter constructor_id = 0x2ec0533f_u32
      
      property geo : GeoPoint
      property title : String
      property address : String
      property provider : String
      property venue_id : String
      property venue_type : String
      
      def initialize(
        @geo : GeoPoint,
        @title : String,
        @address : String,
        @provider : String,
        @venue_id : String,
        @venue_type : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@geo.to_bytes)
        buffer.write(TLObject.serialize_bytes(@title)
        buffer.write(TLObject.serialize_bytes(@address)
        buffer.write(TLObject.serialize_bytes(@provider)
        buffer.write(TLObject.serialize_bytes(@venue_id)
        buffer.write(TLObject.serialize_bytes(@venue_type)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageMediaGame < MessageMedia
      getter constructor_id = 0xfdb19008_u32
      
      property game : Game
      
      def initialize(
        @game : Game
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@game.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageMediaInvoice < MessageMedia
      getter constructor_id = 0x84551347_u32
      
      property title : String
      property description : String
      property currency : String
      property total_amount : Int64
      property start_param : String
      property photo : WebDocument?
      property shipping_address_requested : Bool?
      property receipt_msg_id : Int32?
      property test : Bool?
      
      def initialize(
        @title : String,
        @description : String,
        @currency : String,
        @total_amount : Int64,
        @start_param : String,
        @photo : WebDocument? = nil,
        @shipping_address_requested : Bool = false,
        @receipt_msg_id : Int32? = nil,
        @test : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@shipping_address_requested ? 1 : 0)
        buffer.write_byte(@test ? 3 : 0)
        buffer.write_byte(@photo ? 0 : 0)
        buffer.write_byte(@receipt_msg_id ? 2 : 0)
        buffer.write(TLObject.serialize_bytes(@title)
        buffer.write(TLObject.serialize_bytes(@description)
        buffer.write(@photo.to_bytes)
        buffer.write_bytes(@receipt_msg_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@currency)
        buffer.write_bytes(@total_amount, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@start_param)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageMediaGeoLive < MessageMedia
      getter constructor_id = 0x7c3c2609_u32
      
      property geo : GeoPoint
      property period : Int32
      
      def initialize(
        @geo : GeoPoint,
        @period : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@geo.to_bytes)
        buffer.write_bytes(@period, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageMediaPoll < MessageMedia
      getter constructor_id = 0x4bd6e798_u32
      
      property poll : Poll
      property results : PollResults
      
      def initialize(
        @poll : Poll,
        @results : PollResults
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@poll.to_bytes)
        buffer.write(@results.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageMediaDice < MessageMedia
      getter constructor_id = 0x638fe46b_u32
      
      property value : Int32
      
      def initialize(
        @value : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@value, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageActionEmpty < MessageAction
      getter constructor_id = 0xb6aef7b0_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageActionChatCreate < MessageAction
      getter constructor_id = 0xa6638b9a_u32
      
      property title : String
      property users : Array(Int32)
      
      def initialize(
        @title : String,
        @users : Array(Int32)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@title)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@users.size, IO::ByteFormat::LittleEndian)
        @users.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageActionChatEditTitle < MessageAction
      getter constructor_id = 0xb5a1ce5a_u32
      
      property title : String
      
      def initialize(
        @title : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@title)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageActionChatEditPhoto < MessageAction
      getter constructor_id = 0x7fcb13a8_u32
      
      property photo : Photo
      
      def initialize(
        @photo : Photo
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@photo.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageActionChatDeletePhoto < MessageAction
      getter constructor_id = 0x95e3fbef_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageActionChatAddUser < MessageAction
      getter constructor_id = 0x488a7337_u32
      
      property users : Array(Int32)
      
      def initialize(
        @users : Array(Int32)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@users.size, IO::ByteFormat::LittleEndian)
        @users.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageActionChatDeleteUser < MessageAction
      getter constructor_id = 0xb2ae9b0c_u32
      
      property user_id : Int32
      
      def initialize(
        @user_id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageActionChatJoinedByLink < MessageAction
      getter constructor_id = 0xf89cf5e8_u32
      
      property inviter_id : Int32
      
      def initialize(
        @inviter_id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@inviter_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageActionChannelCreate < MessageAction
      getter constructor_id = 0x95d2ac92_u32
      
      property title : String
      
      def initialize(
        @title : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@title)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageActionChatMigrateTo < MessageAction
      getter constructor_id = 0x51bdb021_u32
      
      property channel_id : Int32
      
      def initialize(
        @channel_id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@channel_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageActionChannelMigrateFrom < MessageAction
      getter constructor_id = 0xb055eaee_u32
      
      property title : String
      property chat_id : Int32
      
      def initialize(
        @title : String,
        @chat_id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@title)
        buffer.write_bytes(@chat_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageActionPinMessage < MessageAction
      getter constructor_id = 0x94bd38ed_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageActionHistoryClear < MessageAction
      getter constructor_id = 0x9fbab604_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageActionGameScore < MessageAction
      getter constructor_id = 0x92a72876_u32
      
      property game_id : Int64
      property score : Int32
      
      def initialize(
        @game_id : Int64,
        @score : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@game_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@score, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageActionPaymentSentMe < MessageAction
      getter constructor_id = 0x8f31b327_u32
      
      property currency : String
      property total_amount : Int64
      property payload : Bytes
      property charge : PaymentCharge
      property info : PaymentRequestedInfo?
      property shipping_option_id : String?
      
      def initialize(
        @currency : String,
        @total_amount : Int64,
        @payload : Bytes,
        @charge : PaymentCharge,
        @info : PaymentRequestedInfo? = nil,
        @shipping_option_id : String? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@info ? 0 : 0)
        buffer.write_byte(@shipping_option_id ? 1 : 0)
        buffer.write(TLObject.serialize_bytes(@currency)
        buffer.write_bytes(@total_amount, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@payload)
        buffer.write(@info.to_bytes)
        buffer.write(TLObject.serialize_bytes(@shipping_option_id)
        buffer.write(@charge.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageActionPaymentSent < MessageAction
      getter constructor_id = 0x40699cd0_u32
      
      property currency : String
      property total_amount : Int64
      
      def initialize(
        @currency : String,
        @total_amount : Int64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@currency)
        buffer.write_bytes(@total_amount, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageActionPhoneCall < MessageAction
      getter constructor_id = 0x80e11a7f_u32
      
      property call_id : Int64
      property reason : PhoneCallDiscardReason?
      property duration : Int32?
      property video : Bool?
      
      def initialize(
        @call_id : Int64,
        @reason : PhoneCallDiscardReason? = nil,
        @duration : Int32? = nil,
        @video : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@video ? 2 : 0)
        buffer.write_byte(@reason ? 0 : 0)
        buffer.write_byte(@duration ? 1 : 0)
        buffer.write_bytes(@call_id, IO::ByteFormat::LittleEndian)
        buffer.write(@reason.to_bytes)
        buffer.write_bytes(@duration, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageActionScreenshotTaken < MessageAction
      getter constructor_id = 0x4792929b_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageActionCustomAction < MessageAction
      getter constructor_id = 0xfae69f56_u32
      
      property message : String
      
      def initialize(
        @message : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@message)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageActionBotAllowed < MessageAction
      getter constructor_id = 0xabe9affe_u32
      
      property domain : String
      
      def initialize(
        @domain : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@domain)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageActionSecureValuesSentMe < MessageAction
      getter constructor_id = 0x1b287353_u32
      
      property values : Array(SecureValue)
      property credentials : SecureCredentialsEncrypted
      
      def initialize(
        @values : Array(SecureValue),
        @credentials : SecureCredentialsEncrypted
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@values.size, IO::ByteFormat::LittleEndian)
        @values.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write(@credentials.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageActionSecureValuesSent < MessageAction
      getter constructor_id = 0xd95c6154_u32
      
      property types : Array(SecureValueType)
      
      def initialize(
        @types : Array(SecureValueType)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@types.size, IO::ByteFormat::LittleEndian)
        @types.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageActionContactSignUp < MessageAction
      getter constructor_id = 0xf3f25f76_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class Dialog < TLObject
      getter constructor_id = 0x2c171f72_u32
      
      property peer : Peer
      property top_message : Int32
      property read_inbox_max_id : Int32
      property read_outbox_max_id : Int32
      property unread_count : Int32
      property unread_mentions_count : Int32
      property notify_settings : PeerNotifySettings
      property pts : Int32?
      property draft : DraftMessage?
      property pinned : Bool?
      property unread_mark : Bool?
      property folder_id : Int32?
      
      def initialize(
        @peer : Peer,
        @top_message : Int32,
        @read_inbox_max_id : Int32,
        @read_outbox_max_id : Int32,
        @unread_count : Int32,
        @unread_mentions_count : Int32,
        @notify_settings : PeerNotifySettings,
        @pts : Int32? = nil,
        @draft : DraftMessage? = nil,
        @pinned : Bool = false,
        @unread_mark : Bool = false,
        @folder_id : Int32? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@pinned ? 2 : 0)
        buffer.write_byte(@unread_mark ? 3 : 0)
        buffer.write_byte(@pts ? 0 : 0)
        buffer.write_byte(@draft ? 1 : 0)
        buffer.write_byte(@folder_id ? 4 : 0)
        buffer.write(@peer.to_bytes)
        buffer.write_bytes(@top_message, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@read_inbox_max_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@read_outbox_max_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@unread_count, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@unread_mentions_count, IO::ByteFormat::LittleEndian)
        buffer.write(@notify_settings.to_bytes)
        buffer.write_bytes(@pts, IO::ByteFormat::LittleEndian)
        buffer.write(@draft.to_bytes)
        buffer.write_bytes(@folder_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class DialogFolder < Dialog
      getter constructor_id = 0x71bd134c_u32
      
      property folder : Folder
      property peer : Peer
      property top_message : Int32
      property unread_muted_peers_count : Int32
      property unread_unmuted_peers_count : Int32
      property unread_muted_messages_count : Int32
      property unread_unmuted_messages_count : Int32
      property pinned : Bool?
      
      def initialize(
        @folder : Folder,
        @peer : Peer,
        @top_message : Int32,
        @unread_muted_peers_count : Int32,
        @unread_unmuted_peers_count : Int32,
        @unread_muted_messages_count : Int32,
        @unread_unmuted_messages_count : Int32,
        @pinned : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@pinned ? 2 : 0)
        buffer.write(@folder.to_bytes)
        buffer.write(@peer.to_bytes)
        buffer.write_bytes(@top_message, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@unread_muted_peers_count, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@unread_unmuted_peers_count, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@unread_muted_messages_count, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@unread_unmuted_messages_count, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PhotoEmpty < Photo
      getter constructor_id = 0x2331b22d_u32
      
      property id : Int64
      
      def initialize(
        @id : Int64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class Photo < TLObject
      getter constructor_id = 0xd07504a5_u32
      
      property id : Int64
      property access_hash : Int64
      property file_reference : Bytes
      property date : Int32
      property sizes : Array(PhotoSize)
      property dc_id : Int32
      property has_stickers : Bool?
      
      def initialize(
        @id : Int64,
        @access_hash : Int64,
        @file_reference : Bytes,
        @date : Int32,
        @sizes : Array(PhotoSize),
        @dc_id : Int32,
        @has_stickers : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@has_stickers ? 0 : 0)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@file_reference)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@sizes.size, IO::ByteFormat::LittleEndian)
        @sizes.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(@dc_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PhotoSizeEmpty < PhotoSize
      getter constructor_id = 0x0e17e23c_u32
      
      property type : String
      
      def initialize(
        @type : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@type)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PhotoSize < TLObject
      getter constructor_id = 0x77bfb61b_u32
      
      property type : String
      property location : FileLocation
      property w : Int32
      property h : Int32
      property size : Int32
      
      def initialize(
        @type : String,
        @location : FileLocation,
        @w : Int32,
        @h : Int32,
        @size : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@type)
        buffer.write(@location.to_bytes)
        buffer.write_bytes(@w, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@h, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@size, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PhotoCachedSize < PhotoSize
      getter constructor_id = 0xe9a734fa_u32
      
      property type : String
      property location : FileLocation
      property w : Int32
      property h : Int32
      property bytes : Bytes
      
      def initialize(
        @type : String,
        @location : FileLocation,
        @w : Int32,
        @h : Int32,
        @bytes : Bytes
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@type)
        buffer.write(@location.to_bytes)
        buffer.write_bytes(@w, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@h, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PhotoStrippedSize < PhotoSize
      getter constructor_id = 0xe0b0bc2e_u32
      
      property type : String
      property bytes : Bytes
      
      def initialize(
        @type : String,
        @bytes : Bytes
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@type)
        buffer.write(TLObject.serialize_bytes(@bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class GeoPointEmpty < GeoPoint
      getter constructor_id = 0x1117dd5f_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class GeoPoint < TLObject
      getter constructor_id = 0x0296f104_u32
      
      property long : Float64
      property lat : Float64
      property access_hash : Int64
      
      def initialize(
        @long : Float64,
        @lat : Float64,
        @access_hash : Int64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@long, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@lat, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputNotifyPeer < TLObject
      getter constructor_id = 0xb8bc5b0c_u32
      
      property peer : InputPeer
      
      def initialize(
        @peer : InputPeer
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@peer.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputNotifyUsers < InputNotifyPeer
      getter constructor_id = 0x193b4417_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputNotifyChats < InputNotifyPeer
      getter constructor_id = 0x4a95e84e_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputNotifyBroadcasts < InputNotifyPeer
      getter constructor_id = 0xb1db7c7e_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputPeerNotifySettings < TLObject
      getter constructor_id = 0x9c3d198e_u32
      
      property show_previews : Bool?
      property silent : Bool?
      property mute_until : Int32?
      property sound : String?
      
      def initialize(
        @show_previews : Bool = false,
        @silent : Bool = false,
        @mute_until : Int32? = nil,
        @sound : String? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@show_previews ? 0 : 0)
        buffer.write_byte(@silent ? 1 : 0)
        buffer.write_byte(@mute_until ? 2 : 0)
        buffer.write_byte(@sound ? 3 : 0)
        buffer.write(@show_previews.to_bytes)
        buffer.write(@silent.to_bytes)
        buffer.write_bytes(@mute_until, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@sound)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PeerNotifySettings < TLObject
      getter constructor_id = 0xaf509d20_u32
      
      property show_previews : Bool?
      property silent : Bool?
      property mute_until : Int32?
      property sound : String?
      
      def initialize(
        @show_previews : Bool = false,
        @silent : Bool = false,
        @mute_until : Int32? = nil,
        @sound : String? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@show_previews ? 0 : 0)
        buffer.write_byte(@silent ? 1 : 0)
        buffer.write_byte(@mute_until ? 2 : 0)
        buffer.write_byte(@sound ? 3 : 0)
        buffer.write(@show_previews.to_bytes)
        buffer.write(@silent.to_bytes)
        buffer.write_bytes(@mute_until, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@sound)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PeerSettings < TLObject
      getter constructor_id = 0x818426cd_u32
      
      property report_spam : Bool?
      property add_contact : Bool?
      property block_contact : Bool?
      property share_contact : Bool?
      property need_contacts_exception : Bool?
      property report_geo : Bool?
      
      def initialize(
        @report_spam : Bool = false,
        @add_contact : Bool = false,
        @block_contact : Bool = false,
        @share_contact : Bool = false,
        @need_contacts_exception : Bool = false,
        @report_geo : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@report_spam ? 0 : 0)
        buffer.write_byte(@add_contact ? 1 : 0)
        buffer.write_byte(@block_contact ? 2 : 0)
        buffer.write_byte(@share_contact ? 3 : 0)
        buffer.write_byte(@need_contacts_exception ? 4 : 0)
        buffer.write_byte(@report_geo ? 5 : 0)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class WallPaper < TLObject
      getter constructor_id = 0xa437c3ed_u32
      
      property id : Int64
      property access_hash : Int64
      property slug : String
      property document : Document
      property creator : Bool?
      property default : Bool?
      property settings : WallPaperSettings?
      property pattern : Bool?
      property dark : Bool?
      
      def initialize(
        @id : Int64,
        @access_hash : Int64,
        @slug : String,
        @document : Document,
        @creator : Bool = false,
        @default : Bool = false,
        @settings : WallPaperSettings? = nil,
        @pattern : Bool = false,
        @dark : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@creator ? 0 : 0)
        buffer.write_byte(@default ? 1 : 0)
        buffer.write_byte(@pattern ? 3 : 0)
        buffer.write_byte(@dark ? 4 : 0)
        buffer.write_byte(@settings ? 2 : 0)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@slug)
        buffer.write(@document.to_bytes)
        buffer.write(@settings.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class WallPaperNoFile < WallPaper
      getter constructor_id = 0x8af40b25_u32
      
      property default : Bool?
      property settings : WallPaperSettings?
      property dark : Bool?
      
      def initialize(
        @default : Bool = false,
        @settings : WallPaperSettings? = nil,
        @dark : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@default ? 1 : 0)
        buffer.write_byte(@dark ? 4 : 0)
        buffer.write_byte(@settings ? 2 : 0)
        buffer.write(@settings.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputReportReasonSpam < ReportReason
      getter constructor_id = 0x58dbcab8_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputReportReasonViolence < ReportReason
      getter constructor_id = 0x1e22c78d_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputReportReasonPornography < ReportReason
      getter constructor_id = 0x2e59d922_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputReportReasonChildAbuse < ReportReason
      getter constructor_id = 0xadf44ee3_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputReportReasonOther < ReportReason
      getter constructor_id = 0xe1746d0a_u32
      
      property text : String
      
      def initialize(
        @text : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@text)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputReportReasonCopyright < ReportReason
      getter constructor_id = 0x9b89f93a_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputReportReasonGeoIrrelevant < ReportReason
      getter constructor_id = 0xdbd4feed_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UserFull < TLObject
      getter constructor_id = 0xedf17c12_u32
      
      property user : User
      property settings : PeerSettings
      property notify_settings : PeerNotifySettings
      property common_chats_count : Int32
      property blocked : Bool?
      property about : String?
      property profile_photo : Photo?
      property bot_info : BotInfo?
      property phone_calls_available : Bool?
      property phone_calls_private : Bool?
      property pinned_msg_id : Int32?
      property can_pin_message : Bool?
      property folder_id : Int32?
      property has_scheduled : Bool?
      
      def initialize(
        @user : User,
        @settings : PeerSettings,
        @notify_settings : PeerNotifySettings,
        @common_chats_count : Int32,
        @blocked : Bool = false,
        @about : String? = nil,
        @profile_photo : Photo? = nil,
        @bot_info : BotInfo? = nil,
        @phone_calls_available : Bool = false,
        @phone_calls_private : Bool = false,
        @pinned_msg_id : Int32? = nil,
        @can_pin_message : Bool = false,
        @folder_id : Int32? = nil,
        @has_scheduled : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@blocked ? 0 : 0)
        buffer.write_byte(@phone_calls_available ? 4 : 0)
        buffer.write_byte(@phone_calls_private ? 5 : 0)
        buffer.write_byte(@can_pin_message ? 7 : 0)
        buffer.write_byte(@has_scheduled ? 12 : 0)
        buffer.write_byte(@about ? 1 : 0)
        buffer.write_byte(@profile_photo ? 2 : 0)
        buffer.write_byte(@bot_info ? 3 : 0)
        buffer.write_byte(@pinned_msg_id ? 6 : 0)
        buffer.write_byte(@folder_id ? 11 : 0)
        buffer.write(@user.to_bytes)
        buffer.write(TLObject.serialize_bytes(@about)
        buffer.write(@settings.to_bytes)
        buffer.write(@profile_photo.to_bytes)
        buffer.write(@notify_settings.to_bytes)
        buffer.write(@bot_info.to_bytes)
        buffer.write_bytes(@pinned_msg_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@common_chats_count, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@folder_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class Contact < TLObject
      getter constructor_id = 0xf911c994_u32
      
      property user_id : Int32
      property mutual : Bool
      
      def initialize(
        @user_id : Int32,
        @mutual : Bool
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer.write(@mutual.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ImportedContact < TLObject
      getter constructor_id = 0xd0028438_u32
      
      property user_id : Int32
      property client_id : Int64
      
      def initialize(
        @user_id : Int32,
        @client_id : Int64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@client_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ContactBlocked < TLObject
      getter constructor_id = 0x561bc879_u32
      
      property user_id : Int32
      property date : Int32
      
      def initialize(
        @user_id : Int32,
        @date : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ContactStatus < TLObject
      getter constructor_id = 0xd3680c61_u32
      
      property user_id : Int32
      property status : UserStatus
      
      def initialize(
        @user_id : Int32,
        @status : UserStatus
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer.write(@status.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputMessagesFilterEmpty < MessagesFilter
      getter constructor_id = 0x57e2f66c_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputMessagesFilterPhotos < MessagesFilter
      getter constructor_id = 0x9609a51c_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputMessagesFilterVideo < MessagesFilter
      getter constructor_id = 0x9fc00e65_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputMessagesFilterPhotoVideo < MessagesFilter
      getter constructor_id = 0x56e9f0e4_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputMessagesFilterDocument < MessagesFilter
      getter constructor_id = 0x9eddf188_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputMessagesFilterUrl < MessagesFilter
      getter constructor_id = 0x7ef0dd87_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputMessagesFilterGif < MessagesFilter
      getter constructor_id = 0xffc86587_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputMessagesFilterVoice < MessagesFilter
      getter constructor_id = 0x50f5c392_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputMessagesFilterMusic < MessagesFilter
      getter constructor_id = 0x3751b49e_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputMessagesFilterChatPhotos < MessagesFilter
      getter constructor_id = 0x3a20ecb8_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputMessagesFilterPhoneCalls < MessagesFilter
      getter constructor_id = 0x80c99768_u32
      
      property missed : Bool?
      
      def initialize(
        @missed : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@missed ? 0 : 0)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputMessagesFilterRoundVoice < MessagesFilter
      getter constructor_id = 0x7a7c17a4_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputMessagesFilterRoundVideo < MessagesFilter
      getter constructor_id = 0xb549da53_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputMessagesFilterMyMentions < MessagesFilter
      getter constructor_id = 0xc1f8e69a_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputMessagesFilterGeo < MessagesFilter
      getter constructor_id = 0xe7026d0d_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputMessagesFilterContacts < MessagesFilter
      getter constructor_id = 0xe062db83_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateNewMessage < Update
      getter constructor_id = 0x1f2b0afd_u32
      
      property message : Message
      property pts : Int32
      property pts_count : Int32
      
      def initialize(
        @message : Message,
        @pts : Int32,
        @pts_count : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@message.to_bytes)
        buffer.write_bytes(@pts, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@pts_count, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateMessageID < Update
      getter constructor_id = 0x4e90bfd6_u32
      
      property id : Int32
      property random_id : Int64
      
      def initialize(
        @id : Int32,
        @random_id : Int64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@random_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateDeleteMessages < Update
      getter constructor_id = 0xa20db0e5_u32
      
      property messages : Array(Int32)
      property pts : Int32
      property pts_count : Int32
      
      def initialize(
        @messages : Array(Int32),
        @pts : Int32,
        @pts_count : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@messages.size, IO::ByteFormat::LittleEndian)
        @messages.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(@pts, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@pts_count, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateUserTyping < Update
      getter constructor_id = 0x5c486927_u32
      
      property user_id : Int32
      property action : SendMessageAction
      
      def initialize(
        @user_id : Int32,
        @action : SendMessageAction
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer.write(@action.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateChatUserTyping < Update
      getter constructor_id = 0x9a65ea1f_u32
      
      property chat_id : Int32
      property user_id : Int32
      property action : SendMessageAction
      
      def initialize(
        @chat_id : Int32,
        @user_id : Int32,
        @action : SendMessageAction
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@chat_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer.write(@action.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateChatParticipants < Update
      getter constructor_id = 0x07761198_u32
      
      property participants : ChatParticipants
      
      def initialize(
        @participants : ChatParticipants
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@participants.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateUserStatus < Update
      getter constructor_id = 0x1bfbd823_u32
      
      property user_id : Int32
      property status : UserStatus
      
      def initialize(
        @user_id : Int32,
        @status : UserStatus
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer.write(@status.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateUserName < Update
      getter constructor_id = 0xa7332b73_u32
      
      property user_id : Int32
      property first_name : String
      property last_name : String
      property username : String
      
      def initialize(
        @user_id : Int32,
        @first_name : String,
        @last_name : String,
        @username : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@first_name)
        buffer.write(TLObject.serialize_bytes(@last_name)
        buffer.write(TLObject.serialize_bytes(@username)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateUserPhoto < Update
      getter constructor_id = 0x95313b0c_u32
      
      property user_id : Int32
      property date : Int32
      property photo : UserProfilePhoto
      property previous : Bool
      
      def initialize(
        @user_id : Int32,
        @date : Int32,
        @photo : UserProfilePhoto,
        @previous : Bool
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer.write(@photo.to_bytes)
        buffer.write(@previous.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateNewEncryptedMessage < Update
      getter constructor_id = 0x12bcbd9a_u32
      
      property message : EncryptedMessage
      property qts : Int32
      
      def initialize(
        @message : EncryptedMessage,
        @qts : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@message.to_bytes)
        buffer.write_bytes(@qts, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateEncryptedChatTyping < Update
      getter constructor_id = 0x1710f156_u32
      
      property chat_id : Int32
      
      def initialize(
        @chat_id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@chat_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateEncryption < Update
      getter constructor_id = 0xb4a2e88d_u32
      
      property chat : EncryptedChat
      property date : Int32
      
      def initialize(
        @chat : EncryptedChat,
        @date : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@chat.to_bytes)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateEncryptedMessagesRead < Update
      getter constructor_id = 0x38fe25b7_u32
      
      property chat_id : Int32
      property max_date : Int32
      property date : Int32
      
      def initialize(
        @chat_id : Int32,
        @max_date : Int32,
        @date : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@chat_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@max_date, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateChatParticipantAdd < Update
      getter constructor_id = 0xea4b0e5c_u32
      
      property chat_id : Int32
      property user_id : Int32
      property inviter_id : Int32
      property date : Int32
      property version : Int32
      
      def initialize(
        @chat_id : Int32,
        @user_id : Int32,
        @inviter_id : Int32,
        @date : Int32,
        @version : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@chat_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@inviter_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@version, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateChatParticipantDelete < Update
      getter constructor_id = 0x6e5f8c22_u32
      
      property chat_id : Int32
      property user_id : Int32
      property version : Int32
      
      def initialize(
        @chat_id : Int32,
        @user_id : Int32,
        @version : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@chat_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@version, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateDcOptions < Update
      getter constructor_id = 0x8e5e9873_u32
      
      property dc_options : Array(DcOption)
      
      def initialize(
        @dc_options : Array(DcOption)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@dc_options.size, IO::ByteFormat::LittleEndian)
        @dc_options.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateUserBlocked < Update
      getter constructor_id = 0x80ece81a_u32
      
      property user_id : Int32
      property blocked : Bool
      
      def initialize(
        @user_id : Int32,
        @blocked : Bool
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer.write(@blocked.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateNotifySettings < Update
      getter constructor_id = 0xbec268ef_u32
      
      property peer : NotifyPeer
      property notify_settings : PeerNotifySettings
      
      def initialize(
        @peer : NotifyPeer,
        @notify_settings : PeerNotifySettings
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@peer.to_bytes)
        buffer.write(@notify_settings.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateServiceNotification < Update
      getter constructor_id = 0xebe46819_u32
      
      property type : String
      property message : String
      property media : MessageMedia
      property entities : Array(MessageEntity)
      property popup : Bool?
      property inbox_date : Int32?
      
      def initialize(
        @type : String,
        @message : String,
        @media : MessageMedia,
        @entities : Array(MessageEntity),
        @popup : Bool = false,
        @inbox_date : Int32? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@popup ? 0 : 0)
        buffer.write_byte(@inbox_date ? 1 : 0)
        buffer.write_bytes(@inbox_date, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@type)
        buffer.write(TLObject.serialize_bytes(@message)
        buffer.write(@media.to_bytes)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@entities.size, IO::ByteFormat::LittleEndian)
        @entities.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdatePrivacy < Update
      getter constructor_id = 0xee3b272a_u32
      
      property key : PrivacyKey
      property rules : Array(PrivacyRule)
      
      def initialize(
        @key : PrivacyKey,
        @rules : Array(PrivacyRule)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@key.to_bytes)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@rules.size, IO::ByteFormat::LittleEndian)
        @rules.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateUserPhone < Update
      getter constructor_id = 0x12b9417b_u32
      
      property user_id : Int32
      property phone : String
      
      def initialize(
        @user_id : Int32,
        @phone : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@phone)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateReadHistoryInbox < Update
      getter constructor_id = 0x9c974fdf_u32
      
      property peer : Peer
      property max_id : Int32
      property still_unread_count : Int32
      property pts : Int32
      property pts_count : Int32
      property folder_id : Int32?
      
      def initialize(
        @peer : Peer,
        @max_id : Int32,
        @still_unread_count : Int32,
        @pts : Int32,
        @pts_count : Int32,
        @folder_id : Int32? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@folder_id ? 0 : 0)
        buffer.write_bytes(@folder_id, IO::ByteFormat::LittleEndian)
        buffer.write(@peer.to_bytes)
        buffer.write_bytes(@max_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@still_unread_count, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@pts, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@pts_count, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateReadHistoryOutbox < Update
      getter constructor_id = 0x2f2f21bf_u32
      
      property peer : Peer
      property max_id : Int32
      property pts : Int32
      property pts_count : Int32
      
      def initialize(
        @peer : Peer,
        @max_id : Int32,
        @pts : Int32,
        @pts_count : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@peer.to_bytes)
        buffer.write_bytes(@max_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@pts, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@pts_count, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateWebPage < Update
      getter constructor_id = 0x7f891213_u32
      
      property webpage : WebPage
      property pts : Int32
      property pts_count : Int32
      
      def initialize(
        @webpage : WebPage,
        @pts : Int32,
        @pts_count : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@webpage.to_bytes)
        buffer.write_bytes(@pts, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@pts_count, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateReadMessagesContents < Update
      getter constructor_id = 0x68c13933_u32
      
      property messages : Array(Int32)
      property pts : Int32
      property pts_count : Int32
      
      def initialize(
        @messages : Array(Int32),
        @pts : Int32,
        @pts_count : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@messages.size, IO::ByteFormat::LittleEndian)
        @messages.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(@pts, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@pts_count, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateChannelTooLong < Update
      getter constructor_id = 0xeb0467fb_u32
      
      property channel_id : Int32
      property pts : Int32?
      
      def initialize(
        @channel_id : Int32,
        @pts : Int32? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@pts ? 0 : 0)
        buffer.write_bytes(@channel_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@pts, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateChannel < Update
      getter constructor_id = 0xb6d45656_u32
      
      property channel_id : Int32
      
      def initialize(
        @channel_id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@channel_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateNewChannelMessage < Update
      getter constructor_id = 0x62ba04d9_u32
      
      property message : Message
      property pts : Int32
      property pts_count : Int32
      
      def initialize(
        @message : Message,
        @pts : Int32,
        @pts_count : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@message.to_bytes)
        buffer.write_bytes(@pts, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@pts_count, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateReadChannelInbox < Update
      getter constructor_id = 0x330b5424_u32
      
      property channel_id : Int32
      property max_id : Int32
      property still_unread_count : Int32
      property pts : Int32
      property folder_id : Int32?
      
      def initialize(
        @channel_id : Int32,
        @max_id : Int32,
        @still_unread_count : Int32,
        @pts : Int32,
        @folder_id : Int32? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@folder_id ? 0 : 0)
        buffer.write_bytes(@folder_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@channel_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@max_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@still_unread_count, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@pts, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateDeleteChannelMessages < Update
      getter constructor_id = 0xc37521c9_u32
      
      property channel_id : Int32
      property messages : Array(Int32)
      property pts : Int32
      property pts_count : Int32
      
      def initialize(
        @channel_id : Int32,
        @messages : Array(Int32),
        @pts : Int32,
        @pts_count : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@channel_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@messages.size, IO::ByteFormat::LittleEndian)
        @messages.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(@pts, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@pts_count, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateChannelMessageViews < Update
      getter constructor_id = 0x98a12b4b_u32
      
      property channel_id : Int32
      property id : Int32
      property views : Int32
      
      def initialize(
        @channel_id : Int32,
        @id : Int32,
        @views : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@channel_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@views, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateChatParticipantAdmin < Update
      getter constructor_id = 0xb6901959_u32
      
      property chat_id : Int32
      property user_id : Int32
      property is_admin : Bool
      property version : Int32
      
      def initialize(
        @chat_id : Int32,
        @user_id : Int32,
        @is_admin : Bool,
        @version : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@chat_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer.write(@is_admin.to_bytes)
        buffer.write_bytes(@version, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateNewStickerSet < Update
      getter constructor_id = 0x688a30aa_u32
      
      property stickerset : StickerSet
      
      def initialize(
        @stickerset : StickerSet
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@stickerset.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateStickerSetsOrder < Update
      getter constructor_id = 0x0bb2d201_u32
      
      property order : Array(Int64)
      property masks : Bool?
      
      def initialize(
        @order : Array(Int64),
        @masks : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@masks ? 0 : 0)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@order.size, IO::ByteFormat::LittleEndian)
        @order.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateStickerSets < Update
      getter constructor_id = 0x43ae3dec_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateSavedGifs < Update
      getter constructor_id = 0x9375341e_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateBotInlineQuery < Update
      getter constructor_id = 0x54826690_u32
      
      property query_id : Int64
      property user_id : Int32
      property query : String
      property offset : String
      property geo : GeoPoint?
      
      def initialize(
        @query_id : Int64,
        @user_id : Int32,
        @query : String,
        @offset : String,
        @geo : GeoPoint? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@geo ? 0 : 0)
        buffer.write_bytes(@query_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@query)
        buffer.write(@geo.to_bytes)
        buffer.write(TLObject.serialize_bytes(@offset)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateBotInlineSend < Update
      getter constructor_id = 0x0e48f964_u32
      
      property user_id : Int32
      property query : String
      property id : String
      property geo : GeoPoint?
      property msg_id : InputBotInlineMessageID?
      
      def initialize(
        @user_id : Int32,
        @query : String,
        @id : String,
        @geo : GeoPoint? = nil,
        @msg_id : InputBotInlineMessageID? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@geo ? 0 : 0)
        buffer.write_byte(@msg_id ? 1 : 0)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@query)
        buffer.write(@geo.to_bytes)
        buffer.write(TLObject.serialize_bytes(@id)
        buffer.write(@msg_id.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateEditChannelMessage < Update
      getter constructor_id = 0x1b3f4df7_u32
      
      property message : Message
      property pts : Int32
      property pts_count : Int32
      
      def initialize(
        @message : Message,
        @pts : Int32,
        @pts_count : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@message.to_bytes)
        buffer.write_bytes(@pts, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@pts_count, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateChannelPinnedMessage < Update
      getter constructor_id = 0x98592475_u32
      
      property channel_id : Int32
      property id : Int32
      
      def initialize(
        @channel_id : Int32,
        @id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@channel_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateBotCallbackQuery < Update
      getter constructor_id = 0xe73547e1_u32
      
      property query_id : Int64
      property user_id : Int32
      property peer : Peer
      property msg_id : Int32
      property chat_instance : Int64
      property data : Bytes?
      property game_short_name : String?
      
      def initialize(
        @query_id : Int64,
        @user_id : Int32,
        @peer : Peer,
        @msg_id : Int32,
        @chat_instance : Int64,
        @data : Bytes? = nil,
        @game_short_name : String? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@data ? 0 : 0)
        buffer.write_byte(@game_short_name ? 1 : 0)
        buffer.write_bytes(@query_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer.write(@peer.to_bytes)
        buffer.write_bytes(@msg_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@chat_instance, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@data)
        buffer.write(TLObject.serialize_bytes(@game_short_name)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateEditMessage < Update
      getter constructor_id = 0xe40370a3_u32
      
      property message : Message
      property pts : Int32
      property pts_count : Int32
      
      def initialize(
        @message : Message,
        @pts : Int32,
        @pts_count : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@message.to_bytes)
        buffer.write_bytes(@pts, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@pts_count, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateInlineBotCallbackQuery < Update
      getter constructor_id = 0xf9d27a5a_u32
      
      property query_id : Int64
      property user_id : Int32
      property msg_id : InputBotInlineMessageID
      property chat_instance : Int64
      property data : Bytes?
      property game_short_name : String?
      
      def initialize(
        @query_id : Int64,
        @user_id : Int32,
        @msg_id : InputBotInlineMessageID,
        @chat_instance : Int64,
        @data : Bytes? = nil,
        @game_short_name : String? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@data ? 0 : 0)
        buffer.write_byte(@game_short_name ? 1 : 0)
        buffer.write_bytes(@query_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer.write(@msg_id.to_bytes)
        buffer.write_bytes(@chat_instance, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@data)
        buffer.write(TLObject.serialize_bytes(@game_short_name)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateReadChannelOutbox < Update
      getter constructor_id = 0x25d6c9c7_u32
      
      property channel_id : Int32
      property max_id : Int32
      
      def initialize(
        @channel_id : Int32,
        @max_id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@channel_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@max_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateDraftMessage < Update
      getter constructor_id = 0xee2bb969_u32
      
      property peer : Peer
      property draft : DraftMessage
      
      def initialize(
        @peer : Peer,
        @draft : DraftMessage
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@peer.to_bytes)
        buffer.write(@draft.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateReadFeaturedStickers < Update
      getter constructor_id = 0x571d2742_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateRecentStickers < Update
      getter constructor_id = 0x9a422c20_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateConfig < Update
      getter constructor_id = 0xa229dd06_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdatePtsChanged < Update
      getter constructor_id = 0x3354678f_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateChannelWebPage < Update
      getter constructor_id = 0x40771900_u32
      
      property channel_id : Int32
      property webpage : WebPage
      property pts : Int32
      property pts_count : Int32
      
      def initialize(
        @channel_id : Int32,
        @webpage : WebPage,
        @pts : Int32,
        @pts_count : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@channel_id, IO::ByteFormat::LittleEndian)
        buffer.write(@webpage.to_bytes)
        buffer.write_bytes(@pts, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@pts_count, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateDialogPinned < Update
      getter constructor_id = 0x6e6fe51c_u32
      
      property peer : DialogPeer
      property pinned : Bool?
      property folder_id : Int32?
      
      def initialize(
        @peer : DialogPeer,
        @pinned : Bool = false,
        @folder_id : Int32? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@pinned ? 0 : 0)
        buffer.write_byte(@folder_id ? 1 : 0)
        buffer.write_bytes(@folder_id, IO::ByteFormat::LittleEndian)
        buffer.write(@peer.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdatePinnedDialogs < Update
      getter constructor_id = 0xfa0f3ca2_u32
      
      property order : Array(DialogPeer)?
      property folder_id : Int32?
      
      def initialize(
        @order : Array(DialogPeer)? = nil,
        @folder_id : Int32? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@folder_id ? 1 : 0)
        buffer.write_byte(@order ? 0 : 0)
        buffer.write_bytes(@folder_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@order.size, IO::ByteFormat::LittleEndian)
        @order.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateBotWebhookJSON < Update
      getter constructor_id = 0x8317c0c3_u32
      
      property data : DataJSON
      
      def initialize(
        @data : DataJSON
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@data.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateBotWebhookJSONQuery < Update
      getter constructor_id = 0x9b9240a6_u32
      
      property query_id : Int64
      property data : DataJSON
      property timeout : Int32
      
      def initialize(
        @query_id : Int64,
        @data : DataJSON,
        @timeout : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@query_id, IO::ByteFormat::LittleEndian)
        buffer.write(@data.to_bytes)
        buffer.write_bytes(@timeout, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateBotShippingQuery < Update
      getter constructor_id = 0xe0cdc940_u32
      
      property query_id : Int64
      property user_id : Int32
      property payload : Bytes
      property shipping_address : PostAddress
      
      def initialize(
        @query_id : Int64,
        @user_id : Int32,
        @payload : Bytes,
        @shipping_address : PostAddress
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@query_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@payload)
        buffer.write(@shipping_address.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateBotPrecheckoutQuery < Update
      getter constructor_id = 0x5d2f3aa9_u32
      
      property query_id : Int64
      property user_id : Int32
      property payload : Bytes
      property currency : String
      property total_amount : Int64
      property info : PaymentRequestedInfo?
      property shipping_option_id : String?
      
      def initialize(
        @query_id : Int64,
        @user_id : Int32,
        @payload : Bytes,
        @currency : String,
        @total_amount : Int64,
        @info : PaymentRequestedInfo? = nil,
        @shipping_option_id : String? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@info ? 0 : 0)
        buffer.write_byte(@shipping_option_id ? 1 : 0)
        buffer.write_bytes(@query_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@payload)
        buffer.write(@info.to_bytes)
        buffer.write(TLObject.serialize_bytes(@shipping_option_id)
        buffer.write(TLObject.serialize_bytes(@currency)
        buffer.write_bytes(@total_amount, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdatePhoneCall < Update
      getter constructor_id = 0xab0f6b1e_u32
      
      property phone_call : PhoneCall
      
      def initialize(
        @phone_call : PhoneCall
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@phone_call.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateLangPackTooLong < Update
      getter constructor_id = 0x46560264_u32
      
      property lang_code : String
      
      def initialize(
        @lang_code : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@lang_code)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateLangPack < Update
      getter constructor_id = 0x56022f4d_u32
      
      property difference : LangPackDifference
      
      def initialize(
        @difference : LangPackDifference
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@difference.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateFavedStickers < Update
      getter constructor_id = 0xe511996d_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateChannelReadMessagesContents < Update
      getter constructor_id = 0x89893b45_u32
      
      property channel_id : Int32
      property messages : Array(Int32)
      
      def initialize(
        @channel_id : Int32,
        @messages : Array(Int32)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@channel_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@messages.size, IO::ByteFormat::LittleEndian)
        @messages.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateContactsReset < Update
      getter constructor_id = 0x7084a7be_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateChannelAvailableMessages < Update
      getter constructor_id = 0x70db6837_u32
      
      property channel_id : Int32
      property available_min_id : Int32
      
      def initialize(
        @channel_id : Int32,
        @available_min_id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@channel_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@available_min_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateDialogUnreadMark < Update
      getter constructor_id = 0xe16459c3_u32
      
      property peer : DialogPeer
      property unread : Bool?
      
      def initialize(
        @peer : DialogPeer,
        @unread : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@unread ? 0 : 0)
        buffer.write(@peer.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateUserPinnedMessage < Update
      getter constructor_id = 0x4c43da18_u32
      
      property user_id : Int32
      property id : Int32
      
      def initialize(
        @user_id : Int32,
        @id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateChatPinnedMessage < Update
      getter constructor_id = 0xe10db349_u32
      
      property chat_id : Int32
      property id : Int32
      property version : Int32
      
      def initialize(
        @chat_id : Int32,
        @id : Int32,
        @version : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@chat_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@version, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateMessagePoll < Update
      getter constructor_id = 0xaca1657b_u32
      
      property poll_id : Int64
      property results : PollResults
      property poll : Poll?
      
      def initialize(
        @poll_id : Int64,
        @results : PollResults,
        @poll : Poll? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@poll ? 0 : 0)
        buffer.write_bytes(@poll_id, IO::ByteFormat::LittleEndian)
        buffer.write(@poll.to_bytes)
        buffer.write(@results.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateChatDefaultBannedRights < Update
      getter constructor_id = 0x54c01850_u32
      
      property peer : Peer
      property default_banned_rights : ChatBannedRights
      property version : Int32
      
      def initialize(
        @peer : Peer,
        @default_banned_rights : ChatBannedRights,
        @version : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@peer.to_bytes)
        buffer.write(@default_banned_rights.to_bytes)
        buffer.write_bytes(@version, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateFolderPeers < Update
      getter constructor_id = 0x19360dc0_u32
      
      property folder_peers : Array(FolderPeer)
      property pts : Int32
      property pts_count : Int32
      
      def initialize(
        @folder_peers : Array(FolderPeer),
        @pts : Int32,
        @pts_count : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@folder_peers.size, IO::ByteFormat::LittleEndian)
        @folder_peers.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(@pts, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@pts_count, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdatePeerSettings < Update
      getter constructor_id = 0x6a7e7366_u32
      
      property peer : Peer
      property settings : PeerSettings
      
      def initialize(
        @peer : Peer,
        @settings : PeerSettings
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@peer.to_bytes)
        buffer.write(@settings.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdatePeerLocated < Update
      getter constructor_id = 0xb4afcfb0_u32
      
      property peers : Array(PeerLocated)
      
      def initialize(
        @peers : Array(PeerLocated)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@peers.size, IO::ByteFormat::LittleEndian)
        @peers.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateNewScheduledMessage < Update
      getter constructor_id = 0x39a51dfb_u32
      
      property message : Message
      
      def initialize(
        @message : Message
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@message.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateDeleteScheduledMessages < Update
      getter constructor_id = 0x90866cee_u32
      
      property peer : Peer
      property messages : Array(Int32)
      
      def initialize(
        @peer : Peer,
        @messages : Array(Int32)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@peer.to_bytes)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@messages.size, IO::ByteFormat::LittleEndian)
        @messages.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateTheme < Update
      getter constructor_id = 0x8216fba3_u32
      
      property theme : Theme
      
      def initialize(
        @theme : Theme
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@theme.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateGeoLiveViewed < Update
      getter constructor_id = 0x871fb939_u32
      
      property peer : Peer
      property msg_id : Int32
      
      def initialize(
        @peer : Peer,
        @msg_id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@peer.to_bytes)
        buffer.write_bytes(@msg_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateLoginToken < Update
      getter constructor_id = 0x564fe691_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateMessagePollVote < Update
      getter constructor_id = 0x42f88f2c_u32
      
      property poll_id : Int64
      property user_id : Int32
      property options : Array(Bytes)
      
      def initialize(
        @poll_id : Int64,
        @user_id : Int32,
        @options : Array(Bytes)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@poll_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@options.size, IO::ByteFormat::LittleEndian)
        @options.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateDialogFilter < Update
      getter constructor_id = 0x26ffde7d_u32
      
      property id : Int32
      property filter : DialogFilter?
      
      def initialize(
        @id : Int32,
        @filter : DialogFilter? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@filter ? 0 : 0)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write(@filter.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateDialogFilterOrder < Update
      getter constructor_id = 0xa5d72105_u32
      
      property order : Array(Int32)
      
      def initialize(
        @order : Array(Int32)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@order.size, IO::ByteFormat::LittleEndian)
        @order.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateDialogFilters < Update
      getter constructor_id = 0x3504914f_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdatesTooLong < Updates
      getter constructor_id = 0xe317af7e_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateShortMessage < Updates
      getter constructor_id = 0x914fbf11_u32
      
      property id : Int32
      property user_id : Int32
      property message : String
      property pts : Int32
      property pts_count : Int32
      property date : Int32
      property out : Bool?
      property fwd_from : MessageFwdHeader?
      property reply_to_msg_id : Int32?
      property mentioned : Bool?
      property media_unread : Bool?
      property entities : Array(MessageEntity)?
      property via_bot_id : Int32?
      property silent : Bool?
      
      def initialize(
        @id : Int32,
        @user_id : Int32,
        @message : String,
        @pts : Int32,
        @pts_count : Int32,
        @date : Int32,
        @out : Bool = false,
        @fwd_from : MessageFwdHeader? = nil,
        @reply_to_msg_id : Int32? = nil,
        @mentioned : Bool = false,
        @media_unread : Bool = false,
        @entities : Array(MessageEntity)? = nil,
        @via_bot_id : Int32? = nil,
        @silent : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@out ? 1 : 0)
        buffer.write_byte(@mentioned ? 4 : 0)
        buffer.write_byte(@media_unread ? 5 : 0)
        buffer.write_byte(@silent ? 13 : 0)
        buffer.write_byte(@fwd_from ? 2 : 0)
        buffer.write_byte(@via_bot_id ? 11 : 0)
        buffer.write_byte(@reply_to_msg_id ? 3 : 0)
        buffer.write_byte(@entities ? 7 : 0)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@message)
        buffer.write_bytes(@pts, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@pts_count, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer.write(@fwd_from.to_bytes)
        buffer.write_bytes(@via_bot_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@reply_to_msg_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@entities.size, IO::ByteFormat::LittleEndian)
        @entities.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateShortChatMessage < Updates
      getter constructor_id = 0x16812688_u32
      
      property id : Int32
      property from_id : Int32
      property chat_id : Int32
      property message : String
      property pts : Int32
      property pts_count : Int32
      property date : Int32
      property out : Bool?
      property fwd_from : MessageFwdHeader?
      property reply_to_msg_id : Int32?
      property mentioned : Bool?
      property media_unread : Bool?
      property entities : Array(MessageEntity)?
      property via_bot_id : Int32?
      property silent : Bool?
      
      def initialize(
        @id : Int32,
        @from_id : Int32,
        @chat_id : Int32,
        @message : String,
        @pts : Int32,
        @pts_count : Int32,
        @date : Int32,
        @out : Bool = false,
        @fwd_from : MessageFwdHeader? = nil,
        @reply_to_msg_id : Int32? = nil,
        @mentioned : Bool = false,
        @media_unread : Bool = false,
        @entities : Array(MessageEntity)? = nil,
        @via_bot_id : Int32? = nil,
        @silent : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@out ? 1 : 0)
        buffer.write_byte(@mentioned ? 4 : 0)
        buffer.write_byte(@media_unread ? 5 : 0)
        buffer.write_byte(@silent ? 13 : 0)
        buffer.write_byte(@fwd_from ? 2 : 0)
        buffer.write_byte(@via_bot_id ? 11 : 0)
        buffer.write_byte(@reply_to_msg_id ? 3 : 0)
        buffer.write_byte(@entities ? 7 : 0)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@from_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@chat_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@message)
        buffer.write_bytes(@pts, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@pts_count, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer.write(@fwd_from.to_bytes)
        buffer.write_bytes(@via_bot_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@reply_to_msg_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@entities.size, IO::ByteFormat::LittleEndian)
        @entities.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateShort < Updates
      getter constructor_id = 0x78d4dec1_u32
      
      property update : Update
      property date : Int32
      
      def initialize(
        @update : Update,
        @date : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@update.to_bytes)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdatesCombined < Updates
      getter constructor_id = 0x725b04c3_u32
      
      property updates : Array(Update)
      property users : Array(User)
      property chats : Array(Chat)
      property date : Int32
      property seq_start : Int32
      property seq : Int32
      
      def initialize(
        @updates : Array(Update),
        @users : Array(User),
        @chats : Array(Chat),
        @date : Int32,
        @seq_start : Int32,
        @seq : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@updates.size, IO::ByteFormat::LittleEndian)
        @updates.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@users.size, IO::ByteFormat::LittleEndian)
        @users.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@chats.size, IO::ByteFormat::LittleEndian)
        @chats.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@seq_start, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@seq, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class Updates < TLObject
      getter constructor_id = 0x74ae4240_u32
      
      property updates : Array(Update)
      property users : Array(User)
      property chats : Array(Chat)
      property date : Int32
      property seq : Int32
      
      def initialize(
        @updates : Array(Update),
        @users : Array(User),
        @chats : Array(Chat),
        @date : Int32,
        @seq : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@updates.size, IO::ByteFormat::LittleEndian)
        @updates.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@users.size, IO::ByteFormat::LittleEndian)
        @users.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@chats.size, IO::ByteFormat::LittleEndian)
        @chats.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@seq, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UpdateShortSentMessage < Updates
      getter constructor_id = 0x11f1331c_u32
      
      property id : Int32
      property pts : Int32
      property pts_count : Int32
      property date : Int32
      property out : Bool?
      property entities : Array(MessageEntity)?
      property media : MessageMedia?
      
      def initialize(
        @id : Int32,
        @pts : Int32,
        @pts_count : Int32,
        @date : Int32,
        @out : Bool = false,
        @entities : Array(MessageEntity)? = nil,
        @media : MessageMedia? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@out ? 1 : 0)
        buffer.write_byte(@media ? 9 : 0)
        buffer.write_byte(@entities ? 7 : 0)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@pts, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@pts_count, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer.write(@media.to_bytes)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@entities.size, IO::ByteFormat::LittleEndian)
        @entities.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class DcOption < TLObject
      getter constructor_id = 0x18b7a10d_u32
      
      property id : Int32
      property ip_address : String
      property port : Int32
      property ipv6 : Bool?
      property media_only : Bool?
      property tcpo_only : Bool?
      property cdn : Bool?
      property static : Bool?
      property secret : Bytes?
      
      def initialize(
        @id : Int32,
        @ip_address : String,
        @port : Int32,
        @ipv6 : Bool = false,
        @media_only : Bool = false,
        @tcpo_only : Bool = false,
        @cdn : Bool = false,
        @static : Bool = false,
        @secret : Bytes? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@ipv6 ? 0 : 0)
        buffer.write_byte(@media_only ? 1 : 0)
        buffer.write_byte(@tcpo_only ? 2 : 0)
        buffer.write_byte(@cdn ? 3 : 0)
        buffer.write_byte(@static ? 4 : 0)
        buffer.write_byte(@secret ? 10 : 0)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@ip_address)
        buffer.write_bytes(@port, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@secret)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class Config < TLObject
      getter constructor_id = 0x330b4067_u32
      
      property edit_time_limit : Int32
      property online_cloud_timeout_ms : Int32
      property notify_cloud_delay_ms : Int32
      property notify_default_delay_ms : Int32
      property push_chat_period_ms : Int32
      property push_chat_limit : Int32
      property saved_gifs_limit : Int32
      property call_ring_timeout_ms : Int32
      property revoke_time_limit : Int32
      property revoke_pm_time_limit : Int32
      property rating_e_decay : Int32
      property stickers_recent_limit : Int32
      property stickers_faved_limit : Int32
      property channels_read_media_period : Int32
      property pinned_dialogs_count_max : Int32
      property pinned_infolder_count_max : Int32
      property offline_idle_timeout_ms : Int32
      property offline_blur_timeout_ms : Int32
      property webfile_dc_id : Int32
      property message_length_max : Int32
      property caption_length_max : Int32
      property me_url_prefix : String
      property call_packet_timeout_ms : Int32
      property call_connect_timeout_ms : Int32
      property date : Int32
      property expires : Int32
      property test_mode : Bool
      property this_dc : Int32
      property dc_options : Array(DcOption)
      property dc_txt_domain_name : String
      property chat_size_max : Int32
      property megagroup_size_max : Int32
      property forwarded_count_max : Int32
      property online_update_period_ms : Int32
      property call_receive_timeout_ms : Int32
      property tmp_sessions : Int32?
      property phonecalls_enabled : Bool?
      property suggested_lang_code : String?
      property lang_pack_version : Int32?
      property base_lang_pack_version : Int32?
      property default_p2p_contacts : Bool?
      property preload_featured_stickers : Bool?
      property ignore_phone_entities : Bool?
      property revoke_pm_inbox : Bool?
      property autoupdate_url_prefix : String?
      property blocked_mode : Bool?
      property gif_search_username : String?
      property venue_search_username : String?
      property img_search_username : String?
      property static_maps_provider : String?
      property pfs_enabled : Bool?
      
      def initialize(
        @edit_time_limit : Int32,
        @online_cloud_timeout_ms : Int32,
        @notify_cloud_delay_ms : Int32,
        @notify_default_delay_ms : Int32,
        @push_chat_period_ms : Int32,
        @push_chat_limit : Int32,
        @saved_gifs_limit : Int32,
        @call_ring_timeout_ms : Int32,
        @revoke_time_limit : Int32,
        @revoke_pm_time_limit : Int32,
        @rating_e_decay : Int32,
        @stickers_recent_limit : Int32,
        @stickers_faved_limit : Int32,
        @channels_read_media_period : Int32,
        @pinned_dialogs_count_max : Int32,
        @pinned_infolder_count_max : Int32,
        @offline_idle_timeout_ms : Int32,
        @offline_blur_timeout_ms : Int32,
        @webfile_dc_id : Int32,
        @message_length_max : Int32,
        @caption_length_max : Int32,
        @me_url_prefix : String,
        @call_packet_timeout_ms : Int32,
        @call_connect_timeout_ms : Int32,
        @date : Int32,
        @expires : Int32,
        @test_mode : Bool,
        @this_dc : Int32,
        @dc_options : Array(DcOption),
        @dc_txt_domain_name : String,
        @chat_size_max : Int32,
        @megagroup_size_max : Int32,
        @forwarded_count_max : Int32,
        @online_update_period_ms : Int32,
        @call_receive_timeout_ms : Int32,
        @tmp_sessions : Int32? = nil,
        @phonecalls_enabled : Bool = false,
        @suggested_lang_code : String? = nil,
        @lang_pack_version : Int32? = nil,
        @base_lang_pack_version : Int32? = nil,
        @default_p2p_contacts : Bool = false,
        @preload_featured_stickers : Bool = false,
        @ignore_phone_entities : Bool = false,
        @revoke_pm_inbox : Bool = false,
        @autoupdate_url_prefix : String? = nil,
        @blocked_mode : Bool = false,
        @gif_search_username : String? = nil,
        @venue_search_username : String? = nil,
        @img_search_username : String? = nil,
        @static_maps_provider : String? = nil,
        @pfs_enabled : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@phonecalls_enabled ? 1 : 0)
        buffer.write_byte(@default_p2p_contacts ? 3 : 0)
        buffer.write_byte(@preload_featured_stickers ? 4 : 0)
        buffer.write_byte(@ignore_phone_entities ? 5 : 0)
        buffer.write_byte(@revoke_pm_inbox ? 6 : 0)
        buffer.write_byte(@blocked_mode ? 8 : 0)
        buffer.write_byte(@pfs_enabled ? 13 : 0)
        buffer.write_byte(@tmp_sessions ? 0 : 0)
        buffer.write_byte(@autoupdate_url_prefix ? 7 : 0)
        buffer.write_byte(@gif_search_username ? 9 : 0)
        buffer.write_byte(@venue_search_username ? 10 : 0)
        buffer.write_byte(@img_search_username ? 11 : 0)
        buffer.write_byte(@static_maps_provider ? 12 : 0)
        buffer.write_byte(@suggested_lang_code ? 2 : 0)
        buffer.write_byte(@lang_pack_version ? 2 : 0)
        buffer.write_byte(@base_lang_pack_version ? 2 : 0)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@expires, IO::ByteFormat::LittleEndian)
        buffer.write(@test_mode.to_bytes)
        buffer.write_bytes(@this_dc, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@dc_options.size, IO::ByteFormat::LittleEndian)
        @dc_options.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write(TLObject.serialize_bytes(@dc_txt_domain_name)
        buffer.write_bytes(@chat_size_max, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@megagroup_size_max, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@forwarded_count_max, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@online_update_period_ms, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@offline_blur_timeout_ms, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@offline_idle_timeout_ms, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@online_cloud_timeout_ms, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@notify_cloud_delay_ms, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@notify_default_delay_ms, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@push_chat_period_ms, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@push_chat_limit, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@saved_gifs_limit, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@edit_time_limit, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@revoke_time_limit, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@revoke_pm_time_limit, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@rating_e_decay, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@stickers_recent_limit, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@stickers_faved_limit, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@channels_read_media_period, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@tmp_sessions, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@pinned_dialogs_count_max, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@pinned_infolder_count_max, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@call_receive_timeout_ms, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@call_ring_timeout_ms, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@call_connect_timeout_ms, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@call_packet_timeout_ms, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@me_url_prefix)
        buffer.write(TLObject.serialize_bytes(@autoupdate_url_prefix)
        buffer.write(TLObject.serialize_bytes(@gif_search_username)
        buffer.write(TLObject.serialize_bytes(@venue_search_username)
        buffer.write(TLObject.serialize_bytes(@img_search_username)
        buffer.write(TLObject.serialize_bytes(@static_maps_provider)
        buffer.write_bytes(@caption_length_max, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@message_length_max, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@webfile_dc_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@suggested_lang_code)
        buffer.write_bytes(@lang_pack_version, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@base_lang_pack_version, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class NearestDc < TLObject
      getter constructor_id = 0x8e1a1775_u32
      
      property country : String
      property this_dc : Int32
      property nearest_dc : Int32
      
      def initialize(
        @country : String,
        @this_dc : Int32,
        @nearest_dc : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@country)
        buffer.write_bytes(@this_dc, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@nearest_dc, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class EncryptedChatEmpty < EncryptedChat
      getter constructor_id = 0xab7ec0a0_u32
      
      property id : Int32
      
      def initialize(
        @id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class EncryptedChatWaiting < EncryptedChat
      getter constructor_id = 0x3bf703dc_u32
      
      property id : Int32
      property access_hash : Int64
      property date : Int32
      property admin_id : Int32
      property participant_id : Int32
      
      def initialize(
        @id : Int32,
        @access_hash : Int64,
        @date : Int32,
        @admin_id : Int32,
        @participant_id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@admin_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@participant_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class EncryptedChatRequested < EncryptedChat
      getter constructor_id = 0xc878527e_u32
      
      property id : Int32
      property access_hash : Int64
      property date : Int32
      property admin_id : Int32
      property participant_id : Int32
      property g_a : Bytes
      
      def initialize(
        @id : Int32,
        @access_hash : Int64,
        @date : Int32,
        @admin_id : Int32,
        @participant_id : Int32,
        @g_a : Bytes
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@admin_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@participant_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@g_a)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class EncryptedChat < TLObject
      getter constructor_id = 0xfa56ce36_u32
      
      property id : Int32
      property access_hash : Int64
      property date : Int32
      property admin_id : Int32
      property participant_id : Int32
      property g_a_or_b : Bytes
      property key_fingerprint : Int64
      
      def initialize(
        @id : Int32,
        @access_hash : Int64,
        @date : Int32,
        @admin_id : Int32,
        @participant_id : Int32,
        @g_a_or_b : Bytes,
        @key_fingerprint : Int64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@admin_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@participant_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@g_a_or_b)
        buffer.write_bytes(@key_fingerprint, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class EncryptedChatDiscarded < EncryptedChat
      getter constructor_id = 0x13d6dd27_u32
      
      property id : Int32
      
      def initialize(
        @id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputEncryptedChat < TLObject
      getter constructor_id = 0xf141b5e1_u32
      
      property chat_id : Int32
      property access_hash : Int64
      
      def initialize(
        @chat_id : Int32,
        @access_hash : Int64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@chat_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class EncryptedFileEmpty < EncryptedFile
      getter constructor_id = 0xc21f497e_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class EncryptedFile < TLObject
      getter constructor_id = 0x4a70994c_u32
      
      property id : Int64
      property access_hash : Int64
      property size : Int32
      property dc_id : Int32
      property key_fingerprint : Int32
      
      def initialize(
        @id : Int64,
        @access_hash : Int64,
        @size : Int32,
        @dc_id : Int32,
        @key_fingerprint : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@size, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@dc_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@key_fingerprint, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputEncryptedFileEmpty < InputEncryptedFile
      getter constructor_id = 0x1837c364_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputEncryptedFileUploaded < InputEncryptedFile
      getter constructor_id = 0x64bd0306_u32
      
      property id : Int64
      property parts : Int32
      property md5_checksum : String
      property key_fingerprint : Int32
      
      def initialize(
        @id : Int64,
        @parts : Int32,
        @md5_checksum : String,
        @key_fingerprint : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@parts, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@md5_checksum)
        buffer.write_bytes(@key_fingerprint, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputEncryptedFile < TLObject
      getter constructor_id = 0x5a17b5e5_u32
      
      property id : Int64
      property access_hash : Int64
      
      def initialize(
        @id : Int64,
        @access_hash : Int64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputEncryptedFileBigUploaded < InputEncryptedFile
      getter constructor_id = 0x2dc173c8_u32
      
      property id : Int64
      property parts : Int32
      property key_fingerprint : Int32
      
      def initialize(
        @id : Int64,
        @parts : Int32,
        @key_fingerprint : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@parts, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@key_fingerprint, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class EncryptedMessage < TLObject
      getter constructor_id = 0xed18c118_u32
      
      property random_id : Int64
      property chat_id : Int32
      property date : Int32
      property bytes : Bytes
      property file : EncryptedFile
      
      def initialize(
        @random_id : Int64,
        @chat_id : Int32,
        @date : Int32,
        @bytes : Bytes,
        @file : EncryptedFile
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@random_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@chat_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@bytes)
        buffer.write(@file.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class EncryptedMessageService < EncryptedMessage
      getter constructor_id = 0x23734b06_u32
      
      property random_id : Int64
      property chat_id : Int32
      property date : Int32
      property bytes : Bytes
      
      def initialize(
        @random_id : Int64,
        @chat_id : Int32,
        @date : Int32,
        @bytes : Bytes
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@random_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@chat_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputDocumentEmpty < InputDocument
      getter constructor_id = 0x72f0eaae_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputDocument < TLObject
      getter constructor_id = 0x1abfb575_u32
      
      property id : Int64
      property access_hash : Int64
      property file_reference : Bytes
      
      def initialize(
        @id : Int64,
        @access_hash : Int64,
        @file_reference : Bytes
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@file_reference)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class DocumentEmpty < Document
      getter constructor_id = 0x36f8c871_u32
      
      property id : Int64
      
      def initialize(
        @id : Int64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class Document < TLObject
      getter constructor_id = 0x9ba29cc1_u32
      
      property id : Int64
      property access_hash : Int64
      property file_reference : Bytes
      property date : Int32
      property mime_type : String
      property size : Int32
      property dc_id : Int32
      property attributes : Array(DocumentAttribute)
      property thumbs : Array(PhotoSize)?
      
      def initialize(
        @id : Int64,
        @access_hash : Int64,
        @file_reference : Bytes,
        @date : Int32,
        @mime_type : String,
        @size : Int32,
        @dc_id : Int32,
        @attributes : Array(DocumentAttribute),
        @thumbs : Array(PhotoSize)? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@thumbs ? 0 : 0)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@file_reference)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@mime_type)
        buffer.write_bytes(@size, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@thumbs.size, IO::ByteFormat::LittleEndian)
        @thumbs.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(@dc_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@attributes.size, IO::ByteFormat::LittleEndian)
        @attributes.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class NotifyPeer < TLObject
      getter constructor_id = 0x9fd40bd8_u32
      
      property peer : Peer
      
      def initialize(
        @peer : Peer
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@peer.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class NotifyUsers < NotifyPeer
      getter constructor_id = 0xb4c83b4c_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class NotifyChats < NotifyPeer
      getter constructor_id = 0xc007cec3_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class NotifyBroadcasts < NotifyPeer
      getter constructor_id = 0xd612e8ef_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SendMessageTypingAction < SendMessageAction
      getter constructor_id = 0x16bf744e_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SendMessageCancelAction < SendMessageAction
      getter constructor_id = 0xfd5ec8f5_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SendMessageRecordVideoAction < SendMessageAction
      getter constructor_id = 0xa187d66f_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SendMessageUploadVideoAction < SendMessageAction
      getter constructor_id = 0xe9763aec_u32
      
      property progress : Int32
      
      def initialize(
        @progress : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@progress, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SendMessageRecordAudioAction < SendMessageAction
      getter constructor_id = 0xd52f73f7_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SendMessageUploadAudioAction < SendMessageAction
      getter constructor_id = 0xf351d7ab_u32
      
      property progress : Int32
      
      def initialize(
        @progress : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@progress, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SendMessageUploadPhotoAction < SendMessageAction
      getter constructor_id = 0xd1d34a26_u32
      
      property progress : Int32
      
      def initialize(
        @progress : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@progress, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SendMessageUploadDocumentAction < SendMessageAction
      getter constructor_id = 0xaa0cd9e4_u32
      
      property progress : Int32
      
      def initialize(
        @progress : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@progress, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SendMessageGeoLocationAction < SendMessageAction
      getter constructor_id = 0x176f8ba1_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SendMessageChooseContactAction < SendMessageAction
      getter constructor_id = 0x628cbc6f_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SendMessageGamePlayAction < SendMessageAction
      getter constructor_id = 0xdd6a8f48_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SendMessageRecordRoundAction < SendMessageAction
      getter constructor_id = 0x88f27fbc_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SendMessageUploadRoundAction < SendMessageAction
      getter constructor_id = 0x243e1c66_u32
      
      property progress : Int32
      
      def initialize(
        @progress : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@progress, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputPrivacyKeyStatusTimestamp < InputPrivacyKey
      getter constructor_id = 0x4f96cb18_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputPrivacyKeyChatInvite < InputPrivacyKey
      getter constructor_id = 0xbdfb0426_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputPrivacyKeyPhoneCall < InputPrivacyKey
      getter constructor_id = 0xfabadc5f_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputPrivacyKeyPhoneP2P < InputPrivacyKey
      getter constructor_id = 0xdb9e70d2_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputPrivacyKeyForwards < InputPrivacyKey
      getter constructor_id = 0xa4dd4c08_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputPrivacyKeyProfilePhoto < InputPrivacyKey
      getter constructor_id = 0x5719bacc_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputPrivacyKeyPhoneNumber < InputPrivacyKey
      getter constructor_id = 0x0352dafa_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputPrivacyKeyAddedByPhone < InputPrivacyKey
      getter constructor_id = 0xd1219bdd_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PrivacyKeyStatusTimestamp < PrivacyKey
      getter constructor_id = 0xbc2eab30_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PrivacyKeyChatInvite < PrivacyKey
      getter constructor_id = 0x500e6dfa_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PrivacyKeyPhoneCall < PrivacyKey
      getter constructor_id = 0x3d662b7b_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PrivacyKeyPhoneP2P < PrivacyKey
      getter constructor_id = 0x39491cc8_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PrivacyKeyForwards < PrivacyKey
      getter constructor_id = 0x69ec56a3_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PrivacyKeyProfilePhoto < PrivacyKey
      getter constructor_id = 0x96151fed_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PrivacyKeyPhoneNumber < PrivacyKey
      getter constructor_id = 0xd19ae46d_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PrivacyKeyAddedByPhone < PrivacyKey
      getter constructor_id = 0x42ffd42b_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputPrivacyValueAllowContacts < InputPrivacyRule
      getter constructor_id = 0x0d09e07b_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputPrivacyValueAllowAll < InputPrivacyRule
      getter constructor_id = 0x184b35ce_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputPrivacyValueAllowUsers < InputPrivacyRule
      getter constructor_id = 0x131cc67f_u32
      
      property users : Array(InputUser)
      
      def initialize(
        @users : Array(InputUser)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@users.size, IO::ByteFormat::LittleEndian)
        @users.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputPrivacyValueDisallowContacts < InputPrivacyRule
      getter constructor_id = 0x0ba52007_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputPrivacyValueDisallowAll < InputPrivacyRule
      getter constructor_id = 0xd66b66c9_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputPrivacyValueDisallowUsers < InputPrivacyRule
      getter constructor_id = 0x90110467_u32
      
      property users : Array(InputUser)
      
      def initialize(
        @users : Array(InputUser)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@users.size, IO::ByteFormat::LittleEndian)
        @users.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputPrivacyValueAllowChatParticipants < InputPrivacyRule
      getter constructor_id = 0x4c81c1ba_u32
      
      property chats : Array(Int32)
      
      def initialize(
        @chats : Array(Int32)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@chats.size, IO::ByteFormat::LittleEndian)
        @chats.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputPrivacyValueDisallowChatParticipants < InputPrivacyRule
      getter constructor_id = 0xd82363af_u32
      
      property chats : Array(Int32)
      
      def initialize(
        @chats : Array(Int32)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@chats.size, IO::ByteFormat::LittleEndian)
        @chats.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PrivacyValueAllowContacts < PrivacyRule
      getter constructor_id = 0xfffe1bac_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PrivacyValueAllowAll < PrivacyRule
      getter constructor_id = 0x65427b82_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PrivacyValueAllowUsers < PrivacyRule
      getter constructor_id = 0x4d5bbe0c_u32
      
      property users : Array(Int32)
      
      def initialize(
        @users : Array(Int32)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@users.size, IO::ByteFormat::LittleEndian)
        @users.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PrivacyValueDisallowContacts < PrivacyRule
      getter constructor_id = 0xf888fa1a_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PrivacyValueDisallowAll < PrivacyRule
      getter constructor_id = 0x8b73e763_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PrivacyValueDisallowUsers < PrivacyRule
      getter constructor_id = 0x0c7f49b7_u32
      
      property users : Array(Int32)
      
      def initialize(
        @users : Array(Int32)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@users.size, IO::ByteFormat::LittleEndian)
        @users.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PrivacyValueAllowChatParticipants < PrivacyRule
      getter constructor_id = 0x18be796b_u32
      
      property chats : Array(Int32)
      
      def initialize(
        @chats : Array(Int32)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@chats.size, IO::ByteFormat::LittleEndian)
        @chats.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PrivacyValueDisallowChatParticipants < PrivacyRule
      getter constructor_id = 0xacae0690_u32
      
      property chats : Array(Int32)
      
      def initialize(
        @chats : Array(Int32)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@chats.size, IO::ByteFormat::LittleEndian)
        @chats.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class AccountDaysTTL < TLObject
      getter constructor_id = 0xb8d0afdf_u32
      
      property days : Int32
      
      def initialize(
        @days : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@days, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class DocumentAttributeImageSize < DocumentAttribute
      getter constructor_id = 0x6c37c15c_u32
      
      property w : Int32
      property h : Int32
      
      def initialize(
        @w : Int32,
        @h : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@w, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@h, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class DocumentAttributeAnimated < DocumentAttribute
      getter constructor_id = 0x11b58939_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class DocumentAttributeSticker < DocumentAttribute
      getter constructor_id = 0x6319d612_u32
      
      property alt : String
      property stickerset : InputStickerSet
      property mask_coords : MaskCoords?
      property mask : Bool?
      
      def initialize(
        @alt : String,
        @stickerset : InputStickerSet,
        @mask_coords : MaskCoords? = nil,
        @mask : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@mask ? 1 : 0)
        buffer.write_byte(@mask_coords ? 0 : 0)
        buffer.write(TLObject.serialize_bytes(@alt)
        buffer.write(@stickerset.to_bytes)
        buffer.write(@mask_coords.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class DocumentAttributeVideo < DocumentAttribute
      getter constructor_id = 0x0ef02ce6_u32
      
      property duration : Int32
      property w : Int32
      property h : Int32
      property round_message : Bool?
      property supports_streaming : Bool?
      
      def initialize(
        @duration : Int32,
        @w : Int32,
        @h : Int32,
        @round_message : Bool = false,
        @supports_streaming : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@round_message ? 0 : 0)
        buffer.write_byte(@supports_streaming ? 1 : 0)
        buffer.write_bytes(@duration, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@w, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@h, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class DocumentAttributeAudio < DocumentAttribute
      getter constructor_id = 0x9852f9c6_u32
      
      property duration : Int32
      property title : String?
      property performer : String?
      property waveform : Bytes?
      property voice : Bool?
      
      def initialize(
        @duration : Int32,
        @title : String? = nil,
        @performer : String? = nil,
        @waveform : Bytes? = nil,
        @voice : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@voice ? 10 : 0)
        buffer.write_byte(@title ? 0 : 0)
        buffer.write_byte(@performer ? 1 : 0)
        buffer.write_byte(@waveform ? 2 : 0)
        buffer.write_bytes(@duration, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@title)
        buffer.write(TLObject.serialize_bytes(@performer)
        buffer.write(TLObject.serialize_bytes(@waveform)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class DocumentAttributeFilename < DocumentAttribute
      getter constructor_id = 0x15590068_u32
      
      property file_name : String
      
      def initialize(
        @file_name : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@file_name)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class DocumentAttributeHasStickers < DocumentAttribute
      getter constructor_id = 0x9801d2f7_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class StickerPack < TLObject
      getter constructor_id = 0x12b299d4_u32
      
      property emoticon : String
      property documents : Array(Int64)
      
      def initialize(
        @emoticon : String,
        @documents : Array(Int64)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@emoticon)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@documents.size, IO::ByteFormat::LittleEndian)
        @documents.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class WebPageEmpty < WebPage
      getter constructor_id = 0xeb1477e8_u32
      
      property id : Int64
      
      def initialize(
        @id : Int64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class WebPagePending < WebPage
      getter constructor_id = 0xc586da1c_u32
      
      property id : Int64
      property date : Int32
      
      def initialize(
        @id : Int64,
        @date : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class WebPage < TLObject
      getter constructor_id = 0xe89c45b2_u32
      
      property id : Int64
      property url : String
      property display_url : String
      property hash : Int32
      property type : String?
      property site_name : String?
      property title : String?
      property description : String?
      property photo : Photo?
      property embed_type : String?
      property embed_url : String?
      property embed_width : Int32?
      property embed_height : Int32?
      property duration : Int32?
      property author : String?
      property document : Document?
      property cached_page : Page?
      property attributes : Array(WebPageAttribute)?
      
      def initialize(
        @id : Int64,
        @url : String,
        @display_url : String,
        @hash : Int32,
        @type : String? = nil,
        @site_name : String? = nil,
        @title : String? = nil,
        @description : String? = nil,
        @photo : Photo? = nil,
        @embed_type : String? = nil,
        @embed_url : String? = nil,
        @embed_width : Int32? = nil,
        @embed_height : Int32? = nil,
        @duration : Int32? = nil,
        @author : String? = nil,
        @document : Document? = nil,
        @cached_page : Page? = nil,
        @attributes : Array(WebPageAttribute)? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@type ? 0 : 0)
        buffer.write_byte(@site_name ? 1 : 0)
        buffer.write_byte(@title ? 2 : 0)
        buffer.write_byte(@description ? 3 : 0)
        buffer.write_byte(@photo ? 4 : 0)
        buffer.write_byte(@embed_url ? 5 : 0)
        buffer.write_byte(@embed_type ? 5 : 0)
        buffer.write_byte(@embed_width ? 6 : 0)
        buffer.write_byte(@embed_height ? 6 : 0)
        buffer.write_byte(@duration ? 7 : 0)
        buffer.write_byte(@author ? 8 : 0)
        buffer.write_byte(@document ? 9 : 0)
        buffer.write_byte(@cached_page ? 10 : 0)
        buffer.write_byte(@attributes ? 12 : 0)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@url)
        buffer.write(TLObject.serialize_bytes(@display_url)
        buffer.write_bytes(@hash, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@type)
        buffer.write(TLObject.serialize_bytes(@site_name)
        buffer.write(TLObject.serialize_bytes(@title)
        buffer.write(TLObject.serialize_bytes(@description)
        buffer.write(@photo.to_bytes)
        buffer.write(TLObject.serialize_bytes(@embed_url)
        buffer.write(TLObject.serialize_bytes(@embed_type)
        buffer.write_bytes(@embed_width, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@embed_height, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@duration, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@author)
        buffer.write(@document.to_bytes)
        buffer.write(@cached_page.to_bytes)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@attributes.size, IO::ByteFormat::LittleEndian)
        @attributes.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class WebPageNotModified < WebPage
      getter constructor_id = 0x7311ca11_u32
      
      property cached_page_views : Int32?
      
      def initialize(
        @cached_page_views : Int32? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@cached_page_views ? 0 : 0)
        buffer.write_bytes(@cached_page_views, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class Authorization < TLObject
      getter constructor_id = 0xad01d61d_u32
      
      property hash : Int64
      property device_model : String
      property platform : String
      property system_version : String
      property api_id : Int32
      property app_name : String
      property app_version : String
      property date_created : Int32
      property date_active : Int32
      property ip : String
      property country : String
      property region : String
      property current : Bool?
      property official_app : Bool?
      property password_pending : Bool?
      
      def initialize(
        @hash : Int64,
        @device_model : String,
        @platform : String,
        @system_version : String,
        @api_id : Int32,
        @app_name : String,
        @app_version : String,
        @date_created : Int32,
        @date_active : Int32,
        @ip : String,
        @country : String,
        @region : String,
        @current : Bool = false,
        @official_app : Bool = false,
        @password_pending : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@current ? 0 : 0)
        buffer.write_byte(@official_app ? 1 : 0)
        buffer.write_byte(@password_pending ? 2 : 0)
        buffer.write_bytes(@hash, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@device_model)
        buffer.write(TLObject.serialize_bytes(@platform)
        buffer.write(TLObject.serialize_bytes(@system_version)
        buffer.write_bytes(@api_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@app_name)
        buffer.write(TLObject.serialize_bytes(@app_version)
        buffer.write_bytes(@date_created, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@date_active, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@ip)
        buffer.write(TLObject.serialize_bytes(@country)
        buffer.write(TLObject.serialize_bytes(@region)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ReceivedNotifyMessage < TLObject
      getter constructor_id = 0xa384b779_u32
      
      property id : Int32
      property flags : Int32
      
      def initialize(
        @id : Int32,
        @flags : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@flags, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChatInviteEmpty < ExportedChatInvite
      getter constructor_id = 0x69df3769_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChatInviteExported < ExportedChatInvite
      getter constructor_id = 0xfc2e05bc_u32
      
      property link : String
      
      def initialize(
        @link : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@link)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChatInviteAlready < ChatInvite
      getter constructor_id = 0x5a686d7c_u32
      
      property chat : Chat
      
      def initialize(
        @chat : Chat
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@chat.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChatInvite < TLObject
      getter constructor_id = 0xdfc2f58e_u32
      
      property title : String
      property photo : Photo
      property participants_count : Int32
      property channel : Bool?
      property broadcast : Bool?
      property public : Bool?
      property megagroup : Bool?
      property participants : Array(User)?
      
      def initialize(
        @title : String,
        @photo : Photo,
        @participants_count : Int32,
        @channel : Bool = false,
        @broadcast : Bool = false,
        @public : Bool = false,
        @megagroup : Bool = false,
        @participants : Array(User)? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@channel ? 0 : 0)
        buffer.write_byte(@broadcast ? 1 : 0)
        buffer.write_byte(@public ? 2 : 0)
        buffer.write_byte(@megagroup ? 3 : 0)
        buffer.write_byte(@participants ? 4 : 0)
        buffer.write(TLObject.serialize_bytes(@title)
        buffer.write(@photo.to_bytes)
        buffer.write_bytes(@participants_count, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@participants.size, IO::ByteFormat::LittleEndian)
        @participants.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputStickerSetEmpty < InputStickerSet
      getter constructor_id = 0xffb62b95_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputStickerSetID < InputStickerSet
      getter constructor_id = 0x9de7a269_u32
      
      property id : Int64
      property access_hash : Int64
      
      def initialize(
        @id : Int64,
        @access_hash : Int64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputStickerSetShortName < InputStickerSet
      getter constructor_id = 0x861cc8a0_u32
      
      property short_name : String
      
      def initialize(
        @short_name : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@short_name)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputStickerSetAnimatedEmoji < InputStickerSet
      getter constructor_id = 0x028703c8_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputStickerSetDice < InputStickerSet
      getter constructor_id = 0x79e21a53_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class StickerSet < TLObject
      getter constructor_id = 0xeeb46f27_u32
      
      property id : Int64
      property access_hash : Int64
      property title : String
      property short_name : String
      property count : Int32
      property hash : Int32
      property installed_date : Int32?
      property archived : Bool?
      property official : Bool?
      property masks : Bool?
      property thumb : PhotoSize?
      property thumb_dc_id : Int32?
      property animated : Bool?
      
      def initialize(
        @id : Int64,
        @access_hash : Int64,
        @title : String,
        @short_name : String,
        @count : Int32,
        @hash : Int32,
        @installed_date : Int32? = nil,
        @archived : Bool = false,
        @official : Bool = false,
        @masks : Bool = false,
        @thumb : PhotoSize? = nil,
        @thumb_dc_id : Int32? = nil,
        @animated : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@archived ? 1 : 0)
        buffer.write_byte(@official ? 2 : 0)
        buffer.write_byte(@masks ? 3 : 0)
        buffer.write_byte(@animated ? 5 : 0)
        buffer.write_byte(@installed_date ? 0 : 0)
        buffer.write_byte(@thumb ? 4 : 0)
        buffer.write_byte(@thumb_dc_id ? 4 : 0)
        buffer.write_bytes(@installed_date, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@title)
        buffer.write(TLObject.serialize_bytes(@short_name)
        buffer.write(@thumb.to_bytes)
        buffer.write_bytes(@thumb_dc_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@count, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@hash, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class BotCommand < TLObject
      getter constructor_id = 0xc27ac8c7_u32
      
      property command : String
      property description : String
      
      def initialize(
        @command : String,
        @description : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@command)
        buffer.write(TLObject.serialize_bytes(@description)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class BotInfo < TLObject
      getter constructor_id = 0x98e81d3a_u32
      
      property user_id : Int32
      property description : String
      property commands : Array(BotCommand)
      
      def initialize(
        @user_id : Int32,
        @description : String,
        @commands : Array(BotCommand)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@description)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@commands.size, IO::ByteFormat::LittleEndian)
        @commands.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class KeyboardButton < TLObject
      getter constructor_id = 0xa2fa4880_u32
      
      property text : String
      
      def initialize(
        @text : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@text)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class KeyboardButtonUrl < KeyboardButton
      getter constructor_id = 0x258aff05_u32
      
      property text : String
      property url : String
      
      def initialize(
        @text : String,
        @url : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@text)
        buffer.write(TLObject.serialize_bytes(@url)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class KeyboardButtonCallback < KeyboardButton
      getter constructor_id = 0x683a5e46_u32
      
      property text : String
      property data : Bytes
      
      def initialize(
        @text : String,
        @data : Bytes
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@text)
        buffer.write(TLObject.serialize_bytes(@data)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class KeyboardButtonRequestPhone < KeyboardButton
      getter constructor_id = 0xb16a6c29_u32
      
      property text : String
      
      def initialize(
        @text : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@text)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class KeyboardButtonRequestGeoLocation < KeyboardButton
      getter constructor_id = 0xfc796b3f_u32
      
      property text : String
      
      def initialize(
        @text : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@text)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class KeyboardButtonSwitchInline < KeyboardButton
      getter constructor_id = 0x0568a748_u32
      
      property text : String
      property query : String
      property same_peer : Bool?
      
      def initialize(
        @text : String,
        @query : String,
        @same_peer : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@same_peer ? 0 : 0)
        buffer.write(TLObject.serialize_bytes(@text)
        buffer.write(TLObject.serialize_bytes(@query)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class KeyboardButtonGame < KeyboardButton
      getter constructor_id = 0x50f41ccf_u32
      
      property text : String
      
      def initialize(
        @text : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@text)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class KeyboardButtonBuy < KeyboardButton
      getter constructor_id = 0xafd93fbb_u32
      
      property text : String
      
      def initialize(
        @text : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@text)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class KeyboardButtonUrlAuth < KeyboardButton
      getter constructor_id = 0x10b78d29_u32
      
      property text : String
      property url : String
      property button_id : Int32
      property fwd_text : String?
      
      def initialize(
        @text : String,
        @url : String,
        @button_id : Int32,
        @fwd_text : String? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@fwd_text ? 0 : 0)
        buffer.write(TLObject.serialize_bytes(@text)
        buffer.write(TLObject.serialize_bytes(@fwd_text)
        buffer.write(TLObject.serialize_bytes(@url)
        buffer.write_bytes(@button_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputKeyboardButtonUrlAuth < KeyboardButton
      getter constructor_id = 0xd02e7fd4_u32
      
      property text : String
      property url : String
      property bot : InputUser
      property request_write_access : Bool?
      property fwd_text : String?
      
      def initialize(
        @text : String,
        @url : String,
        @bot : InputUser,
        @request_write_access : Bool = false,
        @fwd_text : String? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@request_write_access ? 0 : 0)
        buffer.write_byte(@fwd_text ? 1 : 0)
        buffer.write(TLObject.serialize_bytes(@text)
        buffer.write(TLObject.serialize_bytes(@fwd_text)
        buffer.write(TLObject.serialize_bytes(@url)
        buffer.write(@bot.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class KeyboardButtonRequestPoll < KeyboardButton
      getter constructor_id = 0xbbc7515d_u32
      
      property text : String
      property quiz : Bool?
      
      def initialize(
        @text : String,
        @quiz : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@quiz ? 0 : 0)
        buffer.write(@quiz.to_bytes)
        buffer.write(TLObject.serialize_bytes(@text)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class KeyboardButtonRow < TLObject
      getter constructor_id = 0x77608b83_u32
      
      property buttons : Array(KeyboardButton)
      
      def initialize(
        @buttons : Array(KeyboardButton)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@buttons.size, IO::ByteFormat::LittleEndian)
        @buttons.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ReplyKeyboardHide < ReplyMarkup
      getter constructor_id = 0xa03e5b85_u32
      
      property selective : Bool?
      
      def initialize(
        @selective : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@selective ? 2 : 0)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ReplyKeyboardForceReply < ReplyMarkup
      getter constructor_id = 0xf4108aa0_u32
      
      property single_use : Bool?
      property selective : Bool?
      
      def initialize(
        @single_use : Bool = false,
        @selective : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@single_use ? 1 : 0)
        buffer.write_byte(@selective ? 2 : 0)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ReplyKeyboardMarkup < ReplyMarkup
      getter constructor_id = 0x3502758c_u32
      
      property rows : Array(KeyboardButtonRow)
      property resize : Bool?
      property single_use : Bool?
      property selective : Bool?
      
      def initialize(
        @rows : Array(KeyboardButtonRow),
        @resize : Bool = false,
        @single_use : Bool = false,
        @selective : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@resize ? 0 : 0)
        buffer.write_byte(@single_use ? 1 : 0)
        buffer.write_byte(@selective ? 2 : 0)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@rows.size, IO::ByteFormat::LittleEndian)
        @rows.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ReplyInlineMarkup < ReplyMarkup
      getter constructor_id = 0x48a30254_u32
      
      property rows : Array(KeyboardButtonRow)
      
      def initialize(
        @rows : Array(KeyboardButtonRow)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@rows.size, IO::ByteFormat::LittleEndian)
        @rows.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageEntityUnknown < MessageEntity
      getter constructor_id = 0xbb92ba95_u32
      
      property offset : Int32
      property length : Int32
      
      def initialize(
        @offset : Int32,
        @length : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@offset, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@length, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageEntityMention < MessageEntity
      getter constructor_id = 0xfa04579d_u32
      
      property offset : Int32
      property length : Int32
      
      def initialize(
        @offset : Int32,
        @length : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@offset, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@length, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageEntityHashtag < MessageEntity
      getter constructor_id = 0x6f635b0d_u32
      
      property offset : Int32
      property length : Int32
      
      def initialize(
        @offset : Int32,
        @length : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@offset, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@length, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageEntityBotCommand < MessageEntity
      getter constructor_id = 0x6cef8ac7_u32
      
      property offset : Int32
      property length : Int32
      
      def initialize(
        @offset : Int32,
        @length : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@offset, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@length, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageEntityUrl < MessageEntity
      getter constructor_id = 0x6ed02538_u32
      
      property offset : Int32
      property length : Int32
      
      def initialize(
        @offset : Int32,
        @length : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@offset, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@length, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageEntityEmail < MessageEntity
      getter constructor_id = 0x64e475c2_u32
      
      property offset : Int32
      property length : Int32
      
      def initialize(
        @offset : Int32,
        @length : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@offset, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@length, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageEntityBold < MessageEntity
      getter constructor_id = 0xbd610bc9_u32
      
      property offset : Int32
      property length : Int32
      
      def initialize(
        @offset : Int32,
        @length : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@offset, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@length, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageEntityItalic < MessageEntity
      getter constructor_id = 0x826f8b60_u32
      
      property offset : Int32
      property length : Int32
      
      def initialize(
        @offset : Int32,
        @length : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@offset, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@length, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageEntityCode < MessageEntity
      getter constructor_id = 0x28a20571_u32
      
      property offset : Int32
      property length : Int32
      
      def initialize(
        @offset : Int32,
        @length : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@offset, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@length, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageEntityPre < MessageEntity
      getter constructor_id = 0x73924be0_u32
      
      property offset : Int32
      property length : Int32
      property language : String
      
      def initialize(
        @offset : Int32,
        @length : Int32,
        @language : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@offset, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@length, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@language)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageEntityTextUrl < MessageEntity
      getter constructor_id = 0x76a6d327_u32
      
      property offset : Int32
      property length : Int32
      property url : String
      
      def initialize(
        @offset : Int32,
        @length : Int32,
        @url : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@offset, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@length, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@url)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageEntityMentionName < MessageEntity
      getter constructor_id = 0x352dca58_u32
      
      property offset : Int32
      property length : Int32
      property user_id : Int32
      
      def initialize(
        @offset : Int32,
        @length : Int32,
        @user_id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@offset, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@length, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputMessageEntityMentionName < MessageEntity
      getter constructor_id = 0x208e68c9_u32
      
      property offset : Int32
      property length : Int32
      property user_id : InputUser
      
      def initialize(
        @offset : Int32,
        @length : Int32,
        @user_id : InputUser
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@offset, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@length, IO::ByteFormat::LittleEndian)
        buffer.write(@user_id.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageEntityPhone < MessageEntity
      getter constructor_id = 0x9b69e34b_u32
      
      property offset : Int32
      property length : Int32
      
      def initialize(
        @offset : Int32,
        @length : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@offset, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@length, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageEntityCashtag < MessageEntity
      getter constructor_id = 0x4c4e743f_u32
      
      property offset : Int32
      property length : Int32
      
      def initialize(
        @offset : Int32,
        @length : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@offset, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@length, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageEntityUnderline < MessageEntity
      getter constructor_id = 0x9c4e7e8b_u32
      
      property offset : Int32
      property length : Int32
      
      def initialize(
        @offset : Int32,
        @length : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@offset, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@length, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageEntityStrike < MessageEntity
      getter constructor_id = 0xbf0693d4_u32
      
      property offset : Int32
      property length : Int32
      
      def initialize(
        @offset : Int32,
        @length : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@offset, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@length, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageEntityBlockquote < MessageEntity
      getter constructor_id = 0x020df5d0_u32
      
      property offset : Int32
      property length : Int32
      
      def initialize(
        @offset : Int32,
        @length : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@offset, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@length, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageEntityBankCard < MessageEntity
      getter constructor_id = 0x761e6af4_u32
      
      property offset : Int32
      property length : Int32
      
      def initialize(
        @offset : Int32,
        @length : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@offset, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@length, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputChannelEmpty < InputChannel
      getter constructor_id = 0xee8c1e86_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputChannel < TLObject
      getter constructor_id = 0xafeb712e_u32
      
      property channel_id : Int32
      property access_hash : Int64
      
      def initialize(
        @channel_id : Int32,
        @access_hash : Int64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@channel_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputChannelFromMessage < InputChannel
      getter constructor_id = 0x2a286531_u32
      
      property peer : InputPeer
      property msg_id : Int32
      property channel_id : Int32
      
      def initialize(
        @peer : InputPeer,
        @msg_id : Int32,
        @channel_id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@peer.to_bytes)
        buffer.write_bytes(@msg_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@channel_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageRange < TLObject
      getter constructor_id = 0x0ae30253_u32
      
      property min_id : Int32
      property max_id : Int32
      
      def initialize(
        @min_id : Int32,
        @max_id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@min_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@max_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelMessagesFilterEmpty < ChannelMessagesFilter
      getter constructor_id = 0x94d42ee7_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelMessagesFilter < TLObject
      getter constructor_id = 0xcd77d957_u32
      
      property ranges : Array(MessageRange)
      property exclude_new_messages : Bool?
      
      def initialize(
        @ranges : Array(MessageRange),
        @exclude_new_messages : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@exclude_new_messages ? 1 : 0)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@ranges.size, IO::ByteFormat::LittleEndian)
        @ranges.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelParticipant < TLObject
      getter constructor_id = 0x15ebac1d_u32
      
      property user_id : Int32
      property date : Int32
      
      def initialize(
        @user_id : Int32,
        @date : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelParticipantSelf < ChannelParticipant
      getter constructor_id = 0xa3289a6d_u32
      
      property user_id : Int32
      property inviter_id : Int32
      property date : Int32
      
      def initialize(
        @user_id : Int32,
        @inviter_id : Int32,
        @date : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@inviter_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelParticipantCreator < ChannelParticipant
      getter constructor_id = 0x808d15a4_u32
      
      property user_id : Int32
      property rank : String?
      
      def initialize(
        @user_id : Int32,
        @rank : String? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@rank ? 0 : 0)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@rank)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelParticipantAdmin < ChannelParticipant
      getter constructor_id = 0xccbebbaf_u32
      
      property user_id : Int32
      property promoted_by : Int32
      property date : Int32
      property admin_rights : ChatAdminRights
      property can_edit : Bool?
      property self : Bool?
      property inviter_id : Int32?
      property rank : String?
      
      def initialize(
        @user_id : Int32,
        @promoted_by : Int32,
        @date : Int32,
        @admin_rights : ChatAdminRights,
        @can_edit : Bool = false,
        @self : Bool = false,
        @inviter_id : Int32? = nil,
        @rank : String? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@can_edit ? 0 : 0)
        buffer.write_byte(@self ? 1 : 0)
        buffer.write_byte(@inviter_id ? 1 : 0)
        buffer.write_byte(@rank ? 2 : 0)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@inviter_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@promoted_by, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer.write(@admin_rights.to_bytes)
        buffer.write(TLObject.serialize_bytes(@rank)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelParticipantBanned < ChannelParticipant
      getter constructor_id = 0x1c0facaf_u32
      
      property user_id : Int32
      property kicked_by : Int32
      property date : Int32
      property banned_rights : ChatBannedRights
      property left : Bool?
      
      def initialize(
        @user_id : Int32,
        @kicked_by : Int32,
        @date : Int32,
        @banned_rights : ChatBannedRights,
        @left : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@left ? 0 : 0)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@kicked_by, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer.write(@banned_rights.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelParticipantsRecent < ChannelParticipantsFilter
      getter constructor_id = 0xde3f3c79_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelParticipantsAdmins < ChannelParticipantsFilter
      getter constructor_id = 0xb4608969_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelParticipantsKicked < ChannelParticipantsFilter
      getter constructor_id = 0xa3b54985_u32
      
      property q : String
      
      def initialize(
        @q : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@q)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelParticipantsBots < ChannelParticipantsFilter
      getter constructor_id = 0xb0d1865b_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelParticipantsBanned < ChannelParticipantsFilter
      getter constructor_id = 0x1427a5e1_u32
      
      property q : String
      
      def initialize(
        @q : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@q)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelParticipantsSearch < ChannelParticipantsFilter
      getter constructor_id = 0x0656ac4b_u32
      
      property q : String
      
      def initialize(
        @q : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@q)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelParticipantsContacts < ChannelParticipantsFilter
      getter constructor_id = 0xbb6ae88d_u32
      
      property q : String
      
      def initialize(
        @q : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@q)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class FoundGif < TLObject
      getter constructor_id = 0x162ecc1f_u32
      
      property url : String
      property thumb_url : String
      property content_url : String
      property content_type : String
      property w : Int32
      property h : Int32
      
      def initialize(
        @url : String,
        @thumb_url : String,
        @content_url : String,
        @content_type : String,
        @w : Int32,
        @h : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@url)
        buffer.write(TLObject.serialize_bytes(@thumb_url)
        buffer.write(TLObject.serialize_bytes(@content_url)
        buffer.write(TLObject.serialize_bytes(@content_type)
        buffer.write_bytes(@w, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@h, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class FoundGifCached < FoundGif
      getter constructor_id = 0x9c750409_u32
      
      property url : String
      property photo : Photo
      property document : Document
      
      def initialize(
        @url : String,
        @photo : Photo,
        @document : Document
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@url)
        buffer.write(@photo.to_bytes)
        buffer.write(@document.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputBotInlineMessageMediaAuto < InputBotInlineMessage
      getter constructor_id = 0x3380c786_u32
      
      property message : String
      property entities : Array(MessageEntity)?
      property reply_markup : ReplyMarkup?
      
      def initialize(
        @message : String,
        @entities : Array(MessageEntity)? = nil,
        @reply_markup : ReplyMarkup? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@entities ? 1 : 0)
        buffer.write_byte(@reply_markup ? 2 : 0)
        buffer.write(TLObject.serialize_bytes(@message)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@entities.size, IO::ByteFormat::LittleEndian)
        @entities.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write(@reply_markup.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputBotInlineMessageText < InputBotInlineMessage
      getter constructor_id = 0x3dcd7a87_u32
      
      property message : String
      property no_webpage : Bool?
      property entities : Array(MessageEntity)?
      property reply_markup : ReplyMarkup?
      
      def initialize(
        @message : String,
        @no_webpage : Bool = false,
        @entities : Array(MessageEntity)? = nil,
        @reply_markup : ReplyMarkup? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@no_webpage ? 0 : 0)
        buffer.write_byte(@entities ? 1 : 0)
        buffer.write_byte(@reply_markup ? 2 : 0)
        buffer.write(TLObject.serialize_bytes(@message)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@entities.size, IO::ByteFormat::LittleEndian)
        @entities.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write(@reply_markup.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputBotInlineMessageMediaGeo < InputBotInlineMessage
      getter constructor_id = 0xc1b15d65_u32
      
      property geo_point : InputGeoPoint
      property period : Int32
      property reply_markup : ReplyMarkup?
      
      def initialize(
        @geo_point : InputGeoPoint,
        @period : Int32,
        @reply_markup : ReplyMarkup? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@reply_markup ? 2 : 0)
        buffer.write(@geo_point.to_bytes)
        buffer.write_bytes(@period, IO::ByteFormat::LittleEndian)
        buffer.write(@reply_markup.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputBotInlineMessageMediaVenue < InputBotInlineMessage
      getter constructor_id = 0x417bbf11_u32
      
      property geo_point : InputGeoPoint
      property title : String
      property address : String
      property provider : String
      property venue_id : String
      property venue_type : String
      property reply_markup : ReplyMarkup?
      
      def initialize(
        @geo_point : InputGeoPoint,
        @title : String,
        @address : String,
        @provider : String,
        @venue_id : String,
        @venue_type : String,
        @reply_markup : ReplyMarkup? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@reply_markup ? 2 : 0)
        buffer.write(@geo_point.to_bytes)
        buffer.write(TLObject.serialize_bytes(@title)
        buffer.write(TLObject.serialize_bytes(@address)
        buffer.write(TLObject.serialize_bytes(@provider)
        buffer.write(TLObject.serialize_bytes(@venue_id)
        buffer.write(TLObject.serialize_bytes(@venue_type)
        buffer.write(@reply_markup.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputBotInlineMessageMediaContact < InputBotInlineMessage
      getter constructor_id = 0xa6edbffd_u32
      
      property phone_number : String
      property first_name : String
      property last_name : String
      property vcard : String
      property reply_markup : ReplyMarkup?
      
      def initialize(
        @phone_number : String,
        @first_name : String,
        @last_name : String,
        @vcard : String,
        @reply_markup : ReplyMarkup? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@reply_markup ? 2 : 0)
        buffer.write(TLObject.serialize_bytes(@phone_number)
        buffer.write(TLObject.serialize_bytes(@first_name)
        buffer.write(TLObject.serialize_bytes(@last_name)
        buffer.write(TLObject.serialize_bytes(@vcard)
        buffer.write(@reply_markup.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputBotInlineMessageGame < InputBotInlineMessage
      getter constructor_id = 0x4b425864_u32
      
      property reply_markup : ReplyMarkup?
      
      def initialize(
        @reply_markup : ReplyMarkup? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@reply_markup ? 2 : 0)
        buffer.write(@reply_markup.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputBotInlineResult < TLObject
      getter constructor_id = 0x88bf9319_u32
      
      property id : String
      property type : String
      property send_message : InputBotInlineMessage
      property title : String?
      property description : String?
      property url : String?
      property thumb : InputWebDocument?
      property content : InputWebDocument?
      
      def initialize(
        @id : String,
        @type : String,
        @send_message : InputBotInlineMessage,
        @title : String? = nil,
        @description : String? = nil,
        @url : String? = nil,
        @thumb : InputWebDocument? = nil,
        @content : InputWebDocument? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@title ? 1 : 0)
        buffer.write_byte(@description ? 2 : 0)
        buffer.write_byte(@url ? 3 : 0)
        buffer.write_byte(@thumb ? 4 : 0)
        buffer.write_byte(@content ? 5 : 0)
        buffer.write(TLObject.serialize_bytes(@id)
        buffer.write(TLObject.serialize_bytes(@type)
        buffer.write(TLObject.serialize_bytes(@title)
        buffer.write(TLObject.serialize_bytes(@description)
        buffer.write(TLObject.serialize_bytes(@url)
        buffer.write(@thumb.to_bytes)
        buffer.write(@content.to_bytes)
        buffer.write(@send_message.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputBotInlineResultPhoto < InputBotInlineResult
      getter constructor_id = 0xa8d864a7_u32
      
      property id : String
      property type : String
      property photo : InputPhoto
      property send_message : InputBotInlineMessage
      
      def initialize(
        @id : String,
        @type : String,
        @photo : InputPhoto,
        @send_message : InputBotInlineMessage
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@id)
        buffer.write(TLObject.serialize_bytes(@type)
        buffer.write(@photo.to_bytes)
        buffer.write(@send_message.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputBotInlineResultDocument < InputBotInlineResult
      getter constructor_id = 0xfff8fdc4_u32
      
      property id : String
      property type : String
      property document : InputDocument
      property send_message : InputBotInlineMessage
      property title : String?
      property description : String?
      
      def initialize(
        @id : String,
        @type : String,
        @document : InputDocument,
        @send_message : InputBotInlineMessage,
        @title : String? = nil,
        @description : String? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@title ? 1 : 0)
        buffer.write_byte(@description ? 2 : 0)
        buffer.write(TLObject.serialize_bytes(@id)
        buffer.write(TLObject.serialize_bytes(@type)
        buffer.write(TLObject.serialize_bytes(@title)
        buffer.write(TLObject.serialize_bytes(@description)
        buffer.write(@document.to_bytes)
        buffer.write(@send_message.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputBotInlineResultGame < InputBotInlineResult
      getter constructor_id = 0x4fa417f2_u32
      
      property id : String
      property short_name : String
      property send_message : InputBotInlineMessage
      
      def initialize(
        @id : String,
        @short_name : String,
        @send_message : InputBotInlineMessage
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@id)
        buffer.write(TLObject.serialize_bytes(@short_name)
        buffer.write(@send_message.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class BotInlineMessageMediaAuto < BotInlineMessage
      getter constructor_id = 0x764cf810_u32
      
      property message : String
      property entities : Array(MessageEntity)?
      property reply_markup : ReplyMarkup?
      
      def initialize(
        @message : String,
        @entities : Array(MessageEntity)? = nil,
        @reply_markup : ReplyMarkup? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@entities ? 1 : 0)
        buffer.write_byte(@reply_markup ? 2 : 0)
        buffer.write(TLObject.serialize_bytes(@message)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@entities.size, IO::ByteFormat::LittleEndian)
        @entities.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write(@reply_markup.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class BotInlineMessageText < BotInlineMessage
      getter constructor_id = 0x8c7f65e2_u32
      
      property message : String
      property no_webpage : Bool?
      property entities : Array(MessageEntity)?
      property reply_markup : ReplyMarkup?
      
      def initialize(
        @message : String,
        @no_webpage : Bool = false,
        @entities : Array(MessageEntity)? = nil,
        @reply_markup : ReplyMarkup? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@no_webpage ? 0 : 0)
        buffer.write_byte(@entities ? 1 : 0)
        buffer.write_byte(@reply_markup ? 2 : 0)
        buffer.write(TLObject.serialize_bytes(@message)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@entities.size, IO::ByteFormat::LittleEndian)
        @entities.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write(@reply_markup.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class BotInlineMessageMediaGeo < BotInlineMessage
      getter constructor_id = 0xb722de65_u32
      
      property geo : GeoPoint
      property period : Int32
      property reply_markup : ReplyMarkup?
      
      def initialize(
        @geo : GeoPoint,
        @period : Int32,
        @reply_markup : ReplyMarkup? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@reply_markup ? 2 : 0)
        buffer.write(@geo.to_bytes)
        buffer.write_bytes(@period, IO::ByteFormat::LittleEndian)
        buffer.write(@reply_markup.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class BotInlineMessageMediaVenue < BotInlineMessage
      getter constructor_id = 0x8a86659c_u32
      
      property geo : GeoPoint
      property title : String
      property address : String
      property provider : String
      property venue_id : String
      property venue_type : String
      property reply_markup : ReplyMarkup?
      
      def initialize(
        @geo : GeoPoint,
        @title : String,
        @address : String,
        @provider : String,
        @venue_id : String,
        @venue_type : String,
        @reply_markup : ReplyMarkup? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@reply_markup ? 2 : 0)
        buffer.write(@geo.to_bytes)
        buffer.write(TLObject.serialize_bytes(@title)
        buffer.write(TLObject.serialize_bytes(@address)
        buffer.write(TLObject.serialize_bytes(@provider)
        buffer.write(TLObject.serialize_bytes(@venue_id)
        buffer.write(TLObject.serialize_bytes(@venue_type)
        buffer.write(@reply_markup.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class BotInlineMessageMediaContact < BotInlineMessage
      getter constructor_id = 0x18d1cdc2_u32
      
      property phone_number : String
      property first_name : String
      property last_name : String
      property vcard : String
      property reply_markup : ReplyMarkup?
      
      def initialize(
        @phone_number : String,
        @first_name : String,
        @last_name : String,
        @vcard : String,
        @reply_markup : ReplyMarkup? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@reply_markup ? 2 : 0)
        buffer.write(TLObject.serialize_bytes(@phone_number)
        buffer.write(TLObject.serialize_bytes(@first_name)
        buffer.write(TLObject.serialize_bytes(@last_name)
        buffer.write(TLObject.serialize_bytes(@vcard)
        buffer.write(@reply_markup.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class BotInlineResult < TLObject
      getter constructor_id = 0x11965f3a_u32
      
      property id : String
      property type : String
      property send_message : BotInlineMessage
      property title : String?
      property description : String?
      property url : String?
      property thumb : WebDocument?
      property content : WebDocument?
      
      def initialize(
        @id : String,
        @type : String,
        @send_message : BotInlineMessage,
        @title : String? = nil,
        @description : String? = nil,
        @url : String? = nil,
        @thumb : WebDocument? = nil,
        @content : WebDocument? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@title ? 1 : 0)
        buffer.write_byte(@description ? 2 : 0)
        buffer.write_byte(@url ? 3 : 0)
        buffer.write_byte(@thumb ? 4 : 0)
        buffer.write_byte(@content ? 5 : 0)
        buffer.write(TLObject.serialize_bytes(@id)
        buffer.write(TLObject.serialize_bytes(@type)
        buffer.write(TLObject.serialize_bytes(@title)
        buffer.write(TLObject.serialize_bytes(@description)
        buffer.write(TLObject.serialize_bytes(@url)
        buffer.write(@thumb.to_bytes)
        buffer.write(@content.to_bytes)
        buffer.write(@send_message.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class BotInlineMediaResult < BotInlineResult
      getter constructor_id = 0x17db940b_u32
      
      property id : String
      property type : String
      property send_message : BotInlineMessage
      property photo : Photo?
      property document : Document?
      property title : String?
      property description : String?
      
      def initialize(
        @id : String,
        @type : String,
        @send_message : BotInlineMessage,
        @photo : Photo? = nil,
        @document : Document? = nil,
        @title : String? = nil,
        @description : String? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@photo ? 0 : 0)
        buffer.write_byte(@document ? 1 : 0)
        buffer.write_byte(@title ? 2 : 0)
        buffer.write_byte(@description ? 3 : 0)
        buffer.write(TLObject.serialize_bytes(@id)
        buffer.write(TLObject.serialize_bytes(@type)
        buffer.write(@photo.to_bytes)
        buffer.write(@document.to_bytes)
        buffer.write(TLObject.serialize_bytes(@title)
        buffer.write(TLObject.serialize_bytes(@description)
        buffer.write(@send_message.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ExportedMessageLink < TLObject
      getter constructor_id = 0x5dab1af4_u32
      
      property link : String
      property html : String
      
      def initialize(
        @link : String,
        @html : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@link)
        buffer.write(TLObject.serialize_bytes(@html)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageFwdHeader < TLObject
      getter constructor_id = 0xec338270_u32
      
      property date : Int32
      property from_id : Int32?
      property channel_id : Int32?
      property channel_post : Int32?
      property post_author : String?
      property saved_from_peer : Peer?
      property saved_from_msg_id : Int32?
      property from_name : String?
      
      def initialize(
        @date : Int32,
        @from_id : Int32? = nil,
        @channel_id : Int32? = nil,
        @channel_post : Int32? = nil,
        @post_author : String? = nil,
        @saved_from_peer : Peer? = nil,
        @saved_from_msg_id : Int32? = nil,
        @from_name : String? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@from_id ? 0 : 0)
        buffer.write_byte(@from_name ? 5 : 0)
        buffer.write_byte(@channel_id ? 1 : 0)
        buffer.write_byte(@channel_post ? 2 : 0)
        buffer.write_byte(@post_author ? 3 : 0)
        buffer.write_byte(@saved_from_peer ? 4 : 0)
        buffer.write_byte(@saved_from_msg_id ? 4 : 0)
        buffer.write_bytes(@from_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@from_name)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@channel_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@channel_post, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@post_author)
        buffer.write(@saved_from_peer.to_bytes)
        buffer.write_bytes(@saved_from_msg_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputBotInlineMessageID < TLObject
      getter constructor_id = 0x890c3d89_u32
      
      property dc_id : Int32
      property id : Int64
      property access_hash : Int64
      
      def initialize(
        @dc_id : Int32,
        @id : Int64,
        @access_hash : Int64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@dc_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InlineBotSwitchPM < TLObject
      getter constructor_id = 0x3c20629f_u32
      
      property text : String
      property start_param : String
      
      def initialize(
        @text : String,
        @start_param : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@text)
        buffer.write(TLObject.serialize_bytes(@start_param)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class TopPeer < TLObject
      getter constructor_id = 0xedcdc05b_u32
      
      property peer : Peer
      property rating : Float64
      
      def initialize(
        @peer : Peer,
        @rating : Float64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@peer.to_bytes)
        buffer.write_bytes(@rating, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class TopPeerCategoryBotsPM < TopPeerCategory
      getter constructor_id = 0xab661b5b_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class TopPeerCategoryBotsInline < TopPeerCategory
      getter constructor_id = 0x148677e2_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class TopPeerCategoryCorrespondents < TopPeerCategory
      getter constructor_id = 0x0637b7ed_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class TopPeerCategoryGroups < TopPeerCategory
      getter constructor_id = 0xbd17a14a_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class TopPeerCategoryChannels < TopPeerCategory
      getter constructor_id = 0x161d9628_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class TopPeerCategoryPhoneCalls < TopPeerCategory
      getter constructor_id = 0x1e76a78c_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class TopPeerCategoryForwardUsers < TopPeerCategory
      getter constructor_id = 0xa8406ca9_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class TopPeerCategoryForwardChats < TopPeerCategory
      getter constructor_id = 0xfbeec0f0_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class TopPeerCategoryPeers < TLObject
      getter constructor_id = 0xfb834291_u32
      
      property category : TopPeerCategory
      property count : Int32
      property peers : Array(TopPeer)
      
      def initialize(
        @category : TopPeerCategory,
        @count : Int32,
        @peers : Array(TopPeer)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@category.to_bytes)
        buffer.write_bytes(@count, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@peers.size, IO::ByteFormat::LittleEndian)
        @peers.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class DraftMessageEmpty < DraftMessage
      getter constructor_id = 0x1b0c841a_u32
      
      property date : Int32?
      
      def initialize(
        @date : Int32? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@date ? 0 : 0)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class DraftMessage < TLObject
      getter constructor_id = 0xfd8e711f_u32
      
      property message : String
      property date : Int32
      property reply_to_msg_id : Int32?
      property no_webpage : Bool?
      property entities : Array(MessageEntity)?
      
      def initialize(
        @message : String,
        @date : Int32,
        @reply_to_msg_id : Int32? = nil,
        @no_webpage : Bool = false,
        @entities : Array(MessageEntity)? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@no_webpage ? 1 : 0)
        buffer.write_byte(@reply_to_msg_id ? 0 : 0)
        buffer.write_byte(@entities ? 3 : 0)
        buffer.write_bytes(@reply_to_msg_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@message)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@entities.size, IO::ByteFormat::LittleEndian)
        @entities.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class StickerSetCovered < TLObject
      getter constructor_id = 0x6410a5d2_u32
      
      property set : StickerSet
      property cover : Document
      
      def initialize(
        @set : StickerSet,
        @cover : Document
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@set.to_bytes)
        buffer.write(@cover.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class StickerSetMultiCovered < StickerSetCovered
      getter constructor_id = 0x3407e51b_u32
      
      property set : StickerSet
      property covers : Array(Document)
      
      def initialize(
        @set : StickerSet,
        @covers : Array(Document)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@set.to_bytes)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@covers.size, IO::ByteFormat::LittleEndian)
        @covers.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MaskCoords < TLObject
      getter constructor_id = 0xaed6dbb2_u32
      
      property n : Int32
      property x : Float64
      property y : Float64
      property zoom : Float64
      
      def initialize(
        @n : Int32,
        @x : Float64,
        @y : Float64,
        @zoom : Float64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@n, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@x, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@y, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@zoom, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputStickeredMediaPhoto < InputStickeredMedia
      getter constructor_id = 0x4a992157_u32
      
      property id : InputPhoto
      
      def initialize(
        @id : InputPhoto
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@id.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputStickeredMediaDocument < InputStickeredMedia
      getter constructor_id = 0x0438865b_u32
      
      property id : InputDocument
      
      def initialize(
        @id : InputDocument
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@id.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class Game < TLObject
      getter constructor_id = 0xbdf9653b_u32
      
      property id : Int64
      property access_hash : Int64
      property short_name : String
      property title : String
      property description : String
      property photo : Photo
      property document : Document?
      
      def initialize(
        @id : Int64,
        @access_hash : Int64,
        @short_name : String,
        @title : String,
        @description : String,
        @photo : Photo,
        @document : Document? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@document ? 0 : 0)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@short_name)
        buffer.write(TLObject.serialize_bytes(@title)
        buffer.write(TLObject.serialize_bytes(@description)
        buffer.write(@photo.to_bytes)
        buffer.write(@document.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputGameID < InputGame
      getter constructor_id = 0x032c3e77_u32
      
      property id : Int64
      property access_hash : Int64
      
      def initialize(
        @id : Int64,
        @access_hash : Int64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputGameShortName < InputGame
      getter constructor_id = 0xc331e80a_u32
      
      property bot_id : InputUser
      property short_name : String
      
      def initialize(
        @bot_id : InputUser,
        @short_name : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@bot_id.to_bytes)
        buffer.write(TLObject.serialize_bytes(@short_name)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class HighScore < TLObject
      getter constructor_id = 0x58fffcd0_u32
      
      property pos : Int32
      property user_id : Int32
      property score : Int32
      
      def initialize(
        @pos : Int32,
        @user_id : Int32,
        @score : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@pos, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@score, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class TextEmpty < RichText
      getter constructor_id = 0xdc3d824f_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class TextPlain < RichText
      getter constructor_id = 0x744694e0_u32
      
      property text : String
      
      def initialize(
        @text : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@text)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class TextBold < RichText
      getter constructor_id = 0x6724abc4_u32
      
      property text : RichText
      
      def initialize(
        @text : RichText
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@text.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class TextItalic < RichText
      getter constructor_id = 0xd912a59c_u32
      
      property text : RichText
      
      def initialize(
        @text : RichText
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@text.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class TextUnderline < RichText
      getter constructor_id = 0xc12622c4_u32
      
      property text : RichText
      
      def initialize(
        @text : RichText
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@text.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class TextStrike < RichText
      getter constructor_id = 0x9bf8bb95_u32
      
      property text : RichText
      
      def initialize(
        @text : RichText
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@text.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class TextFixed < RichText
      getter constructor_id = 0x6c3f19b9_u32
      
      property text : RichText
      
      def initialize(
        @text : RichText
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@text.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class TextUrl < RichText
      getter constructor_id = 0x3c2884c1_u32
      
      property text : RichText
      property url : String
      property webpage_id : Int64
      
      def initialize(
        @text : RichText,
        @url : String,
        @webpage_id : Int64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@text.to_bytes)
        buffer.write(TLObject.serialize_bytes(@url)
        buffer.write_bytes(@webpage_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class TextEmail < RichText
      getter constructor_id = 0xde5a0dd6_u32
      
      property text : RichText
      property email : String
      
      def initialize(
        @text : RichText,
        @email : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@text.to_bytes)
        buffer.write(TLObject.serialize_bytes(@email)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class TextConcat < RichText
      getter constructor_id = 0x7e6260d7_u32
      
      property texts : Array(RichText)
      
      def initialize(
        @texts : Array(RichText)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@texts.size, IO::ByteFormat::LittleEndian)
        @texts.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class TextSubscript < RichText
      getter constructor_id = 0xed6a8504_u32
      
      property text : RichText
      
      def initialize(
        @text : RichText
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@text.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class TextSuperscript < RichText
      getter constructor_id = 0xc7fb5e01_u32
      
      property text : RichText
      
      def initialize(
        @text : RichText
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@text.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class TextMarked < RichText
      getter constructor_id = 0x034b8621_u32
      
      property text : RichText
      
      def initialize(
        @text : RichText
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@text.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class TextPhone < RichText
      getter constructor_id = 0x1ccb966a_u32
      
      property text : RichText
      property phone : String
      
      def initialize(
        @text : RichText,
        @phone : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@text.to_bytes)
        buffer.write(TLObject.serialize_bytes(@phone)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class TextImage < RichText
      getter constructor_id = 0x081ccf4f_u32
      
      property document_id : Int64
      property w : Int32
      property h : Int32
      
      def initialize(
        @document_id : Int64,
        @w : Int32,
        @h : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@document_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@w, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@h, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class TextAnchor < RichText
      getter constructor_id = 0x35553762_u32
      
      property text : RichText
      property name : String
      
      def initialize(
        @text : RichText,
        @name : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@text.to_bytes)
        buffer.write(TLObject.serialize_bytes(@name)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PageBlockUnsupported < PageBlock
      getter constructor_id = 0x13567e8a_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PageBlockTitle < PageBlock
      getter constructor_id = 0x70abc3fd_u32
      
      property text : RichText
      
      def initialize(
        @text : RichText
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@text.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PageBlockSubtitle < PageBlock
      getter constructor_id = 0x8ffa9a1f_u32
      
      property text : RichText
      
      def initialize(
        @text : RichText
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@text.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PageBlockAuthorDate < PageBlock
      getter constructor_id = 0xbaafe5e0_u32
      
      property author : RichText
      property published_date : Int32
      
      def initialize(
        @author : RichText,
        @published_date : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@author.to_bytes)
        buffer.write_bytes(@published_date, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PageBlockHeader < PageBlock
      getter constructor_id = 0xbfd064ec_u32
      
      property text : RichText
      
      def initialize(
        @text : RichText
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@text.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PageBlockSubheader < PageBlock
      getter constructor_id = 0xf12bb6e1_u32
      
      property text : RichText
      
      def initialize(
        @text : RichText
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@text.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PageBlockParagraph < PageBlock
      getter constructor_id = 0x467a0766_u32
      
      property text : RichText
      
      def initialize(
        @text : RichText
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@text.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PageBlockPreformatted < PageBlock
      getter constructor_id = 0xc070d93e_u32
      
      property text : RichText
      property language : String
      
      def initialize(
        @text : RichText,
        @language : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@text.to_bytes)
        buffer.write(TLObject.serialize_bytes(@language)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PageBlockFooter < PageBlock
      getter constructor_id = 0x48870999_u32
      
      property text : RichText
      
      def initialize(
        @text : RichText
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@text.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PageBlockDivider < PageBlock
      getter constructor_id = 0xdb20b188_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PageBlockAnchor < PageBlock
      getter constructor_id = 0xce0d37b0_u32
      
      property name : String
      
      def initialize(
        @name : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@name)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PageBlockList < PageBlock
      getter constructor_id = 0xe4e88011_u32
      
      property items : Array(PageListItem)
      
      def initialize(
        @items : Array(PageListItem)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@items.size, IO::ByteFormat::LittleEndian)
        @items.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PageBlockBlockquote < PageBlock
      getter constructor_id = 0x263d7c26_u32
      
      property text : RichText
      property caption : RichText
      
      def initialize(
        @text : RichText,
        @caption : RichText
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@text.to_bytes)
        buffer.write(@caption.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PageBlockPullquote < PageBlock
      getter constructor_id = 0x4f4456d3_u32
      
      property text : RichText
      property caption : RichText
      
      def initialize(
        @text : RichText,
        @caption : RichText
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@text.to_bytes)
        buffer.write(@caption.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PageBlockPhoto < PageBlock
      getter constructor_id = 0x1759c560_u32
      
      property photo_id : Int64
      property caption : PageCaption
      property url : String?
      property webpage_id : Int64?
      
      def initialize(
        @photo_id : Int64,
        @caption : PageCaption,
        @url : String? = nil,
        @webpage_id : Int64? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@url ? 0 : 0)
        buffer.write_byte(@webpage_id ? 0 : 0)
        buffer.write_bytes(@photo_id, IO::ByteFormat::LittleEndian)
        buffer.write(@caption.to_bytes)
        buffer.write(TLObject.serialize_bytes(@url)
        buffer.write_bytes(@webpage_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PageBlockVideo < PageBlock
      getter constructor_id = 0x7c8fe7b6_u32
      
      property video_id : Int64
      property caption : PageCaption
      property autoplay : Bool?
      property loop : Bool?
      
      def initialize(
        @video_id : Int64,
        @caption : PageCaption,
        @autoplay : Bool = false,
        @loop : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@autoplay ? 0 : 0)
        buffer.write_byte(@loop ? 1 : 0)
        buffer.write_bytes(@video_id, IO::ByteFormat::LittleEndian)
        buffer.write(@caption.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PageBlockCover < PageBlock
      getter constructor_id = 0x39f23300_u32
      
      property cover : PageBlock
      
      def initialize(
        @cover : PageBlock
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@cover.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PageBlockEmbed < PageBlock
      getter constructor_id = 0xa8718dc5_u32
      
      property caption : PageCaption
      property full_width : Bool?
      property url : String?
      property html : String?
      property allow_scrolling : Bool?
      property poster_photo_id : Int64?
      property w : Int32?
      property h : Int32?
      
      def initialize(
        @caption : PageCaption,
        @full_width : Bool = false,
        @url : String? = nil,
        @html : String? = nil,
        @allow_scrolling : Bool = false,
        @poster_photo_id : Int64? = nil,
        @w : Int32? = nil,
        @h : Int32? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@full_width ? 0 : 0)
        buffer.write_byte(@allow_scrolling ? 3 : 0)
        buffer.write_byte(@url ? 1 : 0)
        buffer.write_byte(@html ? 2 : 0)
        buffer.write_byte(@poster_photo_id ? 4 : 0)
        buffer.write_byte(@w ? 5 : 0)
        buffer.write_byte(@h ? 5 : 0)
        buffer.write(TLObject.serialize_bytes(@url)
        buffer.write(TLObject.serialize_bytes(@html)
        buffer.write_bytes(@poster_photo_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@w, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@h, IO::ByteFormat::LittleEndian)
        buffer.write(@caption.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PageBlockEmbedPost < PageBlock
      getter constructor_id = 0xf259a80b_u32
      
      property url : String
      property webpage_id : Int64
      property author_photo_id : Int64
      property author : String
      property date : Int32
      property blocks : Array(PageBlock)
      property caption : PageCaption
      
      def initialize(
        @url : String,
        @webpage_id : Int64,
        @author_photo_id : Int64,
        @author : String,
        @date : Int32,
        @blocks : Array(PageBlock),
        @caption : PageCaption
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@url)
        buffer.write_bytes(@webpage_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@author_photo_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@author)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@blocks.size, IO::ByteFormat::LittleEndian)
        @blocks.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write(@caption.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PageBlockCollage < PageBlock
      getter constructor_id = 0x65a0fa4d_u32
      
      property items : Array(PageBlock)
      property caption : PageCaption
      
      def initialize(
        @items : Array(PageBlock),
        @caption : PageCaption
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@items.size, IO::ByteFormat::LittleEndian)
        @items.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write(@caption.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PageBlockSlideshow < PageBlock
      getter constructor_id = 0x031f9590_u32
      
      property items : Array(PageBlock)
      property caption : PageCaption
      
      def initialize(
        @items : Array(PageBlock),
        @caption : PageCaption
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@items.size, IO::ByteFormat::LittleEndian)
        @items.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write(@caption.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PageBlockChannel < PageBlock
      getter constructor_id = 0xef1751b5_u32
      
      property channel : Chat
      
      def initialize(
        @channel : Chat
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@channel.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PageBlockAudio < PageBlock
      getter constructor_id = 0x804361ea_u32
      
      property audio_id : Int64
      property caption : PageCaption
      
      def initialize(
        @audio_id : Int64,
        @caption : PageCaption
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@audio_id, IO::ByteFormat::LittleEndian)
        buffer.write(@caption.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PageBlockKicker < PageBlock
      getter constructor_id = 0x1e148390_u32
      
      property text : RichText
      
      def initialize(
        @text : RichText
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@text.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PageBlockTable < PageBlock
      getter constructor_id = 0xbf4dea82_u32
      
      property title : RichText
      property rows : Array(PageTableRow)
      property bordered : Bool?
      property striped : Bool?
      
      def initialize(
        @title : RichText,
        @rows : Array(PageTableRow),
        @bordered : Bool = false,
        @striped : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@bordered ? 0 : 0)
        buffer.write_byte(@striped ? 1 : 0)
        buffer.write(@title.to_bytes)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@rows.size, IO::ByteFormat::LittleEndian)
        @rows.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PageBlockOrderedList < PageBlock
      getter constructor_id = 0x9a8ae1e1_u32
      
      property items : Array(PageListOrderedItem)
      
      def initialize(
        @items : Array(PageListOrderedItem)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@items.size, IO::ByteFormat::LittleEndian)
        @items.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PageBlockDetails < PageBlock
      getter constructor_id = 0x76768bed_u32
      
      property blocks : Array(PageBlock)
      property title : RichText
      property open : Bool?
      
      def initialize(
        @blocks : Array(PageBlock),
        @title : RichText,
        @open : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@open ? 0 : 0)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@blocks.size, IO::ByteFormat::LittleEndian)
        @blocks.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write(@title.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PageBlockRelatedArticles < PageBlock
      getter constructor_id = 0x16115a96_u32
      
      property title : RichText
      property articles : Array(PageRelatedArticle)
      
      def initialize(
        @title : RichText,
        @articles : Array(PageRelatedArticle)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@title.to_bytes)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@articles.size, IO::ByteFormat::LittleEndian)
        @articles.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PageBlockMap < PageBlock
      getter constructor_id = 0xa44f3ef6_u32
      
      property geo : GeoPoint
      property zoom : Int32
      property w : Int32
      property h : Int32
      property caption : PageCaption
      
      def initialize(
        @geo : GeoPoint,
        @zoom : Int32,
        @w : Int32,
        @h : Int32,
        @caption : PageCaption
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@geo.to_bytes)
        buffer.write_bytes(@zoom, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@w, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@h, IO::ByteFormat::LittleEndian)
        buffer.write(@caption.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PhoneCallDiscardReasonMissed < PhoneCallDiscardReason
      getter constructor_id = 0x85e42301_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PhoneCallDiscardReasonDisconnect < PhoneCallDiscardReason
      getter constructor_id = 0xe095c1a0_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PhoneCallDiscardReasonHangup < PhoneCallDiscardReason
      getter constructor_id = 0x57adc690_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PhoneCallDiscardReasonBusy < PhoneCallDiscardReason
      getter constructor_id = 0xfaf7e8c9_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class DataJSON < TLObject
      getter constructor_id = 0x7d748d04_u32
      
      property data : String
      
      def initialize(
        @data : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@data)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class LabeledPrice < TLObject
      getter constructor_id = 0xcb296bf8_u32
      
      property label : String
      property amount : Int64
      
      def initialize(
        @label : String,
        @amount : Int64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@label)
        buffer.write_bytes(@amount, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class Invoice < TLObject
      getter constructor_id = 0xc30aa358_u32
      
      property currency : String
      property prices : Array(LabeledPrice)
      property test : Bool?
      property name_requested : Bool?
      property phone_requested : Bool?
      property email_requested : Bool?
      property shipping_address_requested : Bool?
      property flexible : Bool?
      property phone_to_provider : Bool?
      property email_to_provider : Bool?
      
      def initialize(
        @currency : String,
        @prices : Array(LabeledPrice),
        @test : Bool = false,
        @name_requested : Bool = false,
        @phone_requested : Bool = false,
        @email_requested : Bool = false,
        @shipping_address_requested : Bool = false,
        @flexible : Bool = false,
        @phone_to_provider : Bool = false,
        @email_to_provider : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@test ? 0 : 0)
        buffer.write_byte(@name_requested ? 1 : 0)
        buffer.write_byte(@phone_requested ? 2 : 0)
        buffer.write_byte(@email_requested ? 3 : 0)
        buffer.write_byte(@shipping_address_requested ? 4 : 0)
        buffer.write_byte(@flexible ? 5 : 0)
        buffer.write_byte(@phone_to_provider ? 6 : 0)
        buffer.write_byte(@email_to_provider ? 7 : 0)
        buffer.write(TLObject.serialize_bytes(@currency)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@prices.size, IO::ByteFormat::LittleEndian)
        @prices.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PaymentCharge < TLObject
      getter constructor_id = 0xea02c27e_u32
      
      property id : String
      property provider_charge_id : String
      
      def initialize(
        @id : String,
        @provider_charge_id : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@id)
        buffer.write(TLObject.serialize_bytes(@provider_charge_id)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PostAddress < TLObject
      getter constructor_id = 0x1e8caaeb_u32
      
      property street_line1 : String
      property street_line2 : String
      property city : String
      property state : String
      property country_iso2 : String
      property post_code : String
      
      def initialize(
        @street_line1 : String,
        @street_line2 : String,
        @city : String,
        @state : String,
        @country_iso2 : String,
        @post_code : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@street_line1)
        buffer.write(TLObject.serialize_bytes(@street_line2)
        buffer.write(TLObject.serialize_bytes(@city)
        buffer.write(TLObject.serialize_bytes(@state)
        buffer.write(TLObject.serialize_bytes(@country_iso2)
        buffer.write(TLObject.serialize_bytes(@post_code)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PaymentRequestedInfo < TLObject
      getter constructor_id = 0x909c3f94_u32
      
      property name : String?
      property phone : String?
      property email : String?
      property shipping_address : PostAddress?
      
      def initialize(
        @name : String? = nil,
        @phone : String? = nil,
        @email : String? = nil,
        @shipping_address : PostAddress? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@name ? 0 : 0)
        buffer.write_byte(@phone ? 1 : 0)
        buffer.write_byte(@email ? 2 : 0)
        buffer.write_byte(@shipping_address ? 3 : 0)
        buffer.write(TLObject.serialize_bytes(@name)
        buffer.write(TLObject.serialize_bytes(@phone)
        buffer.write(TLObject.serialize_bytes(@email)
        buffer.write(@shipping_address.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PaymentSavedCredentialsCard < PaymentSavedCredentials
      getter constructor_id = 0xcdc27a1f_u32
      
      property id : String
      property title : String
      
      def initialize(
        @id : String,
        @title : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@id)
        buffer.write(TLObject.serialize_bytes(@title)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class WebDocument < TLObject
      getter constructor_id = 0x1c570ed1_u32
      
      property url : String
      property access_hash : Int64
      property size : Int32
      property mime_type : String
      property attributes : Array(DocumentAttribute)
      
      def initialize(
        @url : String,
        @access_hash : Int64,
        @size : Int32,
        @mime_type : String,
        @attributes : Array(DocumentAttribute)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@url)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@size, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@mime_type)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@attributes.size, IO::ByteFormat::LittleEndian)
        @attributes.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class WebDocumentNoProxy < WebDocument
      getter constructor_id = 0xf9c8bcc6_u32
      
      property url : String
      property size : Int32
      property mime_type : String
      property attributes : Array(DocumentAttribute)
      
      def initialize(
        @url : String,
        @size : Int32,
        @mime_type : String,
        @attributes : Array(DocumentAttribute)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@url)
        buffer.write_bytes(@size, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@mime_type)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@attributes.size, IO::ByteFormat::LittleEndian)
        @attributes.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputWebDocument < TLObject
      getter constructor_id = 0x9bed434d_u32
      
      property url : String
      property size : Int32
      property mime_type : String
      property attributes : Array(DocumentAttribute)
      
      def initialize(
        @url : String,
        @size : Int32,
        @mime_type : String,
        @attributes : Array(DocumentAttribute)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@url)
        buffer.write_bytes(@size, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@mime_type)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@attributes.size, IO::ByteFormat::LittleEndian)
        @attributes.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputWebFileLocation < TLObject
      getter constructor_id = 0xc239d686_u32
      
      property url : String
      property access_hash : Int64
      
      def initialize(
        @url : String,
        @access_hash : Int64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@url)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputWebFileGeoPointLocation < InputWebFileLocation
      getter constructor_id = 0x9f2221c9_u32
      
      property geo_point : InputGeoPoint
      property access_hash : Int64
      property w : Int32
      property h : Int32
      property zoom : Int32
      property scale : Int32
      
      def initialize(
        @geo_point : InputGeoPoint,
        @access_hash : Int64,
        @w : Int32,
        @h : Int32,
        @zoom : Int32,
        @scale : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@geo_point.to_bytes)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@w, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@h, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@zoom, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@scale, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputPaymentCredentialsSaved < InputPaymentCredentials
      getter constructor_id = 0xc10eb2cf_u32
      
      property id : String
      property tmp_password : Bytes
      
      def initialize(
        @id : String,
        @tmp_password : Bytes
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@id)
        buffer.write(TLObject.serialize_bytes(@tmp_password)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputPaymentCredentials < TLObject
      getter constructor_id = 0x3417d728_u32
      
      property data : DataJSON
      property save : Bool?
      
      def initialize(
        @data : DataJSON,
        @save : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@save ? 0 : 0)
        buffer.write(@data.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputPaymentCredentialsApplePay < InputPaymentCredentials
      getter constructor_id = 0x0aa1c39f_u32
      
      property payment_data : DataJSON
      
      def initialize(
        @payment_data : DataJSON
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@payment_data.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputPaymentCredentialsAndroidPay < InputPaymentCredentials
      getter constructor_id = 0xca05d50e_u32
      
      property payment_token : DataJSON
      property google_transaction_id : String
      
      def initialize(
        @payment_token : DataJSON,
        @google_transaction_id : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@payment_token.to_bytes)
        buffer.write(TLObject.serialize_bytes(@google_transaction_id)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ShippingOption < TLObject
      getter constructor_id = 0xb6213cdf_u32
      
      property id : String
      property title : String
      property prices : Array(LabeledPrice)
      
      def initialize(
        @id : String,
        @title : String,
        @prices : Array(LabeledPrice)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@id)
        buffer.write(TLObject.serialize_bytes(@title)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@prices.size, IO::ByteFormat::LittleEndian)
        @prices.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputStickerSetItem < TLObject
      getter constructor_id = 0xffa0a496_u32
      
      property document : InputDocument
      property emoji : String
      property mask_coords : MaskCoords?
      
      def initialize(
        @document : InputDocument,
        @emoji : String,
        @mask_coords : MaskCoords? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@mask_coords ? 0 : 0)
        buffer.write(@document.to_bytes)
        buffer.write(TLObject.serialize_bytes(@emoji)
        buffer.write(@mask_coords.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputPhoneCall < TLObject
      getter constructor_id = 0x1e36fded_u32
      
      property id : Int64
      property access_hash : Int64
      
      def initialize(
        @id : Int64,
        @access_hash : Int64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PhoneCallEmpty < PhoneCall
      getter constructor_id = 0x5366c915_u32
      
      property id : Int64
      
      def initialize(
        @id : Int64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PhoneCallWaiting < PhoneCall
      getter constructor_id = 0x1b8f4ad1_u32
      
      property id : Int64
      property access_hash : Int64
      property date : Int32
      property admin_id : Int32
      property participant_id : Int32
      property protocol : PhoneCallProtocol
      property receive_date : Int32?
      property video : Bool?
      
      def initialize(
        @id : Int64,
        @access_hash : Int64,
        @date : Int32,
        @admin_id : Int32,
        @participant_id : Int32,
        @protocol : PhoneCallProtocol,
        @receive_date : Int32? = nil,
        @video : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@video ? 5 : 0)
        buffer.write_byte(@receive_date ? 0 : 0)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@admin_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@participant_id, IO::ByteFormat::LittleEndian)
        buffer.write(@protocol.to_bytes)
        buffer.write_bytes(@receive_date, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PhoneCallRequested < PhoneCall
      getter constructor_id = 0x87eabb53_u32
      
      property id : Int64
      property access_hash : Int64
      property date : Int32
      property admin_id : Int32
      property participant_id : Int32
      property g_a_hash : Bytes
      property protocol : PhoneCallProtocol
      property video : Bool?
      
      def initialize(
        @id : Int64,
        @access_hash : Int64,
        @date : Int32,
        @admin_id : Int32,
        @participant_id : Int32,
        @g_a_hash : Bytes,
        @protocol : PhoneCallProtocol,
        @video : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@video ? 5 : 0)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@admin_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@participant_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@g_a_hash)
        buffer.write(@protocol.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PhoneCallAccepted < PhoneCall
      getter constructor_id = 0x997c454a_u32
      
      property id : Int64
      property access_hash : Int64
      property date : Int32
      property admin_id : Int32
      property participant_id : Int32
      property g_b : Bytes
      property protocol : PhoneCallProtocol
      property video : Bool?
      
      def initialize(
        @id : Int64,
        @access_hash : Int64,
        @date : Int32,
        @admin_id : Int32,
        @participant_id : Int32,
        @g_b : Bytes,
        @protocol : PhoneCallProtocol,
        @video : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@video ? 5 : 0)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@admin_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@participant_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@g_b)
        buffer.write(@protocol.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PhoneCall < TLObject
      getter constructor_id = 0x8742ae7f_u32
      
      property id : Int64
      property access_hash : Int64
      property date : Int32
      property admin_id : Int32
      property participant_id : Int32
      property g_a_or_b : Bytes
      property key_fingerprint : Int64
      property protocol : PhoneCallProtocol
      property connections : Array(PhoneConnection)
      property start_date : Int32
      property p2p_allowed : Bool?
      
      def initialize(
        @id : Int64,
        @access_hash : Int64,
        @date : Int32,
        @admin_id : Int32,
        @participant_id : Int32,
        @g_a_or_b : Bytes,
        @key_fingerprint : Int64,
        @protocol : PhoneCallProtocol,
        @connections : Array(PhoneConnection),
        @start_date : Int32,
        @p2p_allowed : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@p2p_allowed ? 5 : 0)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@admin_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@participant_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@g_a_or_b)
        buffer.write_bytes(@key_fingerprint, IO::ByteFormat::LittleEndian)
        buffer.write(@protocol.to_bytes)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@connections.size, IO::ByteFormat::LittleEndian)
        @connections.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(@start_date, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PhoneCallDiscarded < PhoneCall
      getter constructor_id = 0x50ca4de1_u32
      
      property id : Int64
      property reason : PhoneCallDiscardReason?
      property duration : Int32?
      property need_rating : Bool?
      property need_debug : Bool?
      property video : Bool?
      
      def initialize(
        @id : Int64,
        @reason : PhoneCallDiscardReason? = nil,
        @duration : Int32? = nil,
        @need_rating : Bool = false,
        @need_debug : Bool = false,
        @video : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@need_rating ? 2 : 0)
        buffer.write_byte(@need_debug ? 3 : 0)
        buffer.write_byte(@video ? 5 : 0)
        buffer.write_byte(@reason ? 0 : 0)
        buffer.write_byte(@duration ? 1 : 0)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write(@reason.to_bytes)
        buffer.write_bytes(@duration, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PhoneConnection < TLObject
      getter constructor_id = 0x9d4c17c0_u32
      
      property id : Int64
      property ip : String
      property ipv6 : String
      property port : Int32
      property peer_tag : Bytes
      
      def initialize(
        @id : Int64,
        @ip : String,
        @ipv6 : String,
        @port : Int32,
        @peer_tag : Bytes
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@ip)
        buffer.write(TLObject.serialize_bytes(@ipv6)
        buffer.write_bytes(@port, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@peer_tag)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PhoneCallProtocol < TLObject
      getter constructor_id = 0xfc878fc8_u32
      
      property min_layer : Int32
      property max_layer : Int32
      property library_versions : Array(String)
      property udp_p2p : Bool?
      property udp_reflector : Bool?
      
      def initialize(
        @min_layer : Int32,
        @max_layer : Int32,
        @library_versions : Array(String),
        @udp_p2p : Bool = false,
        @udp_reflector : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@udp_p2p ? 0 : 0)
        buffer.write_byte(@udp_reflector ? 1 : 0)
        buffer.write_bytes(@min_layer, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@max_layer, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@library_versions.size, IO::ByteFormat::LittleEndian)
        @library_versions.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class CdnPublicKey < TLObject
      getter constructor_id = 0xc982eaba_u32
      
      property dc_id : Int32
      property public_key : String
      
      def initialize(
        @dc_id : Int32,
        @public_key : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@dc_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@public_key)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class CdnConfig < TLObject
      getter constructor_id = 0x5725e40a_u32
      
      property public_keys : Array(CdnPublicKey)
      
      def initialize(
        @public_keys : Array(CdnPublicKey)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@public_keys.size, IO::ByteFormat::LittleEndian)
        @public_keys.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class LangPackString < TLObject
      getter constructor_id = 0xcad181f6_u32
      
      property key : String
      property value : String
      
      def initialize(
        @key : String,
        @value : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@key)
        buffer.write(TLObject.serialize_bytes(@value)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class LangPackStringPluralized < LangPackString
      getter constructor_id = 0x6c47ac9f_u32
      
      property key : String
      property other_value : String
      property zero_value : String?
      property one_value : String?
      property two_value : String?
      property few_value : String?
      property many_value : String?
      
      def initialize(
        @key : String,
        @other_value : String,
        @zero_value : String? = nil,
        @one_value : String? = nil,
        @two_value : String? = nil,
        @few_value : String? = nil,
        @many_value : String? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@zero_value ? 0 : 0)
        buffer.write_byte(@one_value ? 1 : 0)
        buffer.write_byte(@two_value ? 2 : 0)
        buffer.write_byte(@few_value ? 3 : 0)
        buffer.write_byte(@many_value ? 4 : 0)
        buffer.write(TLObject.serialize_bytes(@key)
        buffer.write(TLObject.serialize_bytes(@zero_value)
        buffer.write(TLObject.serialize_bytes(@one_value)
        buffer.write(TLObject.serialize_bytes(@two_value)
        buffer.write(TLObject.serialize_bytes(@few_value)
        buffer.write(TLObject.serialize_bytes(@many_value)
        buffer.write(TLObject.serialize_bytes(@other_value)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class LangPackStringDeleted < LangPackString
      getter constructor_id = 0x2979eeb2_u32
      
      property key : String
      
      def initialize(
        @key : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@key)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class LangPackDifference < TLObject
      getter constructor_id = 0xf385c1f6_u32
      
      property lang_code : String
      property from_version : Int32
      property version : Int32
      property strings : Array(LangPackString)
      
      def initialize(
        @lang_code : String,
        @from_version : Int32,
        @version : Int32,
        @strings : Array(LangPackString)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@lang_code)
        buffer.write_bytes(@from_version, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@version, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@strings.size, IO::ByteFormat::LittleEndian)
        @strings.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class LangPackLanguage < TLObject
      getter constructor_id = 0xeeca5ce3_u32
      
      property name : String
      property native_name : String
      property lang_code : String
      property plural_code : String
      property strings_count : Int32
      property translated_count : Int32
      property translations_url : String
      property official : Bool?
      property base_lang_code : String?
      property rtl : Bool?
      property beta : Bool?
      
      def initialize(
        @name : String,
        @native_name : String,
        @lang_code : String,
        @plural_code : String,
        @strings_count : Int32,
        @translated_count : Int32,
        @translations_url : String,
        @official : Bool = false,
        @base_lang_code : String? = nil,
        @rtl : Bool = false,
        @beta : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@official ? 0 : 0)
        buffer.write_byte(@rtl ? 2 : 0)
        buffer.write_byte(@beta ? 3 : 0)
        buffer.write_byte(@base_lang_code ? 1 : 0)
        buffer.write(TLObject.serialize_bytes(@name)
        buffer.write(TLObject.serialize_bytes(@native_name)
        buffer.write(TLObject.serialize_bytes(@lang_code)
        buffer.write(TLObject.serialize_bytes(@base_lang_code)
        buffer.write(TLObject.serialize_bytes(@plural_code)
        buffer.write_bytes(@strings_count, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@translated_count, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@translations_url)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelAdminLogEventActionChangeTitle < ChannelAdminLogEventAction
      getter constructor_id = 0xe6dfb825_u32
      
      property prev_value : String
      property new_value : String
      
      def initialize(
        @prev_value : String,
        @new_value : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@prev_value)
        buffer.write(TLObject.serialize_bytes(@new_value)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelAdminLogEventActionChangeAbout < ChannelAdminLogEventAction
      getter constructor_id = 0x55188a2e_u32
      
      property prev_value : String
      property new_value : String
      
      def initialize(
        @prev_value : String,
        @new_value : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@prev_value)
        buffer.write(TLObject.serialize_bytes(@new_value)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelAdminLogEventActionChangeUsername < ChannelAdminLogEventAction
      getter constructor_id = 0x6a4afc38_u32
      
      property prev_value : String
      property new_value : String
      
      def initialize(
        @prev_value : String,
        @new_value : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@prev_value)
        buffer.write(TLObject.serialize_bytes(@new_value)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelAdminLogEventActionChangePhoto < ChannelAdminLogEventAction
      getter constructor_id = 0x434bd2af_u32
      
      property prev_photo : Photo
      property new_photo : Photo
      
      def initialize(
        @prev_photo : Photo,
        @new_photo : Photo
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@prev_photo.to_bytes)
        buffer.write(@new_photo.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelAdminLogEventActionToggleInvites < ChannelAdminLogEventAction
      getter constructor_id = 0x1b7907ae_u32
      
      property new_value : Bool
      
      def initialize(
        @new_value : Bool
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@new_value.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelAdminLogEventActionToggleSignatures < ChannelAdminLogEventAction
      getter constructor_id = 0x26ae0971_u32
      
      property new_value : Bool
      
      def initialize(
        @new_value : Bool
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@new_value.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelAdminLogEventActionUpdatePinned < ChannelAdminLogEventAction
      getter constructor_id = 0xe9e82c18_u32
      
      property message : Message
      
      def initialize(
        @message : Message
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@message.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelAdminLogEventActionEditMessage < ChannelAdminLogEventAction
      getter constructor_id = 0x709b2405_u32
      
      property prev_message : Message
      property new_message : Message
      
      def initialize(
        @prev_message : Message,
        @new_message : Message
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@prev_message.to_bytes)
        buffer.write(@new_message.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelAdminLogEventActionDeleteMessage < ChannelAdminLogEventAction
      getter constructor_id = 0x42e047bb_u32
      
      property message : Message
      
      def initialize(
        @message : Message
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@message.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelAdminLogEventActionParticipantJoin < ChannelAdminLogEventAction
      getter constructor_id = 0x183040d3_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelAdminLogEventActionParticipantLeave < ChannelAdminLogEventAction
      getter constructor_id = 0xf89777f2_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelAdminLogEventActionParticipantInvite < ChannelAdminLogEventAction
      getter constructor_id = 0xe31c34d8_u32
      
      property participant : ChannelParticipant
      
      def initialize(
        @participant : ChannelParticipant
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@participant.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelAdminLogEventActionParticipantToggleBan < ChannelAdminLogEventAction
      getter constructor_id = 0xe6d83d7e_u32
      
      property prev_participant : ChannelParticipant
      property new_participant : ChannelParticipant
      
      def initialize(
        @prev_participant : ChannelParticipant,
        @new_participant : ChannelParticipant
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@prev_participant.to_bytes)
        buffer.write(@new_participant.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelAdminLogEventActionParticipantToggleAdmin < ChannelAdminLogEventAction
      getter constructor_id = 0xd5676710_u32
      
      property prev_participant : ChannelParticipant
      property new_participant : ChannelParticipant
      
      def initialize(
        @prev_participant : ChannelParticipant,
        @new_participant : ChannelParticipant
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@prev_participant.to_bytes)
        buffer.write(@new_participant.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelAdminLogEventActionChangeStickerSet < ChannelAdminLogEventAction
      getter constructor_id = 0xb1c3caa7_u32
      
      property prev_stickerset : InputStickerSet
      property new_stickerset : InputStickerSet
      
      def initialize(
        @prev_stickerset : InputStickerSet,
        @new_stickerset : InputStickerSet
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@prev_stickerset.to_bytes)
        buffer.write(@new_stickerset.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelAdminLogEventActionTogglePreHistoryHidden < ChannelAdminLogEventAction
      getter constructor_id = 0x5f5c95f1_u32
      
      property new_value : Bool
      
      def initialize(
        @new_value : Bool
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@new_value.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelAdminLogEventActionDefaultBannedRights < ChannelAdminLogEventAction
      getter constructor_id = 0x2df5fc0a_u32
      
      property prev_banned_rights : ChatBannedRights
      property new_banned_rights : ChatBannedRights
      
      def initialize(
        @prev_banned_rights : ChatBannedRights,
        @new_banned_rights : ChatBannedRights
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@prev_banned_rights.to_bytes)
        buffer.write(@new_banned_rights.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelAdminLogEventActionStopPoll < ChannelAdminLogEventAction
      getter constructor_id = 0x8f079643_u32
      
      property message : Message
      
      def initialize(
        @message : Message
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@message.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelAdminLogEventActionChangeLinkedChat < ChannelAdminLogEventAction
      getter constructor_id = 0xa26f881b_u32
      
      property prev_value : Int32
      property new_value : Int32
      
      def initialize(
        @prev_value : Int32,
        @new_value : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@prev_value, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@new_value, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelAdminLogEventActionChangeLocation < ChannelAdminLogEventAction
      getter constructor_id = 0x0e6b76ae_u32
      
      property prev_value : ChannelLocation
      property new_value : ChannelLocation
      
      def initialize(
        @prev_value : ChannelLocation,
        @new_value : ChannelLocation
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@prev_value.to_bytes)
        buffer.write(@new_value.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelAdminLogEventActionToggleSlowMode < ChannelAdminLogEventAction
      getter constructor_id = 0x53909779_u32
      
      property prev_value : Int32
      property new_value : Int32
      
      def initialize(
        @prev_value : Int32,
        @new_value : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@prev_value, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@new_value, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelAdminLogEvent < TLObject
      getter constructor_id = 0x3b5a3e40_u32
      
      property id : Int64
      property date : Int32
      property user_id : Int32
      property action : ChannelAdminLogEventAction
      
      def initialize(
        @id : Int64,
        @date : Int32,
        @user_id : Int32,
        @action : ChannelAdminLogEventAction
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer.write(@action.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelAdminLogEventsFilter < TLObject
      getter constructor_id = 0xea107ae4_u32
      
      property join : Bool?
      property leave : Bool?
      property invite : Bool?
      property ban : Bool?
      property unban : Bool?
      property kick : Bool?
      property unkick : Bool?
      property promote : Bool?
      property demote : Bool?
      property info : Bool?
      property settings : Bool?
      property pinned : Bool?
      property edit : Bool?
      property delete : Bool?
      
      def initialize(
        @join : Bool = false,
        @leave : Bool = false,
        @invite : Bool = false,
        @ban : Bool = false,
        @unban : Bool = false,
        @kick : Bool = false,
        @unkick : Bool = false,
        @promote : Bool = false,
        @demote : Bool = false,
        @info : Bool = false,
        @settings : Bool = false,
        @pinned : Bool = false,
        @edit : Bool = false,
        @delete : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@join ? 0 : 0)
        buffer.write_byte(@leave ? 1 : 0)
        buffer.write_byte(@invite ? 2 : 0)
        buffer.write_byte(@ban ? 3 : 0)
        buffer.write_byte(@unban ? 4 : 0)
        buffer.write_byte(@kick ? 5 : 0)
        buffer.write_byte(@unkick ? 6 : 0)
        buffer.write_byte(@promote ? 7 : 0)
        buffer.write_byte(@demote ? 8 : 0)
        buffer.write_byte(@info ? 9 : 0)
        buffer.write_byte(@settings ? 10 : 0)
        buffer.write_byte(@pinned ? 11 : 0)
        buffer.write_byte(@edit ? 12 : 0)
        buffer.write_byte(@delete ? 13 : 0)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PopularContact < TLObject
      getter constructor_id = 0x5ce14175_u32
      
      property client_id : Int64
      property importers : Int32
      
      def initialize(
        @client_id : Int64,
        @importers : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@client_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@importers, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class RecentMeUrlUnknown < RecentMeUrl
      getter constructor_id = 0x46e1d13d_u32
      
      property url : String
      
      def initialize(
        @url : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@url)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class RecentMeUrlUser < RecentMeUrl
      getter constructor_id = 0x8dbc3336_u32
      
      property url : String
      property user_id : Int32
      
      def initialize(
        @url : String,
        @user_id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@url)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class RecentMeUrlChat < RecentMeUrl
      getter constructor_id = 0xa01b22f9_u32
      
      property url : String
      property chat_id : Int32
      
      def initialize(
        @url : String,
        @chat_id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@url)
        buffer.write_bytes(@chat_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class RecentMeUrlChatInvite < RecentMeUrl
      getter constructor_id = 0xeb49081d_u32
      
      property url : String
      property chat_invite : ChatInvite
      
      def initialize(
        @url : String,
        @chat_invite : ChatInvite
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@url)
        buffer.write(@chat_invite.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class RecentMeUrlStickerSet < RecentMeUrl
      getter constructor_id = 0xbc0a57dc_u32
      
      property url : String
      property set : StickerSetCovered
      
      def initialize(
        @url : String,
        @set : StickerSetCovered
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@url)
        buffer.write(@set.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputSingleMedia < TLObject
      getter constructor_id = 0x1cc6e91f_u32
      
      property media : InputMedia
      property random_id : Int64
      property message : String
      property entities : Array(MessageEntity)?
      
      def initialize(
        @media : InputMedia,
        @random_id : Int64,
        @message : String,
        @entities : Array(MessageEntity)? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@entities ? 0 : 0)
        buffer.write(@media.to_bytes)
        buffer.write_bytes(@random_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@message)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@entities.size, IO::ByteFormat::LittleEndian)
        @entities.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class WebAuthorization < TLObject
      getter constructor_id = 0xcac943f2_u32
      
      property hash : Int64
      property bot_id : Int32
      property domain : String
      property browser : String
      property platform : String
      property date_created : Int32
      property date_active : Int32
      property ip : String
      property region : String
      
      def initialize(
        @hash : Int64,
        @bot_id : Int32,
        @domain : String,
        @browser : String,
        @platform : String,
        @date_created : Int32,
        @date_active : Int32,
        @ip : String,
        @region : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@hash, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@bot_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@domain)
        buffer.write(TLObject.serialize_bytes(@browser)
        buffer.write(TLObject.serialize_bytes(@platform)
        buffer.write_bytes(@date_created, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@date_active, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@ip)
        buffer.write(TLObject.serialize_bytes(@region)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputMessageID < InputMessage
      getter constructor_id = 0xa676a322_u32
      
      property id : Int32
      
      def initialize(
        @id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputMessageReplyTo < InputMessage
      getter constructor_id = 0xbad88395_u32
      
      property id : Int32
      
      def initialize(
        @id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputMessagePinned < InputMessage
      getter constructor_id = 0x86872538_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputDialogPeer < TLObject
      getter constructor_id = 0xfcaafeb7_u32
      
      property peer : InputPeer
      
      def initialize(
        @peer : InputPeer
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@peer.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputDialogPeerFolder < InputDialogPeer
      getter constructor_id = 0x64600527_u32
      
      property folder_id : Int32
      
      def initialize(
        @folder_id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@folder_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class DialogPeer < TLObject
      getter constructor_id = 0xe56dbf05_u32
      
      property peer : Peer
      
      def initialize(
        @peer : Peer
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@peer.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class DialogPeerFolder < DialogPeer
      getter constructor_id = 0x514519e2_u32
      
      property folder_id : Int32
      
      def initialize(
        @folder_id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@folder_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class FileHash < TLObject
      getter constructor_id = 0x6242c773_u32
      
      property offset : Int32
      property limit : Int32
      property hash : Bytes
      
      def initialize(
        @offset : Int32,
        @limit : Int32,
        @hash : Bytes
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@offset, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@limit, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@hash)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputClientProxy < TLObject
      getter constructor_id = 0x75588b3f_u32
      
      property address : String
      property port : Int32
      
      def initialize(
        @address : String,
        @port : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@address)
        buffer.write_bytes(@port, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputSecureFileUploaded < InputSecureFile
      getter constructor_id = 0x3334b0f0_u32
      
      property id : Int64
      property parts : Int32
      property md5_checksum : String
      property file_hash : Bytes
      property secret : Bytes
      
      def initialize(
        @id : Int64,
        @parts : Int32,
        @md5_checksum : String,
        @file_hash : Bytes,
        @secret : Bytes
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@parts, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@md5_checksum)
        buffer.write(TLObject.serialize_bytes(@file_hash)
        buffer.write(TLObject.serialize_bytes(@secret)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputSecureFile < TLObject
      getter constructor_id = 0x5367e5be_u32
      
      property id : Int64
      property access_hash : Int64
      
      def initialize(
        @id : Int64,
        @access_hash : Int64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SecureFileEmpty < SecureFile
      getter constructor_id = 0x64199744_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SecureFile < TLObject
      getter constructor_id = 0xe0277a62_u32
      
      property id : Int64
      property access_hash : Int64
      property size : Int32
      property dc_id : Int32
      property date : Int32
      property file_hash : Bytes
      property secret : Bytes
      
      def initialize(
        @id : Int64,
        @access_hash : Int64,
        @size : Int32,
        @dc_id : Int32,
        @date : Int32,
        @file_hash : Bytes,
        @secret : Bytes
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@size, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@dc_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@file_hash)
        buffer.write(TLObject.serialize_bytes(@secret)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SecureData < TLObject
      getter constructor_id = 0x8aeabec3_u32
      
      property data : Bytes
      property data_hash : Bytes
      property secret : Bytes
      
      def initialize(
        @data : Bytes,
        @data_hash : Bytes,
        @secret : Bytes
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@data)
        buffer.write(TLObject.serialize_bytes(@data_hash)
        buffer.write(TLObject.serialize_bytes(@secret)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SecurePlainPhone < SecurePlainData
      getter constructor_id = 0x7d6099dd_u32
      
      property phone : String
      
      def initialize(
        @phone : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@phone)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SecurePlainEmail < SecurePlainData
      getter constructor_id = 0x21ec5a5f_u32
      
      property email : String
      
      def initialize(
        @email : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@email)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SecureValueTypePersonalDetails < SecureValueType
      getter constructor_id = 0x9d2a81e3_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SecureValueTypePassport < SecureValueType
      getter constructor_id = 0x3dac6a00_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SecureValueTypeDriverLicense < SecureValueType
      getter constructor_id = 0x06e425c4_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SecureValueTypeIdentityCard < SecureValueType
      getter constructor_id = 0xa0d0744b_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SecureValueTypeInternalPassport < SecureValueType
      getter constructor_id = 0x99a48f23_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SecureValueTypeAddress < SecureValueType
      getter constructor_id = 0xcbe31e26_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SecureValueTypeUtilityBill < SecureValueType
      getter constructor_id = 0xfc36954e_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SecureValueTypeBankStatement < SecureValueType
      getter constructor_id = 0x89137c0d_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SecureValueTypeRentalAgreement < SecureValueType
      getter constructor_id = 0x8b883488_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SecureValueTypePassportRegistration < SecureValueType
      getter constructor_id = 0x99e3806a_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SecureValueTypeTemporaryRegistration < SecureValueType
      getter constructor_id = 0xea02ec33_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SecureValueTypePhone < SecureValueType
      getter constructor_id = 0xb320aadb_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SecureValueTypeEmail < SecureValueType
      getter constructor_id = 0x8e3ca7ee_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SecureValue < TLObject
      getter constructor_id = 0x187fa0ca_u32
      
      property type : SecureValueType
      property hash : Bytes
      property data : SecureData?
      property front_side : SecureFile?
      property reverse_side : SecureFile?
      property selfie : SecureFile?
      property files : Array(SecureFile)?
      property plain_data : SecurePlainData?
      property translation : Array(SecureFile)?
      
      def initialize(
        @type : SecureValueType,
        @hash : Bytes,
        @data : SecureData? = nil,
        @front_side : SecureFile? = nil,
        @reverse_side : SecureFile? = nil,
        @selfie : SecureFile? = nil,
        @files : Array(SecureFile)? = nil,
        @plain_data : SecurePlainData? = nil,
        @translation : Array(SecureFile)? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@data ? 0 : 0)
        buffer.write_byte(@front_side ? 1 : 0)
        buffer.write_byte(@reverse_side ? 2 : 0)
        buffer.write_byte(@selfie ? 3 : 0)
        buffer.write_byte(@translation ? 6 : 0)
        buffer.write_byte(@files ? 4 : 0)
        buffer.write_byte(@plain_data ? 5 : 0)
        buffer.write(@type.to_bytes)
        buffer.write(@data.to_bytes)
        buffer.write(@front_side.to_bytes)
        buffer.write(@reverse_side.to_bytes)
        buffer.write(@selfie.to_bytes)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@translation.size, IO::ByteFormat::LittleEndian)
        @translation.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@files.size, IO::ByteFormat::LittleEndian)
        @files.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write(@plain_data.to_bytes)
        buffer.write(TLObject.serialize_bytes(@hash)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputSecureValue < TLObject
      getter constructor_id = 0xdb21d0a7_u32
      
      property type : SecureValueType
      property data : SecureData?
      property front_side : InputSecureFile?
      property reverse_side : InputSecureFile?
      property selfie : InputSecureFile?
      property files : Array(InputSecureFile)?
      property plain_data : SecurePlainData?
      property translation : Array(InputSecureFile)?
      
      def initialize(
        @type : SecureValueType,
        @data : SecureData? = nil,
        @front_side : InputSecureFile? = nil,
        @reverse_side : InputSecureFile? = nil,
        @selfie : InputSecureFile? = nil,
        @files : Array(InputSecureFile)? = nil,
        @plain_data : SecurePlainData? = nil,
        @translation : Array(InputSecureFile)? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@data ? 0 : 0)
        buffer.write_byte(@front_side ? 1 : 0)
        buffer.write_byte(@reverse_side ? 2 : 0)
        buffer.write_byte(@selfie ? 3 : 0)
        buffer.write_byte(@translation ? 6 : 0)
        buffer.write_byte(@files ? 4 : 0)
        buffer.write_byte(@plain_data ? 5 : 0)
        buffer.write(@type.to_bytes)
        buffer.write(@data.to_bytes)
        buffer.write(@front_side.to_bytes)
        buffer.write(@reverse_side.to_bytes)
        buffer.write(@selfie.to_bytes)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@translation.size, IO::ByteFormat::LittleEndian)
        @translation.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@files.size, IO::ByteFormat::LittleEndian)
        @files.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write(@plain_data.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SecureValueHash < TLObject
      getter constructor_id = 0xed1ecdb0_u32
      
      property type : SecureValueType
      property hash : Bytes
      
      def initialize(
        @type : SecureValueType,
        @hash : Bytes
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@type.to_bytes)
        buffer.write(TLObject.serialize_bytes(@hash)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SecureValueErrorData < SecureValueError
      getter constructor_id = 0xe8a40bd9_u32
      
      property type : SecureValueType
      property data_hash : Bytes
      property field : String
      property text : String
      
      def initialize(
        @type : SecureValueType,
        @data_hash : Bytes,
        @field : String,
        @text : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@type.to_bytes)
        buffer.write(TLObject.serialize_bytes(@data_hash)
        buffer.write(TLObject.serialize_bytes(@field)
        buffer.write(TLObject.serialize_bytes(@text)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SecureValueErrorFrontSide < SecureValueError
      getter constructor_id = 0x00be3dfa_u32
      
      property type : SecureValueType
      property file_hash : Bytes
      property text : String
      
      def initialize(
        @type : SecureValueType,
        @file_hash : Bytes,
        @text : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@type.to_bytes)
        buffer.write(TLObject.serialize_bytes(@file_hash)
        buffer.write(TLObject.serialize_bytes(@text)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SecureValueErrorReverseSide < SecureValueError
      getter constructor_id = 0x868a2aa5_u32
      
      property type : SecureValueType
      property file_hash : Bytes
      property text : String
      
      def initialize(
        @type : SecureValueType,
        @file_hash : Bytes,
        @text : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@type.to_bytes)
        buffer.write(TLObject.serialize_bytes(@file_hash)
        buffer.write(TLObject.serialize_bytes(@text)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SecureValueErrorSelfie < SecureValueError
      getter constructor_id = 0xe537ced6_u32
      
      property type : SecureValueType
      property file_hash : Bytes
      property text : String
      
      def initialize(
        @type : SecureValueType,
        @file_hash : Bytes,
        @text : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@type.to_bytes)
        buffer.write(TLObject.serialize_bytes(@file_hash)
        buffer.write(TLObject.serialize_bytes(@text)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SecureValueErrorFile < SecureValueError
      getter constructor_id = 0x7a700873_u32
      
      property type : SecureValueType
      property file_hash : Bytes
      property text : String
      
      def initialize(
        @type : SecureValueType,
        @file_hash : Bytes,
        @text : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@type.to_bytes)
        buffer.write(TLObject.serialize_bytes(@file_hash)
        buffer.write(TLObject.serialize_bytes(@text)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SecureValueErrorFiles < SecureValueError
      getter constructor_id = 0x666220e9_u32
      
      property type : SecureValueType
      property file_hash : Array(Bytes)
      property text : String
      
      def initialize(
        @type : SecureValueType,
        @file_hash : Array(Bytes),
        @text : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@type.to_bytes)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@file_hash.size, IO::ByteFormat::LittleEndian)
        @file_hash.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write(TLObject.serialize_bytes(@text)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SecureValueError < TLObject
      getter constructor_id = 0x869d758f_u32
      
      property type : SecureValueType
      property hash : Bytes
      property text : String
      
      def initialize(
        @type : SecureValueType,
        @hash : Bytes,
        @text : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@type.to_bytes)
        buffer.write(TLObject.serialize_bytes(@hash)
        buffer.write(TLObject.serialize_bytes(@text)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SecureValueErrorTranslationFile < SecureValueError
      getter constructor_id = 0xa1144770_u32
      
      property type : SecureValueType
      property file_hash : Bytes
      property text : String
      
      def initialize(
        @type : SecureValueType,
        @file_hash : Bytes,
        @text : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@type.to_bytes)
        buffer.write(TLObject.serialize_bytes(@file_hash)
        buffer.write(TLObject.serialize_bytes(@text)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SecureValueErrorTranslationFiles < SecureValueError
      getter constructor_id = 0x34636dd8_u32
      
      property type : SecureValueType
      property file_hash : Array(Bytes)
      property text : String
      
      def initialize(
        @type : SecureValueType,
        @file_hash : Array(Bytes),
        @text : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@type.to_bytes)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@file_hash.size, IO::ByteFormat::LittleEndian)
        @file_hash.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write(TLObject.serialize_bytes(@text)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SecureCredentialsEncrypted < TLObject
      getter constructor_id = 0x33f0ea47_u32
      
      property data : Bytes
      property hash : Bytes
      property secret : Bytes
      
      def initialize(
        @data : Bytes,
        @hash : Bytes,
        @secret : Bytes
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@data)
        buffer.write(TLObject.serialize_bytes(@hash)
        buffer.write(TLObject.serialize_bytes(@secret)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SavedPhoneContact < SavedContact
      getter constructor_id = 0x1142bd56_u32
      
      property phone : String
      property first_name : String
      property last_name : String
      property date : Int32
      
      def initialize(
        @phone : String,
        @first_name : String,
        @last_name : String,
        @date : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@phone)
        buffer.write(TLObject.serialize_bytes(@first_name)
        buffer.write(TLObject.serialize_bytes(@last_name)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PasswordKdfAlgoUnknown < PasswordKdfAlgo
      getter constructor_id = 0xd45ab096_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PasswordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow < PasswordKdfAlgo
      getter constructor_id = 0x3a912d4a_u32
      
      property salt1 : Bytes
      property salt2 : Bytes
      property g : Int32
      property p : Bytes
      
      def initialize(
        @salt1 : Bytes,
        @salt2 : Bytes,
        @g : Int32,
        @p : Bytes
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@salt1)
        buffer.write(TLObject.serialize_bytes(@salt2)
        buffer.write_bytes(@g, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@p)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SecurePasswordKdfAlgoUnknown < SecurePasswordKdfAlgo
      getter constructor_id = 0x004a8537_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SecurePasswordKdfAlgoPBKDF2HMACSHA512iter100000 < SecurePasswordKdfAlgo
      getter constructor_id = 0xbbf2dda0_u32
      
      property salt : Bytes
      
      def initialize(
        @salt : Bytes
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@salt)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SecurePasswordKdfAlgoSHA512 < SecurePasswordKdfAlgo
      getter constructor_id = 0x86471d92_u32
      
      property salt : Bytes
      
      def initialize(
        @salt : Bytes
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@salt)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SecureSecretSettings < TLObject
      getter constructor_id = 0x1527bcac_u32
      
      property secure_algo : SecurePasswordKdfAlgo
      property secure_secret : Bytes
      property secure_secret_id : Int64
      
      def initialize(
        @secure_algo : SecurePasswordKdfAlgo,
        @secure_secret : Bytes,
        @secure_secret_id : Int64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@secure_algo.to_bytes)
        buffer.write(TLObject.serialize_bytes(@secure_secret)
        buffer.write_bytes(@secure_secret_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputCheckPasswordEmpty < InputCheckPasswordSRP
      getter constructor_id = 0x9880f658_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputCheckPasswordSRP < TLObject
      getter constructor_id = 0xd27ff082_u32
      
      property srp_id : Int64
      property A : Bytes
      property M1 : Bytes
      
      def initialize(
        @srp_id : Int64,
        @A : Bytes,
        @M1 : Bytes
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@srp_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@A)
        buffer.write(TLObject.serialize_bytes(@M1)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SecureRequiredType < TLObject
      getter constructor_id = 0x829d99da_u32
      
      property type : SecureValueType
      property native_names : Bool?
      property selfie_required : Bool?
      property translation_required : Bool?
      
      def initialize(
        @type : SecureValueType,
        @native_names : Bool = false,
        @selfie_required : Bool = false,
        @translation_required : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@native_names ? 0 : 0)
        buffer.write_byte(@selfie_required ? 1 : 0)
        buffer.write_byte(@translation_required ? 2 : 0)
        buffer.write(@type.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SecureRequiredTypeOneOf < SecureRequiredType
      getter constructor_id = 0x027477b4_u32
      
      property types : Array(SecureRequiredType)
      
      def initialize(
        @types : Array(SecureRequiredType)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@types.size, IO::ByteFormat::LittleEndian)
        @types.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputAppEvent < TLObject
      getter constructor_id = 0x1d1b1245_u32
      
      property time : Float64
      property type : String
      property peer : Int64
      property data : JSONValue
      
      def initialize(
        @time : Float64,
        @type : String,
        @peer : Int64,
        @data : JSONValue
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@time, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@type)
        buffer.write_bytes(@peer, IO::ByteFormat::LittleEndian)
        buffer.write(@data.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class JsonObjectValue < TLObject
      getter constructor_id = 0xc0de1bd9_u32
      
      property key : String
      property value : JSONValue
      
      def initialize(
        @key : String,
        @value : JSONValue
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@key)
        buffer.write(@value.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class JsonNull < JSONValue
      getter constructor_id = 0x3f6d7b68_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class JsonBool < JSONValue
      getter constructor_id = 0xc7345e6a_u32
      
      property value : Bool
      
      def initialize(
        @value : Bool
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@value.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class JsonNumber < JSONValue
      getter constructor_id = 0x2be0dfa4_u32
      
      property value : Float64
      
      def initialize(
        @value : Float64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@value, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class JsonString < JSONValue
      getter constructor_id = 0xb71e767a_u32
      
      property value : String
      
      def initialize(
        @value : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@value)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class JsonArray < JSONValue
      getter constructor_id = 0xf7444763_u32
      
      property value : Array(JSONValue)
      
      def initialize(
        @value : Array(JSONValue)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@value.size, IO::ByteFormat::LittleEndian)
        @value.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class JsonObject < JSONValue
      getter constructor_id = 0x99c1d49d_u32
      
      property value : Array(JSONObjectValue)
      
      def initialize(
        @value : Array(JSONObjectValue)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@value.size, IO::ByteFormat::LittleEndian)
        @value.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PageTableCell < TLObject
      getter constructor_id = 0x34566b6a_u32
      
      property header : Bool?
      property colspan : Int32?
      property rowspan : Int32?
      property align_center : Bool?
      property align_right : Bool?
      property valign_middle : Bool?
      property valign_bottom : Bool?
      property text : RichText?
      
      def initialize(
        @header : Bool = false,
        @colspan : Int32? = nil,
        @rowspan : Int32? = nil,
        @align_center : Bool = false,
        @align_right : Bool = false,
        @valign_middle : Bool = false,
        @valign_bottom : Bool = false,
        @text : RichText? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@header ? 0 : 0)
        buffer.write_byte(@align_center ? 3 : 0)
        buffer.write_byte(@align_right ? 4 : 0)
        buffer.write_byte(@valign_middle ? 5 : 0)
        buffer.write_byte(@valign_bottom ? 6 : 0)
        buffer.write_byte(@text ? 7 : 0)
        buffer.write_byte(@colspan ? 1 : 0)
        buffer.write_byte(@rowspan ? 2 : 0)
        buffer.write(@text.to_bytes)
        buffer.write_bytes(@colspan, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@rowspan, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PageTableRow < TLObject
      getter constructor_id = 0xe0c0c5e5_u32
      
      property cells : Array(PageTableCell)
      
      def initialize(
        @cells : Array(PageTableCell)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@cells.size, IO::ByteFormat::LittleEndian)
        @cells.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PageCaption < TLObject
      getter constructor_id = 0x6f747657_u32
      
      property text : RichText
      property credit : RichText
      
      def initialize(
        @text : RichText,
        @credit : RichText
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@text.to_bytes)
        buffer.write(@credit.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PageListItemText < PageListItem
      getter constructor_id = 0xb92fb6cd_u32
      
      property text : RichText
      
      def initialize(
        @text : RichText
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@text.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PageListItemBlocks < PageListItem
      getter constructor_id = 0x25e073fc_u32
      
      property blocks : Array(PageBlock)
      
      def initialize(
        @blocks : Array(PageBlock)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@blocks.size, IO::ByteFormat::LittleEndian)
        @blocks.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PageListOrderedItemText < PageListOrderedItem
      getter constructor_id = 0x5e068047_u32
      
      property num : String
      property text : RichText
      
      def initialize(
        @num : String,
        @text : RichText
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@num)
        buffer.write(@text.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PageListOrderedItemBlocks < PageListOrderedItem
      getter constructor_id = 0x98dd8936_u32
      
      property num : String
      property blocks : Array(PageBlock)
      
      def initialize(
        @num : String,
        @blocks : Array(PageBlock)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@num)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@blocks.size, IO::ByteFormat::LittleEndian)
        @blocks.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PageRelatedArticle < TLObject
      getter constructor_id = 0xb390dc08_u32
      
      property url : String
      property webpage_id : Int64
      property title : String?
      property description : String?
      property photo_id : Int64?
      property author : String?
      property published_date : Int32?
      
      def initialize(
        @url : String,
        @webpage_id : Int64,
        @title : String? = nil,
        @description : String? = nil,
        @photo_id : Int64? = nil,
        @author : String? = nil,
        @published_date : Int32? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@title ? 0 : 0)
        buffer.write_byte(@description ? 1 : 0)
        buffer.write_byte(@photo_id ? 2 : 0)
        buffer.write_byte(@author ? 3 : 0)
        buffer.write_byte(@published_date ? 4 : 0)
        buffer.write(TLObject.serialize_bytes(@url)
        buffer.write_bytes(@webpage_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@title)
        buffer.write(TLObject.serialize_bytes(@description)
        buffer.write_bytes(@photo_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@author)
        buffer.write_bytes(@published_date, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class Page < TLObject
      getter constructor_id = 0x98657f0d_u32
      
      property url : String
      property blocks : Array(PageBlock)
      property photos : Array(Photo)
      property documents : Array(Document)
      property part : Bool?
      property rtl : Bool?
      property v2 : Bool?
      property views : Int32?
      
      def initialize(
        @url : String,
        @blocks : Array(PageBlock),
        @photos : Array(Photo),
        @documents : Array(Document),
        @part : Bool = false,
        @rtl : Bool = false,
        @v2 : Bool = false,
        @views : Int32? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@part ? 0 : 0)
        buffer.write_byte(@rtl ? 1 : 0)
        buffer.write_byte(@v2 ? 2 : 0)
        buffer.write_byte(@views ? 3 : 0)
        buffer.write(TLObject.serialize_bytes(@url)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@blocks.size, IO::ByteFormat::LittleEndian)
        @blocks.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@photos.size, IO::ByteFormat::LittleEndian)
        @photos.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@documents.size, IO::ByteFormat::LittleEndian)
        @documents.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(@views, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PollAnswer < TLObject
      getter constructor_id = 0x6ca9c2e9_u32
      
      property text : String
      property option : Bytes
      
      def initialize(
        @text : String,
        @option : Bytes
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@text)
        buffer.write(TLObject.serialize_bytes(@option)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class Poll < TLObject
      getter constructor_id = 0xd5529d06_u32
      
      property id : Int64
      property question : String
      property answers : Array(PollAnswer)
      property closed : Bool?
      property public_voters : Bool?
      property multiple_choice : Bool?
      property quiz : Bool?
      
      def initialize(
        @id : Int64,
        @question : String,
        @answers : Array(PollAnswer),
        @closed : Bool = false,
        @public_voters : Bool = false,
        @multiple_choice : Bool = false,
        @quiz : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@closed ? 0 : 0)
        buffer.write_byte(@public_voters ? 1 : 0)
        buffer.write_byte(@multiple_choice ? 2 : 0)
        buffer.write_byte(@quiz ? 3 : 0)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@question)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@answers.size, IO::ByteFormat::LittleEndian)
        @answers.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PollAnswerVoters < TLObject
      getter constructor_id = 0x3b6ddad2_u32
      
      property option : Bytes
      property voters : Int32
      property chosen : Bool?
      property correct : Bool?
      
      def initialize(
        @option : Bytes,
        @voters : Int32,
        @chosen : Bool = false,
        @correct : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@chosen ? 0 : 0)
        buffer.write_byte(@correct ? 1 : 0)
        buffer.write(TLObject.serialize_bytes(@option)
        buffer.write_bytes(@voters, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PollResults < TLObject
      getter constructor_id = 0xc87024a2_u32
      
      property min : Bool?
      property results : Array(PollAnswerVoters)?
      property total_voters : Int32?
      property recent_voters : Array(Int32)?
      
      def initialize(
        @min : Bool = false,
        @results : Array(PollAnswerVoters)? = nil,
        @total_voters : Int32? = nil,
        @recent_voters : Array(Int32)? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@min ? 0 : 0)
        buffer.write_byte(@results ? 1 : 0)
        buffer.write_byte(@total_voters ? 2 : 0)
        buffer.write_byte(@recent_voters ? 3 : 0)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@results.size, IO::ByteFormat::LittleEndian)
        @results.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(@total_voters, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@recent_voters.size, IO::ByteFormat::LittleEndian)
        @recent_voters.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChatOnlines < TLObject
      getter constructor_id = 0xf041e250_u32
      
      property onlines : Int32
      
      def initialize(
        @onlines : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@onlines, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class StatsURL < TLObject
      getter constructor_id = 0x47a971e0_u32
      
      property url : String
      
      def initialize(
        @url : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@url)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChatAdminRights < TLObject
      getter constructor_id = 0x5fb224d5_u32
      
      property change_info : Bool?
      property post_messages : Bool?
      property edit_messages : Bool?
      property delete_messages : Bool?
      property ban_users : Bool?
      property invite_users : Bool?
      property pin_messages : Bool?
      property add_admins : Bool?
      
      def initialize(
        @change_info : Bool = false,
        @post_messages : Bool = false,
        @edit_messages : Bool = false,
        @delete_messages : Bool = false,
        @ban_users : Bool = false,
        @invite_users : Bool = false,
        @pin_messages : Bool = false,
        @add_admins : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@change_info ? 0 : 0)
        buffer.write_byte(@post_messages ? 1 : 0)
        buffer.write_byte(@edit_messages ? 2 : 0)
        buffer.write_byte(@delete_messages ? 3 : 0)
        buffer.write_byte(@ban_users ? 4 : 0)
        buffer.write_byte(@invite_users ? 5 : 0)
        buffer.write_byte(@pin_messages ? 7 : 0)
        buffer.write_byte(@add_admins ? 9 : 0)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChatBannedRights < TLObject
      getter constructor_id = 0x9f120418_u32
      
      property until_date : Int32
      property view_messages : Bool?
      property send_messages : Bool?
      property send_media : Bool?
      property send_stickers : Bool?
      property send_gifs : Bool?
      property send_games : Bool?
      property send_inline : Bool?
      property embed_links : Bool?
      property send_polls : Bool?
      property change_info : Bool?
      property invite_users : Bool?
      property pin_messages : Bool?
      
      def initialize(
        @until_date : Int32,
        @view_messages : Bool = false,
        @send_messages : Bool = false,
        @send_media : Bool = false,
        @send_stickers : Bool = false,
        @send_gifs : Bool = false,
        @send_games : Bool = false,
        @send_inline : Bool = false,
        @embed_links : Bool = false,
        @send_polls : Bool = false,
        @change_info : Bool = false,
        @invite_users : Bool = false,
        @pin_messages : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@view_messages ? 0 : 0)
        buffer.write_byte(@send_messages ? 1 : 0)
        buffer.write_byte(@send_media ? 2 : 0)
        buffer.write_byte(@send_stickers ? 3 : 0)
        buffer.write_byte(@send_gifs ? 4 : 0)
        buffer.write_byte(@send_games ? 5 : 0)
        buffer.write_byte(@send_inline ? 6 : 0)
        buffer.write_byte(@embed_links ? 7 : 0)
        buffer.write_byte(@send_polls ? 8 : 0)
        buffer.write_byte(@change_info ? 10 : 0)
        buffer.write_byte(@invite_users ? 15 : 0)
        buffer.write_byte(@pin_messages ? 17 : 0)
        buffer.write_bytes(@until_date, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputWallPaper < TLObject
      getter constructor_id = 0xe630b979_u32
      
      property id : Int64
      property access_hash : Int64
      
      def initialize(
        @id : Int64,
        @access_hash : Int64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputWallPaperSlug < InputWallPaper
      getter constructor_id = 0x72091c80_u32
      
      property slug : String
      
      def initialize(
        @slug : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@slug)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputWallPaperNoFile < InputWallPaper
      getter constructor_id = 0x8427bbac_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class CodeSettings < TLObject
      getter constructor_id = 0xdebebe83_u32
      
      property allow_flashcall : Bool?
      property current_number : Bool?
      property allow_app_hash : Bool?
      
      def initialize(
        @allow_flashcall : Bool = false,
        @current_number : Bool = false,
        @allow_app_hash : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@allow_flashcall ? 0 : 0)
        buffer.write_byte(@current_number ? 1 : 0)
        buffer.write_byte(@allow_app_hash ? 4 : 0)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class WallPaperSettings < TLObject
      getter constructor_id = 0x05086cf8_u32
      
      property background_color : Int32?
      property blur : Bool?
      property motion : Bool?
      property intensity : Int32?
      property second_background_color : Int32?
      property rotation : Int32?
      
      def initialize(
        @background_color : Int32? = nil,
        @blur : Bool = false,
        @motion : Bool = false,
        @intensity : Int32? = nil,
        @second_background_color : Int32? = nil,
        @rotation : Int32? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@blur ? 1 : 0)
        buffer.write_byte(@motion ? 2 : 0)
        buffer.write_byte(@background_color ? 0 : 0)
        buffer.write_byte(@second_background_color ? 4 : 0)
        buffer.write_byte(@intensity ? 3 : 0)
        buffer.write_byte(@rotation ? 4 : 0)
        buffer.write_bytes(@background_color, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@second_background_color, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@intensity, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@rotation, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class AutoDownloadSettings < TLObject
      getter constructor_id = 0xe04232f3_u32
      
      property photo_size_max : Int32
      property video_size_max : Int32
      property file_size_max : Int32
      property video_upload_maxbitrate : Int32
      property disabled : Bool?
      property video_preload_large : Bool?
      property audio_preload_next : Bool?
      property phonecalls_less_data : Bool?
      
      def initialize(
        @photo_size_max : Int32,
        @video_size_max : Int32,
        @file_size_max : Int32,
        @video_upload_maxbitrate : Int32,
        @disabled : Bool = false,
        @video_preload_large : Bool = false,
        @audio_preload_next : Bool = false,
        @phonecalls_less_data : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@disabled ? 0 : 0)
        buffer.write_byte(@video_preload_large ? 1 : 0)
        buffer.write_byte(@audio_preload_next ? 2 : 0)
        buffer.write_byte(@phonecalls_less_data ? 3 : 0)
        buffer.write_bytes(@photo_size_max, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@video_size_max, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@file_size_max, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@video_upload_maxbitrate, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class EmojiKeyword < TLObject
      getter constructor_id = 0xd5b3b9f9_u32
      
      property keyword : String
      property emoticons : Array(String)
      
      def initialize(
        @keyword : String,
        @emoticons : Array(String)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@keyword)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@emoticons.size, IO::ByteFormat::LittleEndian)
        @emoticons.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class EmojiKeywordDeleted < EmojiKeyword
      getter constructor_id = 0x236df622_u32
      
      property keyword : String
      property emoticons : Array(String)
      
      def initialize(
        @keyword : String,
        @emoticons : Array(String)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@keyword)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@emoticons.size, IO::ByteFormat::LittleEndian)
        @emoticons.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class EmojiKeywordsDifference < TLObject
      getter constructor_id = 0x5cc761bd_u32
      
      property lang_code : String
      property from_version : Int32
      property version : Int32
      property keywords : Array(EmojiKeyword)
      
      def initialize(
        @lang_code : String,
        @from_version : Int32,
        @version : Int32,
        @keywords : Array(EmojiKeyword)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@lang_code)
        buffer.write_bytes(@from_version, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@version, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@keywords.size, IO::ByteFormat::LittleEndian)
        @keywords.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class EmojiURL < TLObject
      getter constructor_id = 0xa575739d_u32
      
      property url : String
      
      def initialize(
        @url : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@url)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class EmojiLanguage < TLObject
      getter constructor_id = 0xb3fb5361_u32
      
      property lang_code : String
      
      def initialize(
        @lang_code : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@lang_code)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class FileLocationToBeDeprecated < FileLocation
      getter constructor_id = 0xbc7fc6cd_u32
      
      property volume_id : Int64
      property local_id : Int32
      
      def initialize(
        @volume_id : Int64,
        @local_id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@volume_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@local_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class Folder < TLObject
      getter constructor_id = 0xff544e65_u32
      
      property id : Int32
      property title : String
      property autofill_new_broadcasts : Bool?
      property autofill_public_groups : Bool?
      property autofill_new_correspondents : Bool?
      property photo : ChatPhoto?
      
      def initialize(
        @id : Int32,
        @title : String,
        @autofill_new_broadcasts : Bool = false,
        @autofill_public_groups : Bool = false,
        @autofill_new_correspondents : Bool = false,
        @photo : ChatPhoto? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@autofill_new_broadcasts ? 0 : 0)
        buffer.write_byte(@autofill_public_groups ? 1 : 0)
        buffer.write_byte(@autofill_new_correspondents ? 2 : 0)
        buffer.write_byte(@photo ? 3 : 0)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@title)
        buffer.write(@photo.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputFolderPeer < TLObject
      getter constructor_id = 0xfbd2c296_u32
      
      property peer : InputPeer
      property folder_id : Int32
      
      def initialize(
        @peer : InputPeer,
        @folder_id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@peer.to_bytes)
        buffer.write_bytes(@folder_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class FolderPeer < TLObject
      getter constructor_id = 0xe9baa668_u32
      
      property peer : Peer
      property folder_id : Int32
      
      def initialize(
        @peer : Peer,
        @folder_id : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@peer.to_bytes)
        buffer.write_bytes(@folder_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UrlAuthResultRequest < UrlAuthResult
      getter constructor_id = 0x92d33a0e_u32
      
      property bot : User
      property domain : String
      property request_write_access : Bool?
      
      def initialize(
        @bot : User,
        @domain : String,
        @request_write_access : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@request_write_access ? 0 : 0)
        buffer.write(@bot.to_bytes)
        buffer.write(TLObject.serialize_bytes(@domain)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UrlAuthResultAccepted < UrlAuthResult
      getter constructor_id = 0x8f8c0e4e_u32
      
      property url : String
      
      def initialize(
        @url : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@url)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UrlAuthResultDefault < UrlAuthResult
      getter constructor_id = 0xa9d6db1f_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelLocationEmpty < ChannelLocation
      getter constructor_id = 0xbfb5ad8b_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelLocation < TLObject
      getter constructor_id = 0x209b82db_u32
      
      property geo_point : GeoPoint
      property address : String
      
      def initialize(
        @geo_point : GeoPoint,
        @address : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@geo_point.to_bytes)
        buffer.write(TLObject.serialize_bytes(@address)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PeerLocated < TLObject
      getter constructor_id = 0xca461b5d_u32
      
      property peer : Peer
      property expires : Int32
      property distance : Int32
      
      def initialize(
        @peer : Peer,
        @expires : Int32,
        @distance : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@peer.to_bytes)
        buffer.write_bytes(@expires, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@distance, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PeerSelfLocated < PeerLocated
      getter constructor_id = 0xf8ec284b_u32
      
      property expires : Int32
      
      def initialize(
        @expires : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@expires, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class RestrictionReason < TLObject
      getter constructor_id = 0xd072acb4_u32
      
      property platform : String
      property reason : String
      property text : String
      
      def initialize(
        @platform : String,
        @reason : String,
        @text : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@platform)
        buffer.write(TLObject.serialize_bytes(@reason)
        buffer.write(TLObject.serialize_bytes(@text)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputTheme < TLObject
      getter constructor_id = 0x3c5693e9_u32
      
      property id : Int64
      property access_hash : Int64
      
      def initialize(
        @id : Int64,
        @access_hash : Int64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputThemeSlug < InputTheme
      getter constructor_id = 0xf5890df1_u32
      
      property slug : String
      
      def initialize(
        @slug : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@slug)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class Theme < TLObject
      getter constructor_id = 0x028f1114_u32
      
      property id : Int64
      property access_hash : Int64
      property slug : String
      property title : String
      property installs_count : Int32
      property creator : Bool?
      property default : Bool?
      property document : Document?
      property settings : ThemeSettings?
      
      def initialize(
        @id : Int64,
        @access_hash : Int64,
        @slug : String,
        @title : String,
        @installs_count : Int32,
        @creator : Bool = false,
        @default : Bool = false,
        @document : Document? = nil,
        @settings : ThemeSettings? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@creator ? 0 : 0)
        buffer.write_byte(@default ? 1 : 0)
        buffer.write_byte(@document ? 2 : 0)
        buffer.write_byte(@settings ? 3 : 0)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@access_hash, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@slug)
        buffer.write(TLObject.serialize_bytes(@title)
        buffer.write(@document.to_bytes)
        buffer.write(@settings.to_bytes)
        buffer.write_bytes(@installs_count, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class BaseThemeClassic < BaseTheme
      getter constructor_id = 0xc3a12462_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class BaseThemeDay < BaseTheme
      getter constructor_id = 0xfbd81688_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class BaseThemeNight < BaseTheme
      getter constructor_id = 0xb7b31ea8_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class BaseThemeTinted < BaseTheme
      getter constructor_id = 0x6d5f77ee_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class BaseThemeArctic < BaseTheme
      getter constructor_id = 0x5b11125a_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InputThemeSettings < TLObject
      getter constructor_id = 0xbd507cd1_u32
      
      property base_theme : BaseTheme
      property accent_color : Int32
      property message_top_color : Int32?
      property message_bottom_color : Int32?
      property wallpaper : InputWallPaper?
      property wallpaper_settings : WallPaperSettings?
      
      def initialize(
        @base_theme : BaseTheme,
        @accent_color : Int32,
        @message_top_color : Int32? = nil,
        @message_bottom_color : Int32? = nil,
        @wallpaper : InputWallPaper? = nil,
        @wallpaper_settings : WallPaperSettings? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@message_top_color ? 0 : 0)
        buffer.write_byte(@message_bottom_color ? 0 : 0)
        buffer.write_byte(@wallpaper ? 1 : 0)
        buffer.write_byte(@wallpaper_settings ? 1 : 0)
        buffer.write(@base_theme.to_bytes)
        buffer.write_bytes(@accent_color, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@message_top_color, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@message_bottom_color, IO::ByteFormat::LittleEndian)
        buffer.write(@wallpaper.to_bytes)
        buffer.write(@wallpaper_settings.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ThemeSettings < TLObject
      getter constructor_id = 0x9c14984a_u32
      
      property base_theme : BaseTheme
      property accent_color : Int32
      property message_top_color : Int32?
      property message_bottom_color : Int32?
      property wallpaper : WallPaper?
      
      def initialize(
        @base_theme : BaseTheme,
        @accent_color : Int32,
        @message_top_color : Int32? = nil,
        @message_bottom_color : Int32? = nil,
        @wallpaper : WallPaper? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@message_top_color ? 0 : 0)
        buffer.write_byte(@message_bottom_color ? 0 : 0)
        buffer.write_byte(@wallpaper ? 1 : 0)
        buffer.write(@base_theme.to_bytes)
        buffer.write_bytes(@accent_color, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@message_top_color, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@message_bottom_color, IO::ByteFormat::LittleEndian)
        buffer.write(@wallpaper.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class WebPageAttributeTheme < WebPageAttribute
      getter constructor_id = 0x54b56617_u32
      
      property documents : Array(Document)?
      property settings : ThemeSettings?
      
      def initialize(
        @documents : Array(Document)? = nil,
        @settings : ThemeSettings? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@documents ? 0 : 0)
        buffer.write_byte(@settings ? 1 : 0)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@documents.size, IO::ByteFormat::LittleEndian)
        @documents.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write(@settings.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageUserVote < TLObject
      getter constructor_id = 0xa28e5559_u32
      
      property user_id : Int32
      property option : Bytes
      property date : Int32
      
      def initialize(
        @user_id : Int32,
        @option : Bytes,
        @date : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@option)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageUserVoteInputOption < MessageUserVote
      getter constructor_id = 0x36377430_u32
      
      property user_id : Int32
      property date : Int32
      
      def initialize(
        @user_id : Int32,
        @date : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageUserVoteMultiple < MessageUserVote
      getter constructor_id = 0x0e8fe0de_u32
      
      property user_id : Int32
      property options : Array(Bytes)
      property date : Int32
      
      def initialize(
        @user_id : Int32,
        @options : Array(Bytes),
        @date : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@user_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@options.size, IO::ByteFormat::LittleEndian)
        @options.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class BankCardOpenUrl < TLObject
      getter constructor_id = 0xf568028a_u32
      
      property url : String
      property name : String
      
      def initialize(
        @url : String,
        @name : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@url)
        buffer.write(TLObject.serialize_bytes(@name)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class DialogFilter < TLObject
      getter constructor_id = 0x7438f7e8_u32
      
      property id : Int32
      property title : String
      property pinned_peers : Array(InputPeer)
      property include_peers : Array(InputPeer)
      property exclude_peers : Array(InputPeer)
      property contacts : Bool?
      property non_contacts : Bool?
      property groups : Bool?
      property broadcasts : Bool?
      property bots : Bool?
      property exclude_muted : Bool?
      property exclude_read : Bool?
      property exclude_archived : Bool?
      property emoticon : String?
      
      def initialize(
        @id : Int32,
        @title : String,
        @pinned_peers : Array(InputPeer),
        @include_peers : Array(InputPeer),
        @exclude_peers : Array(InputPeer),
        @contacts : Bool = false,
        @non_contacts : Bool = false,
        @groups : Bool = false,
        @broadcasts : Bool = false,
        @bots : Bool = false,
        @exclude_muted : Bool = false,
        @exclude_read : Bool = false,
        @exclude_archived : Bool = false,
        @emoticon : String? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@contacts ? 0 : 0)
        buffer.write_byte(@non_contacts ? 1 : 0)
        buffer.write_byte(@groups ? 2 : 0)
        buffer.write_byte(@broadcasts ? 3 : 0)
        buffer.write_byte(@bots ? 4 : 0)
        buffer.write_byte(@exclude_muted ? 11 : 0)
        buffer.write_byte(@exclude_read ? 12 : 0)
        buffer.write_byte(@exclude_archived ? 13 : 0)
        buffer.write_byte(@emoticon ? 25 : 0)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@title)
        buffer.write(TLObject.serialize_bytes(@emoticon)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@pinned_peers.size, IO::ByteFormat::LittleEndian)
        @pinned_peers.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@include_peers.size, IO::ByteFormat::LittleEndian)
        @include_peers.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@exclude_peers.size, IO::ByteFormat::LittleEndian)
        @exclude_peers.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class DialogFilterSuggested < TLObject
      getter constructor_id = 0x77744d4a_u32
      
      property filter : DialogFilter
      property description : String
      
      def initialize(
        @filter : DialogFilter,
        @description : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@filter.to_bytes)
        buffer.write(TLObject.serialize_bytes(@description)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class StatsDateRangeDays < TLObject
      getter constructor_id = 0xb637edaf_u32
      
      property min_date : Int32
      property max_date : Int32
      
      def initialize(
        @min_date : Int32,
        @max_date : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@min_date, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@max_date, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class StatsAbsValueAndPrev < TLObject
      getter constructor_id = 0xcb43acde_u32
      
      property current : Float64
      property previous : Float64
      
      def initialize(
        @current : Float64,
        @previous : Float64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@current, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@previous, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class StatsPercentValue < TLObject
      getter constructor_id = 0xcbce2fe0_u32
      
      property part : Float64
      property total : Float64
      
      def initialize(
        @part : Float64,
        @total : Float64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@part, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@total, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class StatsGraphAsync < StatsGraph
      getter constructor_id = 0x4a27eb2d_u32
      
      property token : String
      
      def initialize(
        @token : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@token)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class StatsGraphError < StatsGraph
      getter constructor_id = 0xbedc9822_u32
      
      property error : String
      
      def initialize(
        @error : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@error)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class StatsGraph < TLObject
      getter constructor_id = 0x8ea464b6_u32
      
      property json : DataJSON
      property zoom_token : String?
      
      def initialize(
        @json : DataJSON,
        @zoom_token : String? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@zoom_token ? 0 : 0)
        buffer.write(@json.to_bytes)
        buffer.write(TLObject.serialize_bytes(@zoom_token)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageInteractionCounters < TLObject
      getter constructor_id = 0xad4fc9bd_u32
      
      property msg_id : Int32
      property views : Int32
      property forwards : Int32
      
      def initialize(
        @msg_id : Int32,
        @views : Int32,
        @forwards : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@msg_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@views, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@forwards, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ResPQ < TLObject
      getter constructor_id = 0x05162463_u32
      
      property nonce : Int128
      property server_nonce : Int128
      property pq : String
      property server_public_key_fingerprints : Array(Int64)
      
      def initialize(
        @nonce : Int128,
        @server_nonce : Int128,
        @pq : String,
        @server_public_key_fingerprints : Array(Int64)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@nonce, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@server_nonce, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@pq)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@server_public_key_fingerprints.size, IO::ByteFormat::LittleEndian)
        @server_public_key_fingerprints.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PQInnerData < PQInnerData
      getter constructor_id = 0x83c95aec_u32
      
      property pq : String
      property p : String
      property q : String
      property nonce : Int128
      property server_nonce : Int128
      property new_nonce : BigInt
      
      def initialize(
        @pq : String,
        @p : String,
        @q : String,
        @nonce : Int128,
        @server_nonce : Int128,
        @new_nonce : BigInt
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@pq)
        buffer.write(TLObject.serialize_bytes(@p)
        buffer.write(TLObject.serialize_bytes(@q)
        buffer.write_bytes(@nonce, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@server_nonce, IO::ByteFormat::LittleEndian)
        buffer.write(@new_nonce.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PQInnerDataDc < PQInnerData
      getter constructor_id = 0xa9f55f95_u32
      
      property pq : String
      property p : String
      property q : String
      property nonce : Int128
      property server_nonce : Int128
      property new_nonce : BigInt
      property dc : Int32
      
      def initialize(
        @pq : String,
        @p : String,
        @q : String,
        @nonce : Int128,
        @server_nonce : Int128,
        @new_nonce : BigInt,
        @dc : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@pq)
        buffer.write(TLObject.serialize_bytes(@p)
        buffer.write(TLObject.serialize_bytes(@q)
        buffer.write_bytes(@nonce, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@server_nonce, IO::ByteFormat::LittleEndian)
        buffer.write(@new_nonce.to_bytes)
        buffer.write_bytes(@dc, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PQInnerDataTemp < PQInnerData
      getter constructor_id = 0x3c6a84d4_u32
      
      property pq : String
      property p : String
      property q : String
      property nonce : Int128
      property server_nonce : Int128
      property new_nonce : BigInt
      property expires_in : Int32
      
      def initialize(
        @pq : String,
        @p : String,
        @q : String,
        @nonce : Int128,
        @server_nonce : Int128,
        @new_nonce : BigInt,
        @expires_in : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@pq)
        buffer.write(TLObject.serialize_bytes(@p)
        buffer.write(TLObject.serialize_bytes(@q)
        buffer.write_bytes(@nonce, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@server_nonce, IO::ByteFormat::LittleEndian)
        buffer.write(@new_nonce.to_bytes)
        buffer.write_bytes(@expires_in, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PQInnerDataTempDc < PQInnerData
      getter constructor_id = 0x56fddf88_u32
      
      property pq : String
      property p : String
      property q : String
      property nonce : Int128
      property server_nonce : Int128
      property new_nonce : BigInt
      property dc : Int32
      property expires_in : Int32
      
      def initialize(
        @pq : String,
        @p : String,
        @q : String,
        @nonce : Int128,
        @server_nonce : Int128,
        @new_nonce : BigInt,
        @dc : Int32,
        @expires_in : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@pq)
        buffer.write(TLObject.serialize_bytes(@p)
        buffer.write(TLObject.serialize_bytes(@q)
        buffer.write_bytes(@nonce, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@server_nonce, IO::ByteFormat::LittleEndian)
        buffer.write(@new_nonce.to_bytes)
        buffer.write_bytes(@dc, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@expires_in, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class BindAuthKeyInner < BindAuthKeyInner
      getter constructor_id = 0x75a3f765_u32
      
      property nonce : Int64
      property temp_auth_key_id : Int64
      property perm_auth_key_id : Int64
      property temp_session_id : Int64
      property expires_at : Int32
      
      def initialize(
        @nonce : Int64,
        @temp_auth_key_id : Int64,
        @perm_auth_key_id : Int64,
        @temp_session_id : Int64,
        @expires_at : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@nonce, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@temp_auth_key_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@perm_auth_key_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@temp_session_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@expires_at, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ServerDHParamsFail < ServerDHParams
      getter constructor_id = 0x79cb045d_u32
      
      property nonce : Int128
      property server_nonce : Int128
      property new_nonce_hash : Int128
      
      def initialize(
        @nonce : Int128,
        @server_nonce : Int128,
        @new_nonce_hash : Int128
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@nonce, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@server_nonce, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@new_nonce_hash, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ServerDHParamsOk < ServerDHParams
      getter constructor_id = 0xd0e8075c_u32
      
      property nonce : Int128
      property server_nonce : Int128
      property encrypted_answer : String
      
      def initialize(
        @nonce : Int128,
        @server_nonce : Int128,
        @encrypted_answer : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@nonce, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@server_nonce, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@encrypted_answer)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ServerDHInnerData < ServerDHInnerData
      getter constructor_id = 0xb5890dba_u32
      
      property nonce : Int128
      property server_nonce : Int128
      property g : Int32
      property dh_prime : String
      property g_a : String
      property server_time : Int32
      
      def initialize(
        @nonce : Int128,
        @server_nonce : Int128,
        @g : Int32,
        @dh_prime : String,
        @g_a : String,
        @server_time : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@nonce, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@server_nonce, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@g, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@dh_prime)
        buffer.write(TLObject.serialize_bytes(@g_a)
        buffer.write_bytes(@server_time, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ClientDHInnerData < ClientDHInnerData
      getter constructor_id = 0x6643b654_u32
      
      property nonce : Int128
      property server_nonce : Int128
      property retry_id : Int64
      property g_b : String
      
      def initialize(
        @nonce : Int128,
        @server_nonce : Int128,
        @retry_id : Int64,
        @g_b : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@nonce, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@server_nonce, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@retry_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@g_b)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class DhGenOk < SetClientDHParamsAnswer
      getter constructor_id = 0x3bcbf734_u32
      
      property nonce : Int128
      property server_nonce : Int128
      property new_nonce_hash1 : Int128
      
      def initialize(
        @nonce : Int128,
        @server_nonce : Int128,
        @new_nonce_hash1 : Int128
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@nonce, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@server_nonce, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@new_nonce_hash1, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class DhGenRetry < SetClientDHParamsAnswer
      getter constructor_id = 0x46dc1fb9_u32
      
      property nonce : Int128
      property server_nonce : Int128
      property new_nonce_hash2 : Int128
      
      def initialize(
        @nonce : Int128,
        @server_nonce : Int128,
        @new_nonce_hash2 : Int128
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@nonce, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@server_nonce, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@new_nonce_hash2, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class DhGenFail < SetClientDHParamsAnswer
      getter constructor_id = 0xa69dae02_u32
      
      property nonce : Int128
      property server_nonce : Int128
      property new_nonce_hash3 : Int128
      
      def initialize(
        @nonce : Int128,
        @server_nonce : Int128,
        @new_nonce_hash3 : Int128
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@nonce, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@server_nonce, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@new_nonce_hash3, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class DestroyAuthKeyOk < DestroyAuthKeyRes
      getter constructor_id = 0xf660e1d4_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class DestroyAuthKeyNone < DestroyAuthKeyRes
      getter constructor_id = 0x0a9f2259_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class DestroyAuthKeyFail < DestroyAuthKeyRes
      getter constructor_id = 0xea109b13_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MsgsAck < MsgsAck
      getter constructor_id = 0x62d6b459_u32
      
      property msg_ids : Array(Int64)
      
      def initialize(
        @msg_ids : Array(Int64)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@msg_ids.size, IO::ByteFormat::LittleEndian)
        @msg_ids.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class BadMsgNotification < BadMsgNotification
      getter constructor_id = 0xa7eff811_u32
      
      property bad_msg_id : Int64
      property bad_msg_seqno : Int32
      property error_code : Int32
      
      def initialize(
        @bad_msg_id : Int64,
        @bad_msg_seqno : Int32,
        @error_code : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@bad_msg_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@bad_msg_seqno, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@error_code, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class BadServerSalt < BadMsgNotification
      getter constructor_id = 0xedab447b_u32
      
      property bad_msg_id : Int64
      property bad_msg_seqno : Int32
      property error_code : Int32
      property new_server_salt : Int64
      
      def initialize(
        @bad_msg_id : Int64,
        @bad_msg_seqno : Int32,
        @error_code : Int32,
        @new_server_salt : Int64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@bad_msg_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@bad_msg_seqno, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@error_code, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@new_server_salt, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MsgsStateReq < MsgsStateReq
      getter constructor_id = 0xda69fb52_u32
      
      property msg_ids : Array(Int64)
      
      def initialize(
        @msg_ids : Array(Int64)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@msg_ids.size, IO::ByteFormat::LittleEndian)
        @msg_ids.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MsgsStateInfo < MsgsStateInfo
      getter constructor_id = 0x04deb57d_u32
      
      property req_msg_id : Int64
      property info : String
      
      def initialize(
        @req_msg_id : Int64,
        @info : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@req_msg_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@info)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MsgsAllInfo < MsgsAllInfo
      getter constructor_id = 0x8cc0d131_u32
      
      property msg_ids : Array(Int64)
      property info : String
      
      def initialize(
        @msg_ids : Array(Int64),
        @info : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@msg_ids.size, IO::ByteFormat::LittleEndian)
        @msg_ids.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write(TLObject.serialize_bytes(@info)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MsgDetailedInfo < MsgDetailedInfo
      getter constructor_id = 0x276d3ec6_u32
      
      property msg_id : Int64
      property answer_msg_id : Int64
      property bytes : Int32
      property status : Int32
      
      def initialize(
        @msg_id : Int64,
        @answer_msg_id : Int64,
        @bytes : Int32,
        @status : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@msg_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@answer_msg_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@bytes, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@status, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MsgNewDetailedInfo < MsgDetailedInfo
      getter constructor_id = 0x809db6df_u32
      
      property answer_msg_id : Int64
      property bytes : Int32
      property status : Int32
      
      def initialize(
        @answer_msg_id : Int64,
        @bytes : Int32,
        @status : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@answer_msg_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@bytes, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@status, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MsgResendReq < MsgResendReq
      getter constructor_id = 0x7d861a08_u32
      
      property msg_ids : Array(Int64)
      
      def initialize(
        @msg_ids : Array(Int64)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@msg_ids.size, IO::ByteFormat::LittleEndian)
        @msg_ids.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class RpcError < RpcError
      getter constructor_id = 0x2144ca19_u32
      
      property error_code : Int32
      property error_message : String
      
      def initialize(
        @error_code : Int32,
        @error_message : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@error_code, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@error_message)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class RpcAnswerUnknown < RpcDropAnswer
      getter constructor_id = 0x5e2ad36e_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class RpcAnswerDroppedRunning < RpcDropAnswer
      getter constructor_id = 0xcd78e586_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class RpcAnswerDropped < RpcDropAnswer
      getter constructor_id = 0xa43ad8b7_u32
      
      property msg_id : Int64
      property seq_no : Int32
      property bytes : Int32
      
      def initialize(
        @msg_id : Int64,
        @seq_no : Int32,
        @bytes : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@msg_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@seq_no, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@bytes, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class FutureSalt < FutureSalt
      getter constructor_id = 0x0949d9dc_u32
      
      property valid_since : Int32
      property valid_until : Int32
      property salt : Int64
      
      def initialize(
        @valid_since : Int32,
        @valid_until : Int32,
        @salt : Int64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@valid_since, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@valid_until, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@salt, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class FutureSalts < FutureSalts
      getter constructor_id = 0xae500895_u32
      
      property req_msg_id : Int64
      property now : Int32
      property salts : Array(future_salt)
      
      def initialize(
        @req_msg_id : Int64,
        @now : Int32,
        @salts : Array(future_salt)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@req_msg_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@now, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@salts.size, IO::ByteFormat::LittleEndian)
        @salts.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class Pong < TLObject
      getter constructor_id = 0x347773c5_u32
      
      property msg_id : Int64
      property ping_id : Int64
      
      def initialize(
        @msg_id : Int64,
        @ping_id : Int64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@msg_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@ping_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class DestroySessionOk < DestroySessionRes
      getter constructor_id = 0xe22045fc_u32
      
      property session_id : Int64
      
      def initialize(
        @session_id : Int64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@session_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class DestroySessionNone < DestroySessionRes
      getter constructor_id = 0x62d350c9_u32
      
      property session_id : Int64
      
      def initialize(
        @session_id : Int64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@session_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class NewSessionCreated < NewSession
      getter constructor_id = 0x9ec20908_u32
      
      property first_msg_id : Int64
      property unique_id : Int64
      property server_salt : Int64
      
      def initialize(
        @first_msg_id : Int64,
        @unique_id : Int64,
        @server_salt : Int64
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@first_msg_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@unique_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@server_salt, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class HttpWait < HttpWait
      getter constructor_id = 0x9299359f_u32
      
      property max_delay : Int32
      property wait_after : Int32
      property max_wait : Int32
      
      def initialize(
        @max_delay : Int32,
        @wait_after : Int32,
        @max_wait : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@max_delay, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@wait_after, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@max_wait, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class IpPort < TLObject
      getter constructor_id = 0xd433ad73_u32
      
      property ipv4 : Int32
      property port : Int32
      
      def initialize(
        @ipv4 : Int32,
        @port : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@ipv4, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@port, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class IpPortSecret < IpPort
      getter constructor_id = 0x37982646_u32
      
      property ipv4 : Int32
      property port : Int32
      property secret : Bytes
      
      def initialize(
        @ipv4 : Int32,
        @port : Int32,
        @secret : Bytes
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@ipv4, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@port, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@secret)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class AccessPointRule < TLObject
      getter constructor_id = 0x4679b65f_u32
      
      property phone_prefix_rules : String
      property dc_id : Int32
      property ips : Array(IpPort)
      
      def initialize(
        @phone_prefix_rules : String,
        @dc_id : Int32,
        @ips : Array(IpPort)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@phone_prefix_rules)
        buffer.write_bytes(@dc_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@ips.size, IO::ByteFormat::LittleEndian)
        @ips.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class TlsClientHello < TLObject
      getter constructor_id = 0x6c52c484_u32
      
      property blocks : Array(TlsBlock)
      
      def initialize(
        @blocks : Array(TlsBlock)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@blocks.size, IO::ByteFormat::LittleEndian)
        @blocks.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class TlsBlockString < TlsBlock
      getter constructor_id = 0x4218a164_u32
      
      property data : String
      
      def initialize(
        @data : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@data)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class TlsBlockRandom < TlsBlock
      getter constructor_id = 0x4d4dc41e_u32
      
      property length : Int32
      
      def initialize(
        @length : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@length, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class TlsBlockZero < TlsBlock
      getter constructor_id = 0x09333afb_u32
      
      property length : Int32
      
      def initialize(
        @length : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@length, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class TlsBlockDomain < TlsBlock
      getter constructor_id = 0x10e8636f_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class TlsBlockGrease < TlsBlock
      getter constructor_id = 0xe675a1c1_u32
      
      property seed : Int32
      
      def initialize(
        @seed : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@seed, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class TlsBlockPublicKey < TlsBlock
      getter constructor_id = 0x9eb95b5c_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class TlsBlockScope < TlsBlock
      getter constructor_id = 0xe725d44f_u32
      
      property entries : Array(TlsBlock)
      
      def initialize(
        @entries : Array(TlsBlock)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@entries.size, IO::ByteFormat::LittleEndian)
        @entries.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
  end
end
