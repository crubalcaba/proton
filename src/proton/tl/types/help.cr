# Copyright 2020 - Chris Watson <cawatson1993@gmail.com>
#
# You should have received with this program a copy of the MIT license. This code is
# subject to the terms and conditions outlined in said license. For more information,
# please see https://en.wikipedia.org/wiki/MIT_License.
#
# This file was autogenerated. Please do not modify directory.
require "../../helpers"
require "../../tl_object"

module Proton
  module TL
    abstract class ProxyData < TLObject
    end
    
    class AppUpdate < TLObject
      getter constructor_id = 0x1da7158f_u32
      
      property id : Int32
      property version : String
      property text : String
      property entities : Array(MessageEntity)
      property can_not_skip : Bool?
      property document : Document?
      property url : String?
      
      def initialize(
        @id : Int32,
        @version : String,
        @text : String,
        @entities : Array(MessageEntity),
        @can_not_skip : Bool = false,
        @document : Document? = nil,
        @url : String? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@can_not_skip ? 0 : 0)
        buffer.write_byte(@document ? 1 : 0)
        buffer.write_byte(@url ? 2 : 0)
        buffer.write_bytes(@id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@version)
        buffer.write(TLObject.serialize_bytes(@text)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@entities.size, IO::ByteFormat::LittleEndian)
        @entities.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write(@document.to_bytes)
        buffer.write(TLObject.serialize_bytes(@url)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class NoAppUpdate < AppUpdate
      getter constructor_id = 0xc45a6536_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InviteText < TLObject
      getter constructor_id = 0x18cb9f78_u32
      
      property message : String
      
      def initialize(
        @message : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@message)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class Support < TLObject
      getter constructor_id = 0x17c6b5f6_u32
      
      property phone_number : String
      property user : User
      
      def initialize(
        @phone_number : String,
        @user : User
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@phone_number)
        buffer.write(@user.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class TermsOfService < TLObject
      getter constructor_id = 0x780a0310_u32
      
      property id : DataJSON
      property text : String
      property entities : Array(MessageEntity)
      property popup : Bool?
      property min_age_confirm : Int32?
      
      def initialize(
        @id : DataJSON,
        @text : String,
        @entities : Array(MessageEntity),
        @popup : Bool = false,
        @min_age_confirm : Int32? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@popup ? 0 : 0)
        buffer.write_byte(@min_age_confirm ? 1 : 0)
        buffer.write(@id.to_bytes)
        buffer.write(TLObject.serialize_bytes(@text)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@entities.size, IO::ByteFormat::LittleEndian)
        @entities.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(@min_age_confirm, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class RecentMeUrls < TLObject
      getter constructor_id = 0x0e0310d7_u32
      
      property urls : Array(RecentMeUrl)
      property chats : Array(Chat)
      property users : Array(User)
      
      def initialize(
        @urls : Array(RecentMeUrl),
        @chats : Array(Chat),
        @users : Array(User)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@urls.size, IO::ByteFormat::LittleEndian)
        @urls.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@chats.size, IO::ByteFormat::LittleEndian)
        @chats.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@users.size, IO::ByteFormat::LittleEndian)
        @users.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ProxyDataEmpty < ProxyData
      getter constructor_id = 0xe09e1fb8_u32
      
      property expires : Int32
      
      def initialize(
        @expires : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@expires, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ProxyDataPromo < ProxyData
      getter constructor_id = 0x2bf7ee23_u32
      
      property expires : Int32
      property peer : Peer
      property chats : Array(Chat)
      property users : Array(User)
      
      def initialize(
        @expires : Int32,
        @peer : Peer,
        @chats : Array(Chat),
        @users : Array(User)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@expires, IO::ByteFormat::LittleEndian)
        buffer.write(@peer.to_bytes)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@chats.size, IO::ByteFormat::LittleEndian)
        @chats.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@users.size, IO::ByteFormat::LittleEndian)
        @users.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class TermsOfServiceUpdateEmpty < TermsOfServiceUpdate
      getter constructor_id = 0xe3309f7f_u32
      
      property expires : Int32
      
      def initialize(
        @expires : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@expires, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class TermsOfServiceUpdate < TLObject
      getter constructor_id = 0x28ecf961_u32
      
      property expires : Int32
      property terms_of_service : TermsOfService
      
      def initialize(
        @expires : Int32,
        @terms_of_service : TermsOfService
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@expires, IO::ByteFormat::LittleEndian)
        buffer.write(@terms_of_service.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class DeepLinkInfoEmpty < DeepLinkInfo
      getter constructor_id = 0x66afa166_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class DeepLinkInfo < TLObject
      getter constructor_id = 0x6a4ee832_u32
      
      property message : String
      property update_app : Bool?
      property entities : Array(MessageEntity)?
      
      def initialize(
        @message : String,
        @update_app : Bool = false,
        @entities : Array(MessageEntity)? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@update_app ? 0 : 0)
        buffer.write_byte(@entities ? 1 : 0)
        buffer.write(TLObject.serialize_bytes(@message)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@entities.size, IO::ByteFormat::LittleEndian)
        @entities.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PassportConfigNotModified < PassportConfig
      getter constructor_id = 0xbfb9f457_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PassportConfig < TLObject
      getter constructor_id = 0xa098d6af_u32
      
      property hash : Int32
      property countries_langs : DataJSON
      
      def initialize(
        @hash : Int32,
        @countries_langs : DataJSON
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@hash, IO::ByteFormat::LittleEndian)
        buffer.write(@countries_langs.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SupportName < TLObject
      getter constructor_id = 0x8c05f1c9_u32
      
      property name : String
      
      def initialize(
        @name : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@name)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UserInfoEmpty < UserInfo
      getter constructor_id = 0xf3ae2eed_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class UserInfo < TLObject
      getter constructor_id = 0x01eb3758_u32
      
      property message : String
      property entities : Array(MessageEntity)
      property author : String
      property date : Int32
      
      def initialize(
        @message : String,
        @entities : Array(MessageEntity),
        @author : String,
        @date : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@message)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@entities.size, IO::ByteFormat::LittleEndian)
        @entities.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write(TLObject.serialize_bytes(@author)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ConfigSimple < TLObject
      getter constructor_id = 0x5a592a6c_u32
      
      property date : Int32
      property expires : Int32
      property rules : Array(AccessPointRule)
      
      def initialize(
        @date : Int32,
        @expires : Int32,
        @rules : Array(AccessPointRule)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@expires, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@rules.size, IO::ByteFormat::LittleEndian)
        @rules.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
  end
end
