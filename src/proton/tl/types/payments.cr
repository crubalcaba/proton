# Copyright 2020 - Chris Watson <cawatson1993@gmail.com>
#
# You should have received with this program a copy of the MIT license. This code is
# subject to the terms and conditions outlined in said license. For more information,
# please see https://en.wikipedia.org/wiki/MIT_License.
#
# This file was autogenerated. Please do not modify directory.
require "../../helpers"
require "../../tl_object"

module Proton
  module TL
    class PaymentForm < TLObject
      getter constructor_id = 0x3f56aea3_u32
      
      property bot_id : Int32
      property invoice : Invoice
      property provider_id : Int32
      property url : String
      property users : Array(User)
      property saved_info : PaymentRequestedInfo?
      property saved_credentials : PaymentSavedCredentials?
      property can_save_credentials : Bool?
      property password_missing : Bool?
      property native_provider : String?
      property native_params : DataJSON?
      
      def initialize(
        @bot_id : Int32,
        @invoice : Invoice,
        @provider_id : Int32,
        @url : String,
        @users : Array(User),
        @saved_info : PaymentRequestedInfo? = nil,
        @saved_credentials : PaymentSavedCredentials? = nil,
        @can_save_credentials : Bool = false,
        @password_missing : Bool = false,
        @native_provider : String? = nil,
        @native_params : DataJSON? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@can_save_credentials ? 2 : 0)
        buffer.write_byte(@password_missing ? 3 : 0)
        buffer.write_byte(@native_provider ? 4 : 0)
        buffer.write_byte(@native_params ? 4 : 0)
        buffer.write_byte(@saved_info ? 0 : 0)
        buffer.write_byte(@saved_credentials ? 1 : 0)
        buffer.write_bytes(@bot_id, IO::ByteFormat::LittleEndian)
        buffer.write(@invoice.to_bytes)
        buffer.write_bytes(@provider_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@url)
        buffer.write(TLObject.serialize_bytes(@native_provider)
        buffer.write(@native_params.to_bytes)
        buffer.write(@saved_info.to_bytes)
        buffer.write(@saved_credentials.to_bytes)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@users.size, IO::ByteFormat::LittleEndian)
        @users.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ValidatedRequestedInfo < TLObject
      getter constructor_id = 0xd1451883_u32
      
      property id : String?
      property shipping_options : Array(ShippingOption)?
      
      def initialize(
        @id : String? = nil,
        @shipping_options : Array(ShippingOption)? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@id ? 0 : 0)
        buffer.write_byte(@shipping_options ? 1 : 0)
        buffer.write(TLObject.serialize_bytes(@id)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@shipping_options.size, IO::ByteFormat::LittleEndian)
        @shipping_options.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PaymentResult < TLObject
      getter constructor_id = 0x4e5f810d_u32
      
      property updates : Updates
      
      def initialize(
        @updates : Updates
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@updates.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PaymentVerificationNeeded < PaymentResult
      getter constructor_id = 0xd8411139_u32
      
      property url : String
      
      def initialize(
        @url : String
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@url)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PaymentReceipt < TLObject
      getter constructor_id = 0x500911e1_u32
      
      property date : Int32
      property bot_id : Int32
      property invoice : Invoice
      property provider_id : Int32
      property currency : String
      property total_amount : Int64
      property credentials_title : String
      property users : Array(User)
      property info : PaymentRequestedInfo?
      property shipping : ShippingOption?
      
      def initialize(
        @date : Int32,
        @bot_id : Int32,
        @invoice : Invoice,
        @provider_id : Int32,
        @currency : String,
        @total_amount : Int64,
        @credentials_title : String,
        @users : Array(User),
        @info : PaymentRequestedInfo? = nil,
        @shipping : ShippingOption? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@info ? 0 : 0)
        buffer.write_byte(@shipping ? 1 : 0)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@bot_id, IO::ByteFormat::LittleEndian)
        buffer.write(@invoice.to_bytes)
        buffer.write_bytes(@provider_id, IO::ByteFormat::LittleEndian)
        buffer.write(@info.to_bytes)
        buffer.write(@shipping.to_bytes)
        buffer.write(TLObject.serialize_bytes(@currency)
        buffer.write_bytes(@total_amount, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@credentials_title)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@users.size, IO::ByteFormat::LittleEndian)
        @users.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SavedInfo < TLObject
      getter constructor_id = 0xfb8fe43c_u32
      
      property saved_info : PaymentRequestedInfo?
      property has_saved_credentials : Bool?
      
      def initialize(
        @saved_info : PaymentRequestedInfo? = nil,
        @has_saved_credentials : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@has_saved_credentials ? 1 : 0)
        buffer.write_byte(@saved_info ? 0 : 0)
        buffer.write(@saved_info.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class BankCardData < TLObject
      getter constructor_id = 0x3e24e573_u32
      
      property title : String
      property open_urls : Array(BankCardOpenUrl)
      
      def initialize(
        @title : String,
        @open_urls : Array(BankCardOpenUrl)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@title)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@open_urls.size, IO::ByteFormat::LittleEndian)
        @open_urls.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
  end
end
