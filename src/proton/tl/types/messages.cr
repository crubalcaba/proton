# Copyright 2020 - Chris Watson <cawatson1993@gmail.com>
#
# You should have received with this program a copy of the MIT license. This code is
# subject to the terms and conditions outlined in said license. For more information,
# please see https://en.wikipedia.org/wiki/MIT_License.
#
# This file was autogenerated. Please do not modify directory.
require "../../helpers"
require "../../tl_object"

module Proton
  module TL
    abstract class StickerSetInstallResult < TLObject
    end
    
    class Dialogs < TLObject
      getter constructor_id = 0x15ba6c40_u32
      
      property dialogs : Array(Dialog)
      property messages : Array(Message)
      property chats : Array(Chat)
      property users : Array(User)
      
      def initialize(
        @dialogs : Array(Dialog),
        @messages : Array(Message),
        @chats : Array(Chat),
        @users : Array(User)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@dialogs.size, IO::ByteFormat::LittleEndian)
        @dialogs.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@messages.size, IO::ByteFormat::LittleEndian)
        @messages.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@chats.size, IO::ByteFormat::LittleEndian)
        @chats.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@users.size, IO::ByteFormat::LittleEndian)
        @users.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class DialogsSlice < Dialogs
      getter constructor_id = 0x71e094f3_u32
      
      property count : Int32
      property dialogs : Array(Dialog)
      property messages : Array(Message)
      property chats : Array(Chat)
      property users : Array(User)
      
      def initialize(
        @count : Int32,
        @dialogs : Array(Dialog),
        @messages : Array(Message),
        @chats : Array(Chat),
        @users : Array(User)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@count, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@dialogs.size, IO::ByteFormat::LittleEndian)
        @dialogs.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@messages.size, IO::ByteFormat::LittleEndian)
        @messages.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@chats.size, IO::ByteFormat::LittleEndian)
        @chats.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@users.size, IO::ByteFormat::LittleEndian)
        @users.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class DialogsNotModified < Dialogs
      getter constructor_id = 0xf0e3e596_u32
      
      property count : Int32
      
      def initialize(
        @count : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@count, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class Messages < TLObject
      getter constructor_id = 0x8c718e87_u32
      
      property messages : Array(Message)
      property chats : Array(Chat)
      property users : Array(User)
      
      def initialize(
        @messages : Array(Message),
        @chats : Array(Chat),
        @users : Array(User)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@messages.size, IO::ByteFormat::LittleEndian)
        @messages.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@chats.size, IO::ByteFormat::LittleEndian)
        @chats.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@users.size, IO::ByteFormat::LittleEndian)
        @users.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessagesSlice < Messages
      getter constructor_id = 0xc8edce1e_u32
      
      property count : Int32
      property messages : Array(Message)
      property chats : Array(Chat)
      property users : Array(User)
      property next_rate : Int32?
      property inexact : Bool?
      
      def initialize(
        @count : Int32,
        @messages : Array(Message),
        @chats : Array(Chat),
        @users : Array(User),
        @next_rate : Int32? = nil,
        @inexact : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@inexact ? 1 : 0)
        buffer.write_byte(@next_rate ? 0 : 0)
        buffer.write_bytes(@count, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@next_rate, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@messages.size, IO::ByteFormat::LittleEndian)
        @messages.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@chats.size, IO::ByteFormat::LittleEndian)
        @chats.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@users.size, IO::ByteFormat::LittleEndian)
        @users.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChannelMessages < Messages
      getter constructor_id = 0x99262e37_u32
      
      property pts : Int32
      property count : Int32
      property messages : Array(Message)
      property chats : Array(Chat)
      property users : Array(User)
      property inexact : Bool?
      
      def initialize(
        @pts : Int32,
        @count : Int32,
        @messages : Array(Message),
        @chats : Array(Chat),
        @users : Array(User),
        @inexact : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@inexact ? 1 : 0)
        buffer.write_bytes(@pts, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@count, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@messages.size, IO::ByteFormat::LittleEndian)
        @messages.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@chats.size, IO::ByteFormat::LittleEndian)
        @chats.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@users.size, IO::ByteFormat::LittleEndian)
        @users.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessagesNotModified < Messages
      getter constructor_id = 0x74535f21_u32
      
      property count : Int32
      
      def initialize(
        @count : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@count, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class Chats < TLObject
      getter constructor_id = 0x64ff9fd5_u32
      
      property chats : Array(Chat)
      
      def initialize(
        @chats : Array(Chat)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@chats.size, IO::ByteFormat::LittleEndian)
        @chats.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChatsSlice < Chats
      getter constructor_id = 0x9cd81144_u32
      
      property count : Int32
      property chats : Array(Chat)
      
      def initialize(
        @count : Int32,
        @chats : Array(Chat)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@count, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@chats.size, IO::ByteFormat::LittleEndian)
        @chats.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ChatFull < TLObject
      getter constructor_id = 0xe5d7d19c_u32
      
      property full_chat : ChatFull
      property chats : Array(Chat)
      property users : Array(User)
      
      def initialize(
        @full_chat : ChatFull,
        @chats : Array(Chat),
        @users : Array(User)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@full_chat.to_bytes)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@chats.size, IO::ByteFormat::LittleEndian)
        @chats.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@users.size, IO::ByteFormat::LittleEndian)
        @users.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class AffectedHistory < TLObject
      getter constructor_id = 0xb45c69d1_u32
      
      property pts : Int32
      property pts_count : Int32
      property offset : Int32
      
      def initialize(
        @pts : Int32,
        @pts_count : Int32,
        @offset : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@pts, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@pts_count, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@offset, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class DhConfigNotModified < DhConfig
      getter constructor_id = 0xc0e24635_u32
      
      property random : Bytes
      
      def initialize(
        @random : Bytes
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@random)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class DhConfig < TLObject
      getter constructor_id = 0x2c221edd_u32
      
      property g : Int32
      property p : Bytes
      property version : Int32
      property random : Bytes
      
      def initialize(
        @g : Int32,
        @p : Bytes,
        @version : Int32,
        @random : Bytes
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@g, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@p)
        buffer.write_bytes(@version, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@random)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SentEncryptedMessage < TLObject
      getter constructor_id = 0x560f8935_u32
      
      property date : Int32
      
      def initialize(
        @date : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SentEncryptedFile < SentEncryptedMessage
      getter constructor_id = 0x9493ff32_u32
      
      property date : Int32
      property file : EncryptedFile
      
      def initialize(
        @date : Int32,
        @file : EncryptedFile
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@date, IO::ByteFormat::LittleEndian)
        buffer.write(@file.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class StickersNotModified < Stickers
      getter constructor_id = 0xf1749a22_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class Stickers < TLObject
      getter constructor_id = 0xe4599bbd_u32
      
      property hash : Int32
      property stickers : Array(Document)
      
      def initialize(
        @hash : Int32,
        @stickers : Array(Document)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@hash, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@stickers.size, IO::ByteFormat::LittleEndian)
        @stickers.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class AllStickersNotModified < AllStickers
      getter constructor_id = 0xe86602c3_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class AllStickers < TLObject
      getter constructor_id = 0xedfd405f_u32
      
      property hash : Int32
      property sets : Array(StickerSet)
      
      def initialize(
        @hash : Int32,
        @sets : Array(StickerSet)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@hash, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@sets.size, IO::ByteFormat::LittleEndian)
        @sets.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class AffectedMessages < TLObject
      getter constructor_id = 0x84d19185_u32
      
      property pts : Int32
      property pts_count : Int32
      
      def initialize(
        @pts : Int32,
        @pts_count : Int32
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@pts, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@pts_count, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class StickerSet < TLObject
      getter constructor_id = 0xb60a24a6_u32
      
      property set : StickerSet
      property packs : Array(StickerPack)
      property documents : Array(Document)
      
      def initialize(
        @set : StickerSet,
        @packs : Array(StickerPack),
        @documents : Array(Document)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write(@set.to_bytes)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@packs.size, IO::ByteFormat::LittleEndian)
        @packs.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@documents.size, IO::ByteFormat::LittleEndian)
        @documents.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class FoundGifs < TLObject
      getter constructor_id = 0x450a1c0a_u32
      
      property next_offset : Int32
      property results : Array(FoundGif)
      
      def initialize(
        @next_offset : Int32,
        @results : Array(FoundGif)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@next_offset, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@results.size, IO::ByteFormat::LittleEndian)
        @results.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SavedGifsNotModified < SavedGifs
      getter constructor_id = 0xe8025ca2_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SavedGifs < TLObject
      getter constructor_id = 0x2e0709a5_u32
      
      property hash : Int32
      property gifs : Array(Document)
      
      def initialize(
        @hash : Int32,
        @gifs : Array(Document)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@hash, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@gifs.size, IO::ByteFormat::LittleEndian)
        @gifs.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class BotResults < TLObject
      getter constructor_id = 0x947ca848_u32
      
      property query_id : Int64
      property results : Array(BotInlineResult)
      property cache_time : Int32
      property users : Array(User)
      property gallery : Bool?
      property next_offset : String?
      property switch_pm : InlineBotSwitchPM?
      
      def initialize(
        @query_id : Int64,
        @results : Array(BotInlineResult),
        @cache_time : Int32,
        @users : Array(User),
        @gallery : Bool = false,
        @next_offset : String? = nil,
        @switch_pm : InlineBotSwitchPM? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@gallery ? 0 : 0)
        buffer.write_byte(@next_offset ? 1 : 0)
        buffer.write_byte(@switch_pm ? 2 : 0)
        buffer.write_bytes(@query_id, IO::ByteFormat::LittleEndian)
        buffer.write(TLObject.serialize_bytes(@next_offset)
        buffer.write(@switch_pm.to_bytes)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@results.size, IO::ByteFormat::LittleEndian)
        @results.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(@cache_time, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@users.size, IO::ByteFormat::LittleEndian)
        @users.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class BotCallbackAnswer < TLObject
      getter constructor_id = 0x36585ea4_u32
      
      property cache_time : Int32
      property message : String?
      property alert : Bool?
      property url : String?
      property has_url : Bool?
      property native_ui : Bool?
      
      def initialize(
        @cache_time : Int32,
        @message : String? = nil,
        @alert : Bool = false,
        @url : String? = nil,
        @has_url : Bool = false,
        @native_ui : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@alert ? 1 : 0)
        buffer.write_byte(@has_url ? 3 : 0)
        buffer.write_byte(@native_ui ? 4 : 0)
        buffer.write_byte(@message ? 0 : 0)
        buffer.write_byte(@url ? 2 : 0)
        buffer.write(TLObject.serialize_bytes(@message)
        buffer.write(TLObject.serialize_bytes(@url)
        buffer.write_bytes(@cache_time, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class MessageEditData < TLObject
      getter constructor_id = 0x26b5dde6_u32
      
      property caption : Bool?
      
      def initialize(
        @caption : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@caption ? 0 : 0)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class PeerDialogs < TLObject
      getter constructor_id = 0x3371c354_u32
      
      property dialogs : Array(Dialog)
      property messages : Array(Message)
      property chats : Array(Chat)
      property users : Array(User)
      property state : State
      
      def initialize(
        @dialogs : Array(Dialog),
        @messages : Array(Message),
        @chats : Array(Chat),
        @users : Array(User),
        @state : State
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@dialogs.size, IO::ByteFormat::LittleEndian)
        @dialogs.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@messages.size, IO::ByteFormat::LittleEndian)
        @messages.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@chats.size, IO::ByteFormat::LittleEndian)
        @chats.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@users.size, IO::ByteFormat::LittleEndian)
        @users.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write(@state.to_bytes)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class FeaturedStickersNotModified < FeaturedStickers
      getter constructor_id = 0x04ede3cf_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class FeaturedStickers < TLObject
      getter constructor_id = 0xf89d88e5_u32
      
      property hash : Int32
      property sets : Array(StickerSetCovered)
      property unread : Array(Int64)
      
      def initialize(
        @hash : Int32,
        @sets : Array(StickerSetCovered),
        @unread : Array(Int64)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@hash, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@sets.size, IO::ByteFormat::LittleEndian)
        @sets.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@unread.size, IO::ByteFormat::LittleEndian)
        @unread.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class RecentStickersNotModified < RecentStickers
      getter constructor_id = 0x0b17f890_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class RecentStickers < TLObject
      getter constructor_id = 0x22f3afb3_u32
      
      property hash : Int32
      property packs : Array(StickerPack)
      property stickers : Array(Document)
      property dates : Array(Int32)
      
      def initialize(
        @hash : Int32,
        @packs : Array(StickerPack),
        @stickers : Array(Document),
        @dates : Array(Int32)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@hash, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@packs.size, IO::ByteFormat::LittleEndian)
        @packs.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@stickers.size, IO::ByteFormat::LittleEndian)
        @stickers.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@dates.size, IO::ByteFormat::LittleEndian)
        @dates.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class ArchivedStickers < TLObject
      getter constructor_id = 0x4fcba9c8_u32
      
      property count : Int32
      property sets : Array(StickerSetCovered)
      
      def initialize(
        @count : Int32,
        @sets : Array(StickerSetCovered)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@count, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@sets.size, IO::ByteFormat::LittleEndian)
        @sets.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class StickerSetInstallResultSuccess < StickerSetInstallResult
      getter constructor_id = 0x38641628_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class StickerSetInstallResultArchive < StickerSetInstallResult
      getter constructor_id = 0x35e410a8_u32
      
      property sets : Array(StickerSetCovered)
      
      def initialize(
        @sets : Array(StickerSetCovered)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@sets.size, IO::ByteFormat::LittleEndian)
        @sets.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class HighScores < TLObject
      getter constructor_id = 0x9a3bfd99_u32
      
      property scores : Array(HighScore)
      property users : Array(User)
      
      def initialize(
        @scores : Array(HighScore),
        @users : Array(User)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@scores.size, IO::ByteFormat::LittleEndian)
        @scores.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@users.size, IO::ByteFormat::LittleEndian)
        @users.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class FavedStickersNotModified < FavedStickers
      getter constructor_id = 0x9e8fa6d3_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class FavedStickers < TLObject
      getter constructor_id = 0xf37f2f16_u32
      
      property hash : Int32
      property packs : Array(StickerPack)
      property stickers : Array(Document)
      
      def initialize(
        @hash : Int32,
        @packs : Array(StickerPack),
        @stickers : Array(Document)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@hash, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@packs.size, IO::ByteFormat::LittleEndian)
        @packs.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@stickers.size, IO::ByteFormat::LittleEndian)
        @stickers.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class FoundStickerSetsNotModified < FoundStickerSets
      getter constructor_id = 0x0d54b65d_u32
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class FoundStickerSets < TLObject
      getter constructor_id = 0x5108d648_u32
      
      property hash : Int32
      property sets : Array(StickerSetCovered)
      
      def initialize(
        @hash : Int32,
        @sets : Array(StickerSetCovered)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@hash, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@sets.size, IO::ByteFormat::LittleEndian)
        @sets.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class SearchCounter < TLObject
      getter constructor_id = 0xe844ebff_u32
      
      property filter : MessagesFilter
      property count : Int32
      property inexact : Bool?
      
      def initialize(
        @filter : MessagesFilter,
        @count : Int32,
        @inexact : Bool = false
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@inexact ? 1 : 0)
        buffer.write(@filter.to_bytes)
        buffer.write_bytes(@count, IO::ByteFormat::LittleEndian)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class InactiveChats < TLObject
      getter constructor_id = 0xa927fec5_u32
      
      property dates : Array(Int32)
      property chats : Array(Chat)
      property users : Array(User)
      
      def initialize(
        @dates : Array(Int32),
        @chats : Array(Chat),
        @users : Array(User)
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@dates.size, IO::ByteFormat::LittleEndian)
        @dates.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@chats.size, IO::ByteFormat::LittleEndian)
        @chats.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@users.size, IO::ByteFormat::LittleEndian)
        @users.each do |val|
          builder.write(val.to_bytes)
        end
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
    
    class VotesList < TLObject
      getter constructor_id = 0x0823f649_u32
      
      property count : Int32
      property votes : Array(MessageUserVote)
      property users : Array(User)
      property next_offset : String?
      
      def initialize(
        @count : Int32,
        @votes : Array(MessageUserVote),
        @users : Array(User),
        @next_offset : String? = nil
      )
      end
      
      def to_bytes
        buffer = IO::Memory.new
        buffer.write_bytes(self.constructor_id, IO::ByteFormat::LittleEndian)
        buffer.write_byte(@next_offset ? 0 : 0)
        buffer.write_bytes(@count, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@votes.size, IO::ByteFormat::LittleEndian)
        @votes.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write_bytes(0x15c4b51c_u32, IO::ByteFormat::LittleEndian)
        buffer.write_bytes(@users.size, IO::ByteFormat::LittleEndian)
        @users.each do |val|
          builder.write(val.to_bytes)
        end
        buffer.write(TLObject.serialize_bytes(@next_offset)
        buffer
      end
      
      def self.from_bytes(bytes)
      end
    end
  end
end
